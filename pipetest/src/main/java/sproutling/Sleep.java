/*
 * Copyright (c) 2017 Mattel, Inc. All rights reserved.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sleep.proto

package sproutling;

public final class Sleep {
  private Sleep() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SleepPredictionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SleepPrediction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <pre>
     * The Device Serial Number.
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    String getSerial();
    /**
     * <pre>
     * The Device Serial Number.
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    com.google.protobuf.ByteString
        getSerialBytes();

    /**
     * <pre>
     * Predicted Sleep duration in minutes.
     * </pre>
     *
     * <code>optional uint32 predicted_sleep_duration = 3;</code>
     */
    int getPredictedSleepDuration();

    /**
     * <pre>
     * Prediction error
     * </pre>
     *
     * <code>optional string error = 4;</code>
     */
    String getError();
    /**
     * <pre>
     * Prediction error
     * </pre>
     *
     * <code>optional string error = 4;</code>
     */
    com.google.protobuf.ByteString
        getErrorBytes();

    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    boolean hasNapBegan();
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    com.google.protobuf.Timestamp getNapBegan();
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder();

    /**
     * <pre>
     * Lower bound of sleep prediction
     * </pre>
     *
     * <code>optional uint32 prediction_lower_bound = 6;</code>
     */
    int getPredictionLowerBound();

    /**
     * <pre>
     * Upper bound of sleep prediction
     * </pre>
     *
     * <code>optional uint32 prediction_upper_bound = 7;</code>
     */
    int getPredictionUpperBound();
  }
  /**
   * <pre>
   * SleepPrediction is a prediction for when a baby will sleep.
   * [/device/hub/{SN}/sleep/prediction]
   * </pre>
   *
   * Protobuf type {@code SleepPrediction}
   */
  public  static final class SleepPrediction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SleepPrediction)
      SleepPredictionOrBuilder {
    // Use SleepPrediction.newBuilder() to construct.
    private SleepPrediction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SleepPrediction() {
      serial_ = "";
      predictedSleepDuration_ = 0;
      error_ = "";
      predictionLowerBound_ = 0;
      predictionUpperBound_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SleepPrediction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timestamp_ != null) {
                subBuilder = timestamp_.toBuilder();
              }
              timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestamp_);
                timestamp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              serial_ = s;
              break;
            }
            case 24: {

              predictedSleepDuration_ = input.readUInt32();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              error_ = s;
              break;
            }
            case 42: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (napBegan_ != null) {
                subBuilder = napBegan_.toBuilder();
              }
              napBegan_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(napBegan_);
                napBegan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              predictionLowerBound_ = input.readUInt32();
              break;
            }
            case 56: {

              predictionUpperBound_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Sleep.internal_static_SleepPrediction_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Sleep.internal_static_SleepPrediction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SleepPrediction.class, Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }
    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * The time the preidictionprediction was made.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return getTimestamp();
    }

    public static final int SERIAL_FIELD_NUMBER = 2;
    private volatile Object serial_;
    /**
     * <pre>
     * The Device Serial Number.
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    public String getSerial() {
      Object ref = serial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serial_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The Device Serial Number.
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSerialBytes() {
      Object ref = serial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREDICTED_SLEEP_DURATION_FIELD_NUMBER = 3;
    private int predictedSleepDuration_;
    /**
     * <pre>
     * Predicted Sleep duration in minutes.
     * </pre>
     *
     * <code>optional uint32 predicted_sleep_duration = 3;</code>
     */
    public int getPredictedSleepDuration() {
      return predictedSleepDuration_;
    }

    public static final int ERROR_FIELD_NUMBER = 4;
    private volatile Object error_;
    /**
     * <pre>
     * Prediction error
     * </pre>
     *
     * <code>optional string error = 4;</code>
     */
    public String getError() {
      Object ref = error_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        error_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Prediction error
     * </pre>
     *
     * <code>optional string error = 4;</code>
     */
    public com.google.protobuf.ByteString
        getErrorBytes() {
      Object ref = error_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAP_BEGAN_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp napBegan_;
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    public boolean hasNapBegan() {
      return napBegan_ != null;
    }
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    public com.google.protobuf.Timestamp getNapBegan() {
      return napBegan_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
    }
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder() {
      return getNapBegan();
    }

    public static final int PREDICTION_LOWER_BOUND_FIELD_NUMBER = 6;
    private int predictionLowerBound_;
    /**
     * <pre>
     * Lower bound of sleep prediction
     * </pre>
     *
     * <code>optional uint32 prediction_lower_bound = 6;</code>
     */
    public int getPredictionLowerBound() {
      return predictionLowerBound_;
    }

    public static final int PREDICTION_UPPER_BOUND_FIELD_NUMBER = 7;
    private int predictionUpperBound_;
    /**
     * <pre>
     * Upper bound of sleep prediction
     * </pre>
     *
     * <code>optional uint32 prediction_upper_bound = 7;</code>
     */
    public int getPredictionUpperBound() {
      return predictionUpperBound_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != null) {
        output.writeMessage(1, getTimestamp());
      }
      if (!getSerialBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serial_);
      }
      if (predictedSleepDuration_ != 0) {
        output.writeUInt32(3, predictedSleepDuration_);
      }
      if (!getErrorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, error_);
      }
      if (napBegan_ != null) {
        output.writeMessage(5, getNapBegan());
      }
      if (predictionLowerBound_ != 0) {
        output.writeUInt32(6, predictionLowerBound_);
      }
      if (predictionUpperBound_ != 0) {
        output.writeUInt32(7, predictionUpperBound_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      if (!getSerialBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serial_);
      }
      if (predictedSleepDuration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, predictedSleepDuration_);
      }
      if (!getErrorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, error_);
      }
      if (napBegan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNapBegan());
      }
      if (predictionLowerBound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, predictionLowerBound_);
      }
      if (predictionUpperBound_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, predictionUpperBound_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SleepPrediction)) {
        return super.equals(obj);
      }
      SleepPrediction other = (SleepPrediction) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && getTimestamp()
            .equals(other.getTimestamp());
      }
      result = result && getSerial()
          .equals(other.getSerial());
      result = result && (getPredictedSleepDuration()
          == other.getPredictedSleepDuration());
      result = result && getError()
          .equals(other.getError());
      result = result && (hasNapBegan() == other.hasNapBegan());
      if (hasNapBegan()) {
        result = result && getNapBegan()
            .equals(other.getNapBegan());
      }
      result = result && (getPredictionLowerBound()
          == other.getPredictionLowerBound());
      result = result && (getPredictionUpperBound()
          == other.getPredictionUpperBound());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (37 * hash) + SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getSerial().hashCode();
      hash = (37 * hash) + PREDICTED_SLEEP_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getPredictedSleepDuration();
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
      if (hasNapBegan()) {
        hash = (37 * hash) + NAP_BEGAN_FIELD_NUMBER;
        hash = (53 * hash) + getNapBegan().hashCode();
      }
      hash = (37 * hash) + PREDICTION_LOWER_BOUND_FIELD_NUMBER;
      hash = (53 * hash) + getPredictionLowerBound();
      hash = (37 * hash) + PREDICTION_UPPER_BOUND_FIELD_NUMBER;
      hash = (53 * hash) + getPredictionUpperBound();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SleepPrediction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SleepPrediction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SleepPrediction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SleepPrediction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SleepPrediction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SleepPrediction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SleepPrediction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SleepPrediction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SleepPrediction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SleepPrediction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SleepPrediction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SleepPrediction is a prediction for when a baby will sleep.
     * [/device/hub/{SN}/sleep/prediction]
     * </pre>
     *
     * Protobuf type {@code SleepPrediction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SleepPrediction)
        SleepPredictionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Sleep.internal_static_SleepPrediction_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Sleep.internal_static_SleepPrediction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SleepPrediction.class, Builder.class);
      }

      // Construct using Sleep.SleepPrediction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (timestampBuilder_ == null) {
          timestamp_ = null;
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }
        serial_ = "";

        predictedSleepDuration_ = 0;

        error_ = "";

        if (napBeganBuilder_ == null) {
          napBegan_ = null;
        } else {
          napBegan_ = null;
          napBeganBuilder_ = null;
        }
        predictionLowerBound_ = 0;

        predictionUpperBound_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Sleep.internal_static_SleepPrediction_descriptor;
      }

      public SleepPrediction getDefaultInstanceForType() {
        return SleepPrediction.getDefaultInstance();
      }

      public SleepPrediction build() {
        SleepPrediction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SleepPrediction buildPartial() {
        SleepPrediction result = new SleepPrediction(this);
        if (timestampBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        result.serial_ = serial_;
        result.predictedSleepDuration_ = predictedSleepDuration_;
        result.error_ = error_;
        if (napBeganBuilder_ == null) {
          result.napBegan_ = napBegan_;
        } else {
          result.napBegan_ = napBeganBuilder_.build();
        }
        result.predictionLowerBound_ = predictionLowerBound_;
        result.predictionUpperBound_ = predictionUpperBound_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SleepPrediction) {
          return mergeFrom((SleepPrediction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SleepPrediction other) {
        if (other == SleepPrediction.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (!other.getSerial().isEmpty()) {
          serial_ = other.serial_;
          onChanged();
        }
        if (other.getPredictedSleepDuration() != 0) {
          setPredictedSleepDuration(other.getPredictedSleepDuration());
        }
        if (!other.getError().isEmpty()) {
          error_ = other.error_;
          onChanged();
        }
        if (other.hasNapBegan()) {
          mergeNapBegan(other.getNapBegan());
        }
        if (other.getPredictionLowerBound() != 0) {
          setPredictionLowerBound(other.getPredictionLowerBound());
        }
        if (other.getPredictionUpperBound() != 0) {
          setPredictionUpperBound(other.getPredictionUpperBound());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SleepPrediction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SleepPrediction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Timestamp timestamp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return timestampBuilder_ != null || timestamp_ != null;
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
          onChanged();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
            timestamp_ = value;
          }
          onChanged();
        } else {
          timestampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * The time the preidictionprediction was made.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private Object serial_ = "";
      /**
       * <pre>
       * The Device Serial Number.
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public String getSerial() {
        Object ref = serial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serial_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The Device Serial Number.
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSerialBytes() {
        Object ref = serial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The Device Serial Number.
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder setSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Device Serial Number.
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder clearSerial() {

        serial_ = getDefaultInstance().getSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Device Serial Number.
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder setSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        serial_ = value;
        onChanged();
        return this;
      }

      private int predictedSleepDuration_ ;
      /**
       * <pre>
       * Predicted Sleep duration in minutes.
       * </pre>
       *
       * <code>optional uint32 predicted_sleep_duration = 3;</code>
       */
      public int getPredictedSleepDuration() {
        return predictedSleepDuration_;
      }
      /**
       * <pre>
       * Predicted Sleep duration in minutes.
       * </pre>
       *
       * <code>optional uint32 predicted_sleep_duration = 3;</code>
       */
      public Builder setPredictedSleepDuration(int value) {

        predictedSleepDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Predicted Sleep duration in minutes.
       * </pre>
       *
       * <code>optional uint32 predicted_sleep_duration = 3;</code>
       */
      public Builder clearPredictedSleepDuration() {

        predictedSleepDuration_ = 0;
        onChanged();
        return this;
      }

      private Object error_ = "";
      /**
       * <pre>
       * Prediction error
       * </pre>
       *
       * <code>optional string error = 4;</code>
       */
      public String getError() {
        Object ref = error_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          error_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * Prediction error
       * </pre>
       *
       * <code>optional string error = 4;</code>
       */
      public com.google.protobuf.ByteString
          getErrorBytes() {
        Object ref = error_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          error_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Prediction error
       * </pre>
       *
       * <code>optional string error = 4;</code>
       */
      public Builder setError(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Prediction error
       * </pre>
       *
       * <code>optional string error = 4;</code>
       */
      public Builder clearError() {

        error_ = getDefaultInstance().getError();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Prediction error
       * </pre>
       *
       * <code>optional string error = 4;</code>
       */
      public Builder setErrorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        error_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp napBegan_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> napBeganBuilder_;
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public boolean hasNapBegan() {
        return napBeganBuilder_ != null || napBegan_ != null;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public com.google.protobuf.Timestamp getNapBegan() {
        if (napBeganBuilder_ == null) {
          return napBegan_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
        } else {
          return napBeganBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public Builder setNapBegan(com.google.protobuf.Timestamp value) {
        if (napBeganBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          napBegan_ = value;
          onChanged();
        } else {
          napBeganBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public Builder setNapBegan(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (napBeganBuilder_ == null) {
          napBegan_ = builderForValue.build();
          onChanged();
        } else {
          napBeganBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public Builder mergeNapBegan(com.google.protobuf.Timestamp value) {
        if (napBeganBuilder_ == null) {
          if (napBegan_ != null) {
            napBegan_ =
              com.google.protobuf.Timestamp.newBuilder(napBegan_).mergeFrom(value).buildPartial();
          } else {
            napBegan_ = value;
          }
          onChanged();
        } else {
          napBeganBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public Builder clearNapBegan() {
        if (napBeganBuilder_ == null) {
          napBegan_ = null;
          onChanged();
        } else {
          napBegan_ = null;
          napBeganBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public com.google.protobuf.Timestamp.Builder getNapBeganBuilder() {

        onChanged();
        return getNapBeganFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder() {
        if (napBeganBuilder_ != null) {
          return napBeganBuilder_.getMessageOrBuilder();
        } else {
          return napBegan_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
        }
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
          getNapBeganFieldBuilder() {
        if (napBeganBuilder_ == null) {
          napBeganBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getNapBegan(),
                  getParentForChildren(),
                  isClean());
          napBegan_ = null;
        }
        return napBeganBuilder_;
      }

      private int predictionLowerBound_ ;
      /**
       * <pre>
       * Lower bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_lower_bound = 6;</code>
       */
      public int getPredictionLowerBound() {
        return predictionLowerBound_;
      }
      /**
       * <pre>
       * Lower bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_lower_bound = 6;</code>
       */
      public Builder setPredictionLowerBound(int value) {

        predictionLowerBound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Lower bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_lower_bound = 6;</code>
       */
      public Builder clearPredictionLowerBound() {

        predictionLowerBound_ = 0;
        onChanged();
        return this;
      }

      private int predictionUpperBound_ ;
      /**
       * <pre>
       * Upper bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_upper_bound = 7;</code>
       */
      public int getPredictionUpperBound() {
        return predictionUpperBound_;
      }
      /**
       * <pre>
       * Upper bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_upper_bound = 7;</code>
       */
      public Builder setPredictionUpperBound(int value) {

        predictionUpperBound_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Upper bound of sleep prediction
       * </pre>
       *
       * <code>optional uint32 prediction_upper_bound = 7;</code>
       */
      public Builder clearPredictionUpperBound() {

        predictionUpperBound_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SleepPrediction)
    }

    // @@protoc_insertion_point(class_scope:SleepPrediction)
    private static final SleepPrediction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SleepPrediction();
    }

    public static SleepPrediction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SleepPrediction>
        PARSER = new com.google.protobuf.AbstractParser<SleepPrediction>() {
      public SleepPrediction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SleepPrediction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SleepPrediction> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SleepPrediction> getParserForType() {
      return PARSER;
    }

    public SleepPrediction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SleepStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SleepStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <pre>
     * The device serial number
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    String getSerial();
    /**
     * <pre>
     * The device serial number
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    com.google.protobuf.ByteString
        getSerialBytes();

    /**
     * <pre>
     * The current sleep state
     * </pre>
     *
     * <code>optional .SleepStatus.State sleep_state = 3;</code>
     */
    int getSleepStateValue();
    /**
     * <pre>
     * The current sleep state
     * </pre>
     *
     * <code>optional .SleepStatus.State sleep_state = 3;</code>
     */
    SleepStatus.State getSleepState();

    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    boolean hasNapBegan();
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    com.google.protobuf.Timestamp getNapBegan();
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder();
  }
  /**
   * <pre>
   * SleepStatus is a measurement of the current sleep state and nap that is in progress
   * [/device/hub/{SN}/sleep/status]
   * </pre>
   *
   * Protobuf type {@code SleepStatus}
   */
  public  static final class SleepStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SleepStatus)
      SleepStatusOrBuilder {
    // Use SleepStatus.newBuilder() to construct.
    private SleepStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SleepStatus() {
      serial_ = "";
      sleepState_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SleepStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timestamp_ != null) {
                subBuilder = timestamp_.toBuilder();
              }
              timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestamp_);
                timestamp_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              serial_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              sleepState_ = rawValue;
              break;
            }
            case 34: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (napBegan_ != null) {
                subBuilder = napBegan_.toBuilder();
              }
              napBegan_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(napBegan_);
                napBegan_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Sleep.internal_static_SleepStatus_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Sleep.internal_static_SleepStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SleepStatus.class, Builder.class);
    }

    /**
     * Protobuf enum {@code SleepStatus.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SLEEPING = 0;</code>
       */
      SLEEPING(0),
      /**
       * <code>STIRRING = 1;</code>
       */
      STIRRING(1),
      /**
       * <code>AWAKE = 2;</code>
       */
      AWAKE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>SLEEPING = 0;</code>
       */
      public static final int SLEEPING_VALUE = 0;
      /**
       * <code>STIRRING = 1;</code>
       */
      public static final int STIRRING_VALUE = 1;
      /**
       * <code>AWAKE = 2;</code>
       */
      public static final int AWAKE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      public static State forNumber(int value) {
        switch (value) {
          case 0: return SLEEPING;
          case 1: return STIRRING;
          case 2: return AWAKE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SleepStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SleepStatus.State)
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }
    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * Timestamp of the status message
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return getTimestamp();
    }

    public static final int SERIAL_FIELD_NUMBER = 2;
    private volatile Object serial_;
    /**
     * <pre>
     * The device serial number
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    public String getSerial() {
      Object ref = serial_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serial_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The device serial number
     * </pre>
     *
     * <code>optional string serial = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSerialBytes() {
      Object ref = serial_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SLEEP_STATE_FIELD_NUMBER = 3;
    private int sleepState_;
    /**
     * <pre>
     * The current sleep state
     * </pre>
     *
     * <code>optional .SleepStatus.State sleep_state = 3;</code>
     */
    public int getSleepStateValue() {
      return sleepState_;
    }
    /**
     * <pre>
     * The current sleep state
     * </pre>
     *
     * <code>optional .SleepStatus.State sleep_state = 3;</code>
     */
    public State getSleepState() {
      State result = State.valueOf(sleepState_);
      return result == null ? State.UNRECOGNIZED : result;
    }

    public static final int NAP_BEGAN_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp napBegan_;
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    public boolean hasNapBegan() {
      return napBegan_ != null;
    }
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    public com.google.protobuf.Timestamp getNapBegan() {
      return napBegan_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
    }
    /**
     * <pre>
     * Timestamp when the currently tracked nap started
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder() {
      return getNapBegan();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != null) {
        output.writeMessage(1, getTimestamp());
      }
      if (!getSerialBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serial_);
      }
      if (sleepState_ != State.SLEEPING.getNumber()) {
        output.writeEnum(3, sleepState_);
      }
      if (napBegan_ != null) {
        output.writeMessage(4, getNapBegan());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      if (!getSerialBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serial_);
      }
      if (sleepState_ != State.SLEEPING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, sleepState_);
      }
      if (napBegan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getNapBegan());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SleepStatus)) {
        return super.equals(obj);
      }
      SleepStatus other = (SleepStatus) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && getTimestamp()
            .equals(other.getTimestamp());
      }
      result = result && getSerial()
          .equals(other.getSerial());
      result = result && sleepState_ == other.sleepState_;
      result = result && (hasNapBegan() == other.hasNapBegan());
      if (hasNapBegan()) {
        result = result && getNapBegan()
            .equals(other.getNapBegan());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (37 * hash) + SERIAL_FIELD_NUMBER;
      hash = (53 * hash) + getSerial().hashCode();
      hash = (37 * hash) + SLEEP_STATE_FIELD_NUMBER;
      hash = (53 * hash) + sleepState_;
      if (hasNapBegan()) {
        hash = (37 * hash) + NAP_BEGAN_FIELD_NUMBER;
        hash = (53 * hash) + getNapBegan().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SleepStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SleepStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SleepStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SleepStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SleepStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SleepStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SleepStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SleepStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SleepStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SleepStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SleepStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SleepStatus is a measurement of the current sleep state and nap that is in progress
     * [/device/hub/{SN}/sleep/status]
     * </pre>
     *
     * Protobuf type {@code SleepStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SleepStatus)
        SleepStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Sleep.internal_static_SleepStatus_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Sleep.internal_static_SleepStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SleepStatus.class, Builder.class);
      }

      // Construct using Sleep.SleepStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (timestampBuilder_ == null) {
          timestamp_ = null;
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }
        serial_ = "";

        sleepState_ = 0;

        if (napBeganBuilder_ == null) {
          napBegan_ = null;
        } else {
          napBegan_ = null;
          napBeganBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Sleep.internal_static_SleepStatus_descriptor;
      }

      public SleepStatus getDefaultInstanceForType() {
        return SleepStatus.getDefaultInstance();
      }

      public SleepStatus build() {
        SleepStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SleepStatus buildPartial() {
        SleepStatus result = new SleepStatus(this);
        if (timestampBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        result.serial_ = serial_;
        result.sleepState_ = sleepState_;
        if (napBeganBuilder_ == null) {
          result.napBegan_ = napBegan_;
        } else {
          result.napBegan_ = napBeganBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SleepStatus) {
          return mergeFrom((SleepStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SleepStatus other) {
        if (other == SleepStatus.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (!other.getSerial().isEmpty()) {
          serial_ = other.serial_;
          onChanged();
        }
        if (other.sleepState_ != 0) {
          setSleepStateValue(other.getSleepStateValue());
        }
        if (other.hasNapBegan()) {
          mergeNapBegan(other.getNapBegan());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SleepStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SleepStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Timestamp timestamp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return timestampBuilder_ != null || timestamp_ != null;
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
          onChanged();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
            timestamp_ = value;
          }
          onChanged();
        } else {
          timestampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * Timestamp of the status message
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private Object serial_ = "";
      /**
       * <pre>
       * The device serial number
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public String getSerial() {
        Object ref = serial_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serial_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * The device serial number
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSerialBytes() {
        Object ref = serial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The device serial number
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder setSerial(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The device serial number
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder clearSerial() {

        serial_ = getDefaultInstance().getSerial();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The device serial number
       * </pre>
       *
       * <code>optional string serial = 2;</code>
       */
      public Builder setSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        serial_ = value;
        onChanged();
        return this;
      }

      private int sleepState_ = 0;
      /**
       * <pre>
       * The current sleep state
       * </pre>
       *
       * <code>optional .SleepStatus.State sleep_state = 3;</code>
       */
      public int getSleepStateValue() {
        return sleepState_;
      }
      /**
       * <pre>
       * The current sleep state
       * </pre>
       *
       * <code>optional .SleepStatus.State sleep_state = 3;</code>
       */
      public Builder setSleepStateValue(int value) {
        sleepState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The current sleep state
       * </pre>
       *
       * <code>optional .SleepStatus.State sleep_state = 3;</code>
       */
      public State getSleepState() {
        State result = State.valueOf(sleepState_);
        return result == null ? State.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The current sleep state
       * </pre>
       *
       * <code>optional .SleepStatus.State sleep_state = 3;</code>
       */
      public Builder setSleepState(State value) {
        if (value == null) {
          throw new NullPointerException();
        }

        sleepState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The current sleep state
       * </pre>
       *
       * <code>optional .SleepStatus.State sleep_state = 3;</code>
       */
      public Builder clearSleepState() {

        sleepState_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp napBegan_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> napBeganBuilder_;
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public boolean hasNapBegan() {
        return napBeganBuilder_ != null || napBegan_ != null;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public com.google.protobuf.Timestamp getNapBegan() {
        if (napBeganBuilder_ == null) {
          return napBegan_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
        } else {
          return napBeganBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public Builder setNapBegan(com.google.protobuf.Timestamp value) {
        if (napBeganBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          napBegan_ = value;
          onChanged();
        } else {
          napBeganBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public Builder setNapBegan(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (napBeganBuilder_ == null) {
          napBegan_ = builderForValue.build();
          onChanged();
        } else {
          napBeganBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public Builder mergeNapBegan(com.google.protobuf.Timestamp value) {
        if (napBeganBuilder_ == null) {
          if (napBegan_ != null) {
            napBegan_ =
              com.google.protobuf.Timestamp.newBuilder(napBegan_).mergeFrom(value).buildPartial();
          } else {
            napBegan_ = value;
          }
          onChanged();
        } else {
          napBeganBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public Builder clearNapBegan() {
        if (napBeganBuilder_ == null) {
          napBegan_ = null;
          onChanged();
        } else {
          napBegan_ = null;
          napBeganBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getNapBeganBuilder() {

        onChanged();
        return getNapBeganFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getNapBeganOrBuilder() {
        if (napBeganBuilder_ != null) {
          return napBeganBuilder_.getMessageOrBuilder();
        } else {
          return napBegan_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : napBegan_;
        }
      }
      /**
       * <pre>
       * Timestamp when the currently tracked nap started
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp nap_began = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
          getNapBeganFieldBuilder() {
        if (napBeganBuilder_ == null) {
          napBeganBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getNapBegan(),
                  getParentForChildren(),
                  isClean());
          napBegan_ = null;
        }
        return napBeganBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SleepStatus)
    }

    // @@protoc_insertion_point(class_scope:SleepStatus)
    private static final SleepStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SleepStatus();
    }

    public static SleepStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SleepStatus>
        PARSER = new com.google.protobuf.AbstractParser<SleepStatus>() {
      public SleepStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SleepStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SleepStatus> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SleepStatus> getParserForType() {
      return PARSER;
    }

    public SleepStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SleepPrediction_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SleepPrediction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SleepStatus_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SleepStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013sleep.proto\032\037google/protobuf/timestamp" +
      ".proto\"\360\001\n\017SleepPrediction\022-\n\ttimestamp\030" +
      "\001 \001(\0132\032.google.protobuf.Timestamp\022\016\n\006ser" +
      "ial\030\002 \001(\t\022 \n\030predicted_sleep_duration\030\003 " +
      "\001(\r\022\r\n\005error\030\004 \001(\t\022-\n\tnap_began\030\005 \001(\0132\032." +
      "google.protobuf.Timestamp\022\036\n\026prediction_" +
      "lower_bound\030\006 \001(\r\022\036\n\026prediction_upper_bo" +
      "und\030\007 \001(\r\"\324\001\n\013SleepStatus\022-\n\ttimestamp\030\001" +
      " \001(\0132\032.google.protobuf.Timestamp\022\016\n\006seri" +
      "al\030\002 \001(\t\022\'\n\013sleep_state\030\003 \001(\0162\022.SleepSta",
      "tus.State\022-\n\tnap_began\030\004 \001(\0132\032.google.pr" +
      "otobuf.Timestamp\".\n\005State\022\014\n\010SLEEPING\020\000\022" +
      "\014\n\010STIRRING\020\001\022\t\n\005AWAKE\020\002B/Z-github.com/S" +
      "proutling/common-go/protos;protosb\006proto" +
      "3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_SleepPrediction_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SleepPrediction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SleepPrediction_descriptor,
        new String[] { "Timestamp", "Serial", "PredictedSleepDuration", "Error", "NapBegan", "PredictionLowerBound", "PredictionUpperBound", });
    internal_static_SleepStatus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SleepStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SleepStatus_descriptor,
        new String[] { "Timestamp", "Serial", "SleepState", "NapBegan", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
