package sproutling;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hub.proto

public final class Hub {
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubPresence_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubPresence_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubStatus_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubStatus_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubAmbient_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubAmbient_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_FirmwareUpdate_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_FirmwareUpdate_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubControl_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubControl_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubLogging_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubLogging_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubCLI_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubCLI_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubCLIResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubCLIResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubUserConfiguration_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubUserConfiguration_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_HubUserConfigurationHidden_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_HubUserConfigurationHidden_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandState_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandState_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandStatus_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandStatus_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandTelemetry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandTelemetry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandRollover_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandRollover_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandRollover_Direction_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandRollover_Direction_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandRollover_Orientation_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandRollover_Orientation_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BandPresence_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BandPresence_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_BLEConnection_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_BLEConnection_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_WifiConnection_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_WifiConnection_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_LEDMode_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_LEDMode_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_LEDColor_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_LEDColor_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_MusicState_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_MusicState_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\thub.proto\032\037google/protobuf/timestamp.p" +
                        "roto\"\246\001\n\013HubPresence\0227\n\020connection_state" +
                        "\030\001 \001(\0162\035.HubPresence.ConnectionStates\022\030\n" +
                        "\020protocol_version\030\002 \001(\r\"D\n\020ConnectionSta" +
                        "tes\022\013\n\007UNKNOWN\020\000\022\013\n\007OFFLINE\020\001\022\n\n\006ONLINE\020" +
                        "\002\022\n\n\006REBOOT\020\003\"\334\004\n\tHubStatus\022-\n\ttimestamp" +
                        "\030\001 \001(\0132\032.google.protobuf.Timestamp\022#\n\010le" +
                        "d_mode\030\002 \001(\0162\021.LEDMode.LEDModes\022&\n\tled_c" +
                        "olor\030\003 \001(\0162\023.LEDColor.LEDColors\022\026\n\016led_b" +
                        "rightness\030\004 \001(\r\022,\n\013music_state\030\005 \001(\0162\027.M",
                "usicState.MusicStates\022\030\n\020music_play_coun" +
                        "t\030\006 \001(\r\022\022\n\nmusic_list\030\007 \003(\t\022\016\n\006volume\030\010 " +
                        "\001(\r\022\032\n\022ble_paired_devices\030\t \003(\014\022.\n\026ble_a" +
                        "ctive_connections\030\n \003(\0132\016.BLEConnection\022" +
                        "\020\n\010charging\030\013 \001(\010\022\030\n\020firmware_version\030\014 " +
                        "\001(\014\0223\n\025firmware_update_state\030\r \001(\0162\024.Fir" +
                        "mwareUpdateState\022(\n\017wifi_connection\030\016 \001(" +
                        "\0132\017.WifiConnection\022\031\n\021charging_complete\030" +
                        "\017 \001(\010\022\031\n\021ptu_load_detected\030\020 \001(\010\022\020\n\010time" +
                        "zone\030\021 \001(\t\022\031\n\021firmware_revision\030\022 \001(\t\022\025\n",
                "\rled_rgb_color\030\023 \003(\r\"\241\001\n\nHubAmbient\022-\n\tt" +
                        "imestamp\030\001 \001(\0132\032.google.protobuf.Timesta" +
                        "mp\022\031\n\021relative_humidity\030\002 \001(\r\022\025\n\rambient" +
                        "_light\030\003 \001(\r\022\025\n\rambient_noise\030\004 \001(\r\022\033\n\023a" +
                        "mbient_temperature\030\005 \001(\021\"\323\001\n\016FirmwareUpd" +
                        "ate\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobuf" +
                        ".Timestamp\022\021\n\tfile_size\030\002 \001(\r\022\013\n\003url\030\003 \001" +
                        "(\t\022\026\n\016force_firmware\030\004 \001(\010\022\023\n\013hub_versio" +
                        "n\030\005 \001(\t\022\030\n\020wearable_version\030\006 \001(\t\022\025\n\rext" +
                        "ra_version\030\007 \001(\t\022\024\n\014boot_version\030\010 \001(\t\"\313",
                "\002\n\nHubControl\022-\n\ttimestamp\030\001 \001(\0132\032.googl" +
                        "e.protobuf.Timestamp\022#\n\010led_mode\030\002 \001(\0162\021" +
                        ".LEDMode.LEDModes\022&\n\tled_color\030\003 \001(\0162\023.L" +
                        "EDColor.LEDColors\022\026\n\016led_brightness\030\004 \001(" +
                        "\r\022,\n\013music_state\030\005 \001(\0162\027.MusicState.Musi" +
                        "cStates\022\030\n\020music_play_count\030\006 \001(\r\022\022\n\nmus" +
                        "ic_list\030\007 \003(\t\022\016\n\006volume\030\010 \001(\r\022\021\n\tled_tim" +
                        "er\030\t \001(\r\022\023\n\013music_timer\030\n \001(\r\022\025\n\rled_rgb" +
                        "_color\030\013 \003(\r\"N\n\nHubLogging\022-\n\ttimestamp\030" +
                        "\001 \001(\0132\032.google.protobuf.Timestamp\022\021\n\tlog",
                "_level\030\002 \001(\r\"c\n\006HubCLI\022-\n\ttimestamp\030\001 \001(" +
                        "\0132\032.google.protobuf.Timestamp\022\023\n\013cli_com" +
                        "mand\030\002 \001(\t\022\025\n\rcli_signature\030\003 \001(\014\"\226\001\n\016Hu" +
                        "bCLIResponse\022-\n\ttimestamp\030\001 \001(\0132\032.google" +
                        ".protobuf.Timestamp\022\027\n\017cli_return_code\030\002" +
                        " \001(\r\022\022\n\ncli_stdout\030\003 \001(\t\022\022\n\ncli_stderr\030\004" +
                        " \001(\t\022\024\n\014cli_run_time\030\005 \001(\002\"~\n\024HubUserCon" +
                        "figuration\022-\n\ttimestamp\030\001 \001(\0132\032.google.p" +
                        "rotobuf.Timestamp\022\020\n\010timezone\030\002 \001(\t\022\021\n\tb" +
                        "le_alert\030\003 \001(\010\022\022\n\nwifi_alert\030\004 \001(\010\"w\n\032Hu",
                "bUserConfigurationHidden\022-\n\ttimestamp\030\001 " +
                        "\001(\0132\032.google.protobuf.Timestamp\022\023\n\013bpm_s" +
                        "amples\030\002 \001(\r\022\025\n\rbpm_threshold\030\003 \001(\r\"\346\001\n\t" +
                        "BandState\022-\n\ttimestamp\030\001 \001(\0132\032.google.pr" +
                        "otobuf.Timestamp\022\'\n\005state\030\002 \001(\0162\030.BandSt" +
                        "ate.WearableState\"\200\001\n\rWearableState\022\013\n\007U" +
                        "NKNOWN\020\000\022\013\n\007CHARGED\020\001\022\014\n\010CHARGING\020\002\022\r\n\tD" +
                        "ETECTING\020\003\022\t\n\005READY\020\004\022\020\n\014BATTERY_DEAD\020\005\022" +
                        "\r\n\tNOT_FOUND\020\006\022\014\n\010UPDATING\020\007\"\207\001\n\nBandSta" +
                        "tus\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobuf",
                ".Timestamp\022\027\n\017battery_voltage\030\002 \001(\r\022\030\n\020f" +
                        "irmware_version\030\003 \001(\014\022\027\n\017mcu_temperature" +
                        "\030\004 \001(\021\"\265\001\n\rBandTelemetry\022-\n\ttimestamp\030\001 " +
                        "\001(\0132\032.google.protobuf.Timestamp\022\016\n\006milli" +
                        "s\030\002 \001(\r\022\016\n\006hr_bpm\030\003 \001(\r\022\016\n\006hr_sqi\030\004 \001(\r\022" +
                        "\017\n\007accel_x\030\005 \001(\021\022\017\n\007accel_y\030\006 \001(\021\022\017\n\007acc" +
                        "el_z\030\007 \001(\021\022\022\n\nutc_offset\030\010 \001(\021\"\314\002\n\014BandR" +
                        "ollover\022-\n\ttimestamp\030\001 \001(\0132\032.google.prot" +
                        "obuf.Timestamp\022;\n\013orientation\030\002 \001(\0162&.Ba" +
                        "ndRollover.Orientation.Orientations\0225\n\td",
                "irection\030\003 \001(\0162\".BandRollover.Direction." +
                        "Directions\032V\n\tDirection\"I\n\nDirections\022\013\n" +
                        "\007UNKNOWN\020\000\022\013\n\007FORWARD\020\001\022\014\n\010BACKWARD\020\002\022\010\n" +
                        "\004LEFT\020\003\022\t\n\005RIGHT\020\004\032A\n\013Orientation\"2\n\014Ori" +
                        "entations\022\013\n\007UNKNOWN\020\000\022\010\n\004BACK\020\001\022\013\n\007STOM" +
                        "ACH\020\002\"X\n\014BandPresence\022-\n\ttimestamp\030\001 \001(\013" +
                        "2\032.google.protobuf.Timestamp\022\031\n\021presence" +
                        "_detected\030\002 \001(\010\"\205\001\n\rBLEConnection\022\014\n\004rss" +
                        "i\030\001 \001(\021\022%\n\004role\030\002 \001(\0162\027.BLEConnection.BL" +
                        "ERoles\022\017\n\007address\030\003 \001(\014\".\n\010BLERoles\022\013\n\007U",
                "NKNOWN\020\000\022\t\n\005SLAVE\020\001\022\n\n\006MASTER\020\002\"P\n\016WifiC" +
                        "onnection\022\021\n\tconnected\030\001 \001(\010\022\016\n\006signal\030\002" +
                        " \001(\021\022\014\n\004ssid\030\003 \001(\t\022\r\n\005bssid\030\004 \001(\014\"\221\001\n\007LE" +
                        "DMode\"\205\001\n\010LEDModes\022\013\n\007UNKNOWN\020\000\022\007\n\003OFF\020\001" +
                        "\022\013\n\007BREATHE\020\002\022\013\n\007FADE_ON\020\003\022\014\n\010FADE_OFF\020\004" +
                        "\022\020\n\014NORMAL_BLINK\020\005\022\016\n\nFAST_BLINK\020\006\022\r\n\tSE" +
                        "T_COLOR\020\007\022\n\n\006CANDLE\020\010\"w\n\010LEDColor\"k\n\tLED" +
                        "Colors\022\013\n\007UNKNOWN\020\000\022\010\n\004BLUE\020\001\022\t\n\005GREEN\020\002" +
                        "\022\007\n\003RED\020\003\022\t\n\005WHITE\020\004\022\n\n\006YELLOW\020\005\022\010\n\004PINK" +
                        "\020\006\022\t\n\005AMBER\020\007\022\007\n\003RGB\020\010\"G\n\nMusicState\"9\n\013",
                "MusicStates\022\013\n\007UNKNOWN\020\000\022\010\n\004STOP\020\001\022\010\n\004PL" +
                        "AY\020\002\022\t\n\005PAUSE\020\003*\316\005\n\023FirmwareUpdateState\022" +
                        "\021\n\rUNKNOWN_STATE\020\000\022\022\n\016DOWNLOAD_START\020\001\022\024" +
                        "\n\020DOWNLOAD_SUCCESS\020\002\022\021\n\rDOWNLOAD_FAIL\020\003\022" +
                        "\r\n\tZIP_VALID\020\004\022\017\n\013ZIP_INVALID\020\005\022\023\n\017HUB_F" +
                        "LASH_START\020\006\022\025\n\021HUB_FLASH_SUCCESS\020\007\022\022\n\016H" +
                        "UB_FLASH_FAIL\020\010\022\030\n\024WEARABLE_FLASH_START\020" +
                        "\t\022\032\n\026WEARABLE_FLASH_SUCCESS\020\n\022\027\n\023WEARABL" +
                        "E_FLASH_FAIL\020\013\022\025\n\021VERSION_INSTALLED\020\014\022\025\n" +
                        "\021SIGNATURE_INVALID\020\r\022\026\n\022DATA_EXTRACT_STA",
                "RT\020\016\022\030\n\024DATA_EXTRACT_SUCCESS\020\017\022\025\n\021DATA_E" +
                        "XTRACT_FAIL\020\020\022\024\n\020OTA_SCRIPT_START\020\021\022\026\n\022O" +
                        "TA_SCRIPT_SUCCESS\020\022\022\023\n\017OTA_SCRIPT_FAIL\020\023" +
                        "\022\022\n\016UPDATE_SUCCESS\020\024\022\027\n\023NO_WEARABLE_PRES" +
                        "ENT\020\025\022\030\n\024AUTHENTICATION_START\020\026\022\027\n\023AUTHE" +
                        "NTICATION_FAIL\020\027\022\030\n\024WEARABLE_FLASH_RETRY" +
                        "\020\030\022\023\n\017SPL_FLASH_START\020\031\022\025\n\021SPL_FLASH_SUC" +
                        "CESS\020\032\022\022\n\016SPL_FLASH_FAIL\020\033\022\025\n\021UBOOT_FLAS" +
                        "H_START\020\034\022\027\n\023UBOOT_FLASH_SUCCESS\020\035\022\024\n\020UB" +
                        "OOT_FLASH_FAIL\020\036B#Z!github.com/Mattel/pr",
                "otocol;protosb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                com.google.protobuf.TimestampProto.getDescriptor(),
                        }, assigner);
        internal_static_HubPresence_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_HubPresence_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubPresence_descriptor,
                new String[]{"ConnectionState", "ProtocolVersion",});
        internal_static_HubStatus_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_HubStatus_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubStatus_descriptor,
                new String[]{"Timestamp", "LedMode", "LedColor", "LedBrightness", "MusicState", "MusicPlayCount", "MusicList", "Volume", "BlePairedDevices", "BleActiveConnections", "Charging", "FirmwareVersion", "FirmwareUpdateState", "WifiConnection", "ChargingComplete", "PtuLoadDetected", "Timezone", "FirmwareRevision", "LedRgbColor",});
        internal_static_HubAmbient_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_HubAmbient_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubAmbient_descriptor,
                new String[]{"Timestamp", "RelativeHumidity", "AmbientLight", "AmbientNoise", "AmbientTemperature",});
        internal_static_FirmwareUpdate_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_FirmwareUpdate_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_FirmwareUpdate_descriptor,
                new String[]{"Timestamp", "FileSize", "Url", "ForceFirmware", "HubVersion", "WearableVersion", "ExtraVersion", "BootVersion",});
        internal_static_HubControl_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_HubControl_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubControl_descriptor,
                new String[]{"Timestamp", "LedMode", "LedColor", "LedBrightness", "MusicState", "MusicPlayCount", "MusicList", "Volume", "LedTimer", "MusicTimer", "LedRgbColor",});
        internal_static_HubLogging_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_HubLogging_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubLogging_descriptor,
                new String[]{"Timestamp", "LogLevel",});
        internal_static_HubCLI_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_HubCLI_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubCLI_descriptor,
                new String[]{"Timestamp", "CliCommand", "CliSignature",});
        internal_static_HubCLIResponse_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_HubCLIResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubCLIResponse_descriptor,
                new String[]{"Timestamp", "CliReturnCode", "CliStdout", "CliStderr", "CliRunTime",});
        internal_static_HubUserConfiguration_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_HubUserConfiguration_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubUserConfiguration_descriptor,
                new String[]{"Timestamp", "Timezone", "BleAlert", "WifiAlert",});
        internal_static_HubUserConfigurationHidden_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_HubUserConfigurationHidden_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_HubUserConfigurationHidden_descriptor,
                new String[]{"Timestamp", "BpmSamples", "BpmThreshold",});
        internal_static_BandState_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_BandState_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandState_descriptor,
                new String[]{"Timestamp", "State",});
        internal_static_BandStatus_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_BandStatus_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandStatus_descriptor,
                new String[]{"Timestamp", "BatteryVoltage", "FirmwareVersion", "McuTemperature",});
        internal_static_BandTelemetry_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_BandTelemetry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandTelemetry_descriptor,
                new String[]{"Timestamp", "Millis", "HrBpm", "HrSqi", "AccelX", "AccelY", "AccelZ", "UtcOffset",});
        internal_static_BandRollover_descriptor =
                getDescriptor().getMessageTypes().get(13);
        internal_static_BandRollover_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandRollover_descriptor,
                new String[]{"Timestamp", "Orientation", "Direction",});
        internal_static_BandRollover_Direction_descriptor =
                internal_static_BandRollover_descriptor.getNestedTypes().get(0);
        internal_static_BandRollover_Direction_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandRollover_Direction_descriptor,
                new String[]{});
        internal_static_BandRollover_Orientation_descriptor =
                internal_static_BandRollover_descriptor.getNestedTypes().get(1);
        internal_static_BandRollover_Orientation_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandRollover_Orientation_descriptor,
                new String[]{});
        internal_static_BandPresence_descriptor =
                getDescriptor().getMessageTypes().get(14);
        internal_static_BandPresence_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BandPresence_descriptor,
                new String[]{"Timestamp", "PresenceDetected",});
        internal_static_BLEConnection_descriptor =
                getDescriptor().getMessageTypes().get(15);
        internal_static_BLEConnection_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_BLEConnection_descriptor,
                new String[]{"Rssi", "Role", "Address",});
        internal_static_WifiConnection_descriptor =
                getDescriptor().getMessageTypes().get(16);
        internal_static_WifiConnection_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_WifiConnection_descriptor,
                new String[]{"Connected", "Signal", "Ssid", "Bssid",});
        internal_static_LEDMode_descriptor =
                getDescriptor().getMessageTypes().get(17);
        internal_static_LEDMode_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_LEDMode_descriptor,
                new String[]{});
        internal_static_LEDColor_descriptor =
                getDescriptor().getMessageTypes().get(18);
        internal_static_LEDColor_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_LEDColor_descriptor,
                new String[]{});
        internal_static_MusicState_descriptor =
                getDescriptor().getMessageTypes().get(19);
        internal_static_MusicState_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_MusicState_descriptor,
                new String[]{});
        com.google.protobuf.TimestampProto.getDescriptor();
    }
  private Hub() {}

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
  /**
   * Protobuf enum {@code FirmwareUpdateState}
   */
  public enum FirmwareUpdateState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown state
     * </pre>
     *
     * <code>UNKNOWN_STATE = 0;</code>
     */
    UNKNOWN_STATE(0),
    /**
     * <pre>
     * OTA payload download has begun
     * </pre>
     *
     * <code>DOWNLOAD_START = 1;</code>
     */
    DOWNLOAD_START(1),
    /**
     * <pre>
     * OTA payload has downloaded successfully
     * </pre>
     *
     * <code>DOWNLOAD_SUCCESS = 2;</code>
     */
    DOWNLOAD_SUCCESS(2),
    /**
     * <pre>
     * OTA payload download encountered a failure
     * </pre>
     *
     * <code>DOWNLOAD_FAIL = 3;</code>
     */
    DOWNLOAD_FAIL(3),
    /**
     * <pre>
     * OTA payload is valid
     * </pre>
     *
     * <code>ZIP_VALID = 4;</code>
     */
    ZIP_VALID(4),
    /**
     * <pre>
     * OTA payload is invalid
     * </pre>
     *
     * <code>ZIP_INVALID = 5;</code>
     */
    ZIP_INVALID(5),
    /**
     * <pre>
     * Hub firmware flashing has begun
     * </pre>
     *
     * <code>HUB_FLASH_START = 6;</code>
     */
    HUB_FLASH_START(6),
    /**
     * <pre>
     * Hub firmware has flashed successfully
     * </pre>
     *
     * <code>HUB_FLASH_SUCCESS = 7;</code>
     */
    HUB_FLASH_SUCCESS(7),
    /**
     * <pre>
     * Hub firmware flashing encountered a failure
     * </pre>
     *
     * <code>HUB_FLASH_FAIL = 8;</code>
     */
    HUB_FLASH_FAIL(8),
    /**
     * <pre>
     * Wearable firmare flashing has begun
     * </pre>
     *
     * <code>WEARABLE_FLASH_START = 9;</code>
     */
    WEARABLE_FLASH_START(9),
    /**
     * <pre>
     * Wearable firmware has flashed successfully
     * </pre>
     *
     * <code>WEARABLE_FLASH_SUCCESS = 10;</code>
     */
    WEARABLE_FLASH_SUCCESS(10),
    /**
     * <pre>
     * Wearable firmware flash encounted a failure
     * </pre>
     *
     * <code>WEARABLE_FLASH_FAIL = 11;</code>
     */
    WEARABLE_FLASH_FAIL(11),
    /**
     * <pre>
     * OTA firmware version is currently installed
     * </pre>
     *
     * <code>VERSION_INSTALLED = 12;</code>
     */
    VERSION_INSTALLED(12),
    /**
     * <pre>
     * OTA payload component signature is invalid
     * </pre>
     *
     * <code>SIGNATURE_INVALID = 13;</code>
     */
    SIGNATURE_INVALID(13),
    /**
     * <pre>
     * Data partition payload extraction has begun
     * </pre>
     *
     * <code>DATA_EXTRACT_START = 14;</code>
     */
    DATA_EXTRACT_START(14),
    /**
     * <pre>
     * Data partition payload has extracted successfully
     * </pre>
     *
     * <code>DATA_EXTRACT_SUCCESS = 15;</code>
     */
    DATA_EXTRACT_SUCCESS(15),
    /**
     * <pre>
     * Data partition payload extraction has encounted a failure
     * </pre>
     *
     * <code>DATA_EXTRACT_FAIL = 16;</code>
     */
    DATA_EXTRACT_FAIL(16),
    /**
     * <pre>
     * OTA Ash shell script execution has begun
     * </pre>
     *
     * <code>OTA_SCRIPT_START = 17;</code>
     */
    OTA_SCRIPT_START(17),
    /**
     * <pre>
     * OTA Ash shell script has exexcuted successfully
     * </pre>
     *
     * <code>OTA_SCRIPT_SUCCESS = 18;</code>
     */
    OTA_SCRIPT_SUCCESS(18),
    /**
     * <pre>
     * OTA Ash shell script execution encountered a failure
     * </pre>
     *
     * <code>OTA_SCRIPT_FAIL = 19;</code>
     */
    OTA_SCRIPT_FAIL(19),
    /**
     * <pre>
     * Entire update has completed successfully
     * </pre>
     *
     * <code>UPDATE_SUCCESS = 20;</code>
     */
    UPDATE_SUCCESS(20),
    /**
     * <pre>
     * Wearable is not present (not connected)
     * </pre>
     *
     * <code>NO_WEARABLE_PRESENT = 21;</code>
     */
    NO_WEARABLE_PRESENT(21),
      /**
       * <pre>
       * OTA authentication redirect process has begun
       * </pre>
       * <p>
       * <code>AUTHENTICATION_START = 22;</code>
       */
      AUTHENTICATION_START(22),
      /**
       * <pre>
       * OTA authentication redirect failed
       * </pre>
       * <p>
       * <code>AUTHENTICATION_FAIL = 23;</code>
       */
      AUTHENTICATION_FAIL(23),
      /**
       * <pre>
       * Wearable firmware flash failed, attempting retry
       * </pre>
       * <p>
       * <code>WEARABLE_FLASH_RETRY = 24;</code>
       */
      WEARABLE_FLASH_RETRY(24),
      /**
       * <pre>
       * SPL flashing has begun
       * </pre>
       * <p>
       * <code>SPL_FLASH_START = 25;</code>
       */
      SPL_FLASH_START(25),
      /**
       * <pre>
       * SPL has flashed successfully
       * </pre>
       * <p>
       * <code>SPL_FLASH_SUCCESS = 26;</code>
       */
      SPL_FLASH_SUCCESS(26),
      /**
       * <pre>
       * SPL flash encountered a failure
       * </pre>
       * <p>
       * <code>SPL_FLASH_FAIL = 27;</code>
       */
      SPL_FLASH_FAIL(27),
      /**
       * <pre>
       * U-Boot flashing has begun
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_START = 28;</code>
       */
      UBOOT_FLASH_START(28),
      /**
       * <pre>
       * U-Boot has flashed successfully
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_SUCCESS = 29;</code>
       */
      UBOOT_FLASH_SUCCESS(29),
      /**
       * <pre>
       * U-Boot flash encountered a failure
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_FAIL = 30;</code>
       */
      UBOOT_FLASH_FAIL(30),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown state
     * </pre>
     *
     * <code>UNKNOWN_STATE = 0;</code>
     */
    public static final int UNKNOWN_STATE_VALUE = 0;
    /**
     * <pre>
     * OTA payload download has begun
     * </pre>
     *
     * <code>DOWNLOAD_START = 1;</code>
     */
    public static final int DOWNLOAD_START_VALUE = 1;
    /**
     * <pre>
     * OTA payload has downloaded successfully
     * </pre>
     *
     * <code>DOWNLOAD_SUCCESS = 2;</code>
     */
    public static final int DOWNLOAD_SUCCESS_VALUE = 2;
    /**
     * <pre>
     * OTA payload download encountered a failure
     * </pre>
     *
     * <code>DOWNLOAD_FAIL = 3;</code>
     */
    public static final int DOWNLOAD_FAIL_VALUE = 3;
    /**
     * <pre>
     * OTA payload is valid
     * </pre>
     *
     * <code>ZIP_VALID = 4;</code>
     */
    public static final int ZIP_VALID_VALUE = 4;
    /**
     * <pre>
     * OTA payload is invalid
     * </pre>
     *
     * <code>ZIP_INVALID = 5;</code>
     */
    public static final int ZIP_INVALID_VALUE = 5;
    /**
     * <pre>
     * Hub firmware flashing has begun
     * </pre>
     *
     * <code>HUB_FLASH_START = 6;</code>
     */
    public static final int HUB_FLASH_START_VALUE = 6;
    /**
     * <pre>
     * Hub firmware has flashed successfully
     * </pre>
     *
     * <code>HUB_FLASH_SUCCESS = 7;</code>
     */
    public static final int HUB_FLASH_SUCCESS_VALUE = 7;
    /**
     * <pre>
     * Hub firmware flashing encountered a failure
     * </pre>
     *
     * <code>HUB_FLASH_FAIL = 8;</code>
     */
    public static final int HUB_FLASH_FAIL_VALUE = 8;
    /**
     * <pre>
     * Wearable firmare flashing has begun
     * </pre>
     *
     * <code>WEARABLE_FLASH_START = 9;</code>
     */
    public static final int WEARABLE_FLASH_START_VALUE = 9;
    /**
     * <pre>
     * Wearable firmware has flashed successfully
     * </pre>
     *
     * <code>WEARABLE_FLASH_SUCCESS = 10;</code>
     */
    public static final int WEARABLE_FLASH_SUCCESS_VALUE = 10;
    /**
     * <pre>
     * Wearable firmware flash encounted a failure
     * </pre>
     *
     * <code>WEARABLE_FLASH_FAIL = 11;</code>
     */
    public static final int WEARABLE_FLASH_FAIL_VALUE = 11;
    /**
     * <pre>
     * OTA firmware version is currently installed
     * </pre>
     *
     * <code>VERSION_INSTALLED = 12;</code>
     */
    public static final int VERSION_INSTALLED_VALUE = 12;
    /**
     * <pre>
     * OTA payload component signature is invalid
     * </pre>
     *
     * <code>SIGNATURE_INVALID = 13;</code>
     */
    public static final int SIGNATURE_INVALID_VALUE = 13;
    /**
     * <pre>
     * Data partition payload extraction has begun
     * </pre>
     *
     * <code>DATA_EXTRACT_START = 14;</code>
     */
    public static final int DATA_EXTRACT_START_VALUE = 14;
    /**
     * <pre>
     * Data partition payload has extracted successfully
     * </pre>
     *
     * <code>DATA_EXTRACT_SUCCESS = 15;</code>
     */
    public static final int DATA_EXTRACT_SUCCESS_VALUE = 15;
    /**
     * <pre>
     * Data partition payload extraction has encounted a failure
     * </pre>
     *
     * <code>DATA_EXTRACT_FAIL = 16;</code>
     */
    public static final int DATA_EXTRACT_FAIL_VALUE = 16;
    /**
     * <pre>
     * OTA Ash shell script execution has begun
     * </pre>
     *
     * <code>OTA_SCRIPT_START = 17;</code>
     */
    public static final int OTA_SCRIPT_START_VALUE = 17;
    /**
     * <pre>
     * OTA Ash shell script has exexcuted successfully
     * </pre>
     *
     * <code>OTA_SCRIPT_SUCCESS = 18;</code>
     */
    public static final int OTA_SCRIPT_SUCCESS_VALUE = 18;
    /**
     * <pre>
     * OTA Ash shell script execution encountered a failure
     * </pre>
     *
     * <code>OTA_SCRIPT_FAIL = 19;</code>
     */
    public static final int OTA_SCRIPT_FAIL_VALUE = 19;
    /**
     * <pre>
     * Entire update has completed successfully
     * </pre>
     *
     * <code>UPDATE_SUCCESS = 20;</code>
     */
    public static final int UPDATE_SUCCESS_VALUE = 20;
      /**
       * <pre>
       * Wearable is not present (not connected)
       * </pre>
       * <p>
       * <code>NO_WEARABLE_PRESENT = 21;</code>
       */
      public static final int NO_WEARABLE_PRESENT_VALUE = 21;
      /**
       * <pre>
       * OTA authentication redirect process has begun
       * </pre>
       * <p>
       * <code>AUTHENTICATION_START = 22;</code>
       */
      public static final int AUTHENTICATION_START_VALUE = 22;
      /**
       * <pre>
       * OTA authentication redirect failed
       * </pre>
       * <p>
       * <code>AUTHENTICATION_FAIL = 23;</code>
       */
      public static final int AUTHENTICATION_FAIL_VALUE = 23;
      /**
       * <pre>
       * Wearable firmware flash failed, attempting retry
       * </pre>
       * <p>
       * <code>WEARABLE_FLASH_RETRY = 24;</code>
       */
      public static final int WEARABLE_FLASH_RETRY_VALUE = 24;
      /**
       * <pre>
       * SPL flashing has begun
       * </pre>
       * <p>
       * <code>SPL_FLASH_START = 25;</code>
       */
      public static final int SPL_FLASH_START_VALUE = 25;
      /**
       * <pre>
       * SPL has flashed successfully
       * </pre>
       * <p>
       * <code>SPL_FLASH_SUCCESS = 26;</code>
       */
      public static final int SPL_FLASH_SUCCESS_VALUE = 26;
      /**
       * <pre>
       * SPL flash encountered a failure
       * </pre>
       * <p>
       * <code>SPL_FLASH_FAIL = 27;</code>
       */
      public static final int SPL_FLASH_FAIL_VALUE = 27;
      /**
       * <pre>
       * U-Boot flashing has begun
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_START = 28;</code>
       */
      public static final int UBOOT_FLASH_START_VALUE = 28;
      /**
       * <pre>
       * U-Boot has flashed successfully
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_SUCCESS = 29;</code>
       */
      public static final int UBOOT_FLASH_SUCCESS_VALUE = 29;
      /**
       * <pre>
       * U-Boot flash encountered a failure
       * </pre>
       * <p>
       * <code>UBOOT_FLASH_FAIL = 30;</code>
       */
      public static final int UBOOT_FLASH_FAIL_VALUE = 30;
      private static final com.google.protobuf.Internal.EnumLiteMap<
              FirmwareUpdateState> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<FirmwareUpdateState>() {
                  public FirmwareUpdateState findValueByNumber(int number) {
                      return FirmwareUpdateState.forNumber(number);
            }
          };
    private static final FirmwareUpdateState[] VALUES = values();
    private final int value;

    private FirmwareUpdateState(int value) {
      this.value = value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FirmwareUpdateState valueOf(int value) {
      return forNumber(value);
    }

    public static FirmwareUpdateState forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STATE;
        case 1: return DOWNLOAD_START;
        case 2: return DOWNLOAD_SUCCESS;
        case 3: return DOWNLOAD_FAIL;
        case 4: return ZIP_VALID;
        case 5: return ZIP_INVALID;
        case 6: return HUB_FLASH_START;
        case 7: return HUB_FLASH_SUCCESS;
        case 8: return HUB_FLASH_FAIL;
        case 9: return WEARABLE_FLASH_START;
          case 10:
              return WEARABLE_FLASH_SUCCESS;
          case 11:
              return WEARABLE_FLASH_FAIL;
          case 12:
              return VERSION_INSTALLED;
          case 13:
              return SIGNATURE_INVALID;
          case 14:
              return DATA_EXTRACT_START;
          case 15:
              return DATA_EXTRACT_SUCCESS;
          case 16:
              return DATA_EXTRACT_FAIL;
          case 17:
              return OTA_SCRIPT_START;
          case 18:
              return OTA_SCRIPT_SUCCESS;
        case 19: return OTA_SCRIPT_FAIL;
        case 20: return UPDATE_SUCCESS;
        case 21: return NO_WEARABLE_PRESENT;
        case 22: return AUTHENTICATION_START;
        case 23: return AUTHENTICATION_FAIL;
        case 24: return WEARABLE_FLASH_RETRY;
        case 25: return SPL_FLASH_START;
        case 26: return SPL_FLASH_SUCCESS;
        case 27: return SPL_FLASH_FAIL;
        case 28: return UBOOT_FLASH_START;
        case 29: return UBOOT_FLASH_SUCCESS;
        case 30: return UBOOT_FLASH_FAIL;
          default:
              return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FirmwareUpdateState>
        internalGetValueMap() {
      return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return Hub.getDescriptor().getEnumTypes().get(0);
    }

      public static FirmwareUpdateState valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
              throw new IllegalArgumentException(
                      "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
    }

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
        return getDescriptor();
    }

    // @@protoc_insertion_point(enum_scope:FirmwareUpdateState)
  }

    public interface HubPresenceOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubPresence)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
         */
        int getConnectionStateValue();

        /**
         * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
         */
        HubPresence.ConnectionStates getConnectionState();

        /**
         * <code>optional uint32 protocol_version = 2;</code>
         */
        int getProtocolVersion();
    }

    public interface HubStatusOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubStatus)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * LED Mode               // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        int getLedModeValue();

        /**
         * <pre>
         * LED Mode               // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        LEDMode.LEDModes getLedMode();

        /**
         * <pre>
         * LED Color              // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        int getLedColorValue();

        /**
         * <pre>
         * LED Color              // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        LEDColor.LEDColors getLedColor();

        /**
         * <pre>
         * LED Brightness         // Range: [1, 65,535], 0=ambient_light aware mode
         * </pre>
         * <p>
         * <code>optional uint32 led_brightness = 4;</code>
         */
        int getLedBrightness();

        /**
         * <pre>
         * Music State            // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        int getMusicStateValue();

        /**
         * <pre>
         * Music State            // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        MusicState.MusicStates getMusicState();

        /**
         * <pre>
         * Music Play Count       // Range: [1, 4,294,967,295], 0=infinite
         * </pre>
         * <p>
         * <code>optional uint32 music_play_count = 6;</code>
         */
        int getMusicPlayCount();

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        java.util.List<String>
        getMusicListList();

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        int getMusicListCount();

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        String getMusicList(int index);

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        com.google.protobuf.ByteString
        getMusicListBytes(int index);

        /**
         * <pre>
         * Volume                 // Range: [0, 100] %
         * </pre>
         * <p>
         * <code>optional uint32 volume = 8;</code>
         */
        int getVolume();

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         * <p>
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getBlePairedDevicesList();

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         * <p>
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        int getBlePairedDevicesCount();

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         * <p>
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        com.google.protobuf.ByteString getBlePairedDevices(int index);

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        java.util.List<BLEConnection>
        getBleActiveConnectionsList();

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        BLEConnection getBleActiveConnections(int index);

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        int getBleActiveConnectionsCount();

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        java.util.List<? extends BLEConnectionOrBuilder>
        getBleActiveConnectionsOrBuilderList();

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        BLEConnectionOrBuilder getBleActiveConnectionsOrBuilder(
                int index);

        /**
         * <pre>
         * Charging               // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool charging = 11;</code>
         */
        boolean getCharging();

        /**
         * <pre>
         * Firmware Version
         * </pre>
         * <p>
         * <code>optional bytes firmware_version = 12;</code>
         */
        com.google.protobuf.ByteString getFirmwareVersion();

        /**
         * <pre>
         * Firmware Update State  // See FirmwareUpdateState enum
         * </pre>
         * <p>
         * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
         */
        int getFirmwareUpdateStateValue();

        /**
         * <pre>
         * Firmware Update State  // See FirmwareUpdateState enum
         * </pre>
         * <p>
         * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
         */
        FirmwareUpdateState getFirmwareUpdateState();

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         * <p>
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        boolean hasWifiConnection();

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         * <p>
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        WifiConnection getWifiConnection();

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         * <p>
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        WifiConnectionOrBuilder getWifiConnectionOrBuilder();

        /**
         * <pre>
         * Charging Complete      // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool charging_complete = 15;</code>
         */
        boolean getChargingComplete();

        /**
         * <pre>
         * PTU Load Detected      // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool ptu_load_detected = 16;</code>
         */
        boolean getPtuLoadDetected();

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         * <p>
         * <code>optional string timezone = 17;</code>
         */
        String getTimezone();

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         * <p>
         * <code>optional string timezone = 17;</code>
         */
        com.google.protobuf.ByteString
        getTimezoneBytes();

        /**
         * <pre>
         * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
         * </pre>
         * <p>
         * <code>optional string firmware_revision = 18;</code>
         */
        String getFirmwareRevision();

        /**
         * <pre>
         * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
         * </pre>
         * <p>
         * <code>optional string firmware_revision = 18;</code>
         */
        com.google.protobuf.ByteString
        getFirmwareRevisionBytes();

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        java.util.List<Integer> getLedRgbColorList();

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        int getLedRgbColorCount();

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        int getLedRgbColor(int index);
    }

    public interface HubAmbientOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubAmbient)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Relative Humidity (Moisture)  // Range: [0, 100] %
         * </pre>
         * <p>
         * <code>optional uint32 relative_humidity = 2;</code>
         */
        int getRelativeHumidity();

        /**
         * <pre>
         * Ambient Light (Lumens)        // Range: [0, 83,000] lum
         * </pre>
         * <p>
         * <code>optional uint32 ambient_light = 3;</code>
         */
        int getAmbientLight();

        /**
         * <pre>
         * Ambient Noise Level (dB-SPL)  // Range: [0, 130] dB
         * </pre>
         * <p>
         * <code>optional uint32 ambient_noise = 4;</code>
         */
        int getAmbientNoise();

        /**
         * <pre>
         * Ambient Temperature (Celsius) // Range: [-40, 100] C
         * </pre>
         * <p>
         * <code>optional sint32 ambient_temperature = 5;</code>
         */
        int getAmbientTemperature();
    }

    public interface FirmwareUpdateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:FirmwareUpdate)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * File Size              // Value: X; 0 &lt; X bytes &lt; free space
         * </pre>
         * <p>
         * <code>optional uint32 file_size = 2;</code>
         */
        int getFileSize();

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
         * </pre>
         * <p>
         * <code>optional string url = 3;</code>
         */
        String getUrl();

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
         * </pre>
         * <p>
         * <code>optional string url = 3;</code>
         */
        com.google.protobuf.ByteString
        getUrlBytes();

        /**
         * <pre>
         * Force Firmware Update  // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool force_firmware = 4;</code>
         */
        boolean getForceFirmware();

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        String getHubVersion();

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        com.google.protobuf.ByteString
        getHubVersionBytes();

        /**
         * <pre>
         * Wearable Firmware Version
         * </pre>
         * <p>
         * <code>optional string wearable_version = 6;</code>
         */
        String getWearableVersion();

        /**
         * <pre>
         * Wearable Firmware Version
         * </pre>
         * <p>
         * <code>optional string wearable_version = 6;</code>
         */
        com.google.protobuf.ByteString
        getWearableVersionBytes();

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        String getExtraVersion();

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        com.google.protobuf.ByteString
        getExtraVersionBytes();

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        String getBootVersion();

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        com.google.protobuf.ByteString
        getBootVersionBytes();
    }

    public interface HubControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubControl)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * LED Mode         // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        int getLedModeValue();

        /**
         * <pre>
         * LED Mode         // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        LEDMode.LEDModes getLedMode();

        /**
         * <pre>
         * LED Color        // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        int getLedColorValue();

        /**
         * <pre>
         * LED Color        // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        LEDColor.LEDColors getLedColor();

        /**
         * <pre>
         * LED Brightness   // Range: [1, 65,535], 0=ambient_light aware mode
         * </pre>
         * <p>
         * <code>optional uint32 led_brightness = 4;</code>
         */
        int getLedBrightness();

        /**
         * <pre>
         * Music State      // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        int getMusicStateValue();

        /**
         * <pre>
         * Music State      // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        MusicState.MusicStates getMusicState();

        /**
         * <pre>
         * Music Play Count // Range: [1, 4,294,967,295], 0=infinite
         * </pre>
         * <p>
         * <code>optional uint32 music_play_count = 6;</code>
         */
        int getMusicPlayCount();

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        java.util.List<String>
        getMusicListList();

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        int getMusicListCount();

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        String getMusicList(int index);

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        com.google.protobuf.ByteString
        getMusicListBytes(int index);

        /**
         * <pre>
         * Volume           // Range: [0, 100] %
         * </pre>
         * <p>
         * <code>optional uint32 volume = 8;</code>
         */
        int getVolume();

        /**
         * <pre>
         * LED Timer        // Value: seconds &gt;= 1
         * </pre>
         * <p>
         * <code>optional uint32 led_timer = 9;</code>
         */
        int getLedTimer();

        /**
         * <pre>
         * Music Timer      // Value: seconds &gt;= 1
         * </pre>
         * <p>
         * <code>optional uint32 music_timer = 10;</code>
         */
        int getMusicTimer();

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        java.util.List<Integer> getLedRgbColorList();

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        int getLedRgbColorCount();

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        int getLedRgbColor(int index);
    }

    public interface HubLoggingOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubLogging)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Log Level, see 'https://docs.python.org/3.5/library/logging.html#logging-levels'
         * </pre>
         * <p>
         * <code>optional uint32 log_level = 2;</code>
         */
        int getLogLevel();
    }

    public interface HubCLIOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubCLI)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * CLI Command      // Ash shell command-line string
         * </pre>
         * <p>
         * <code>optional string cli_command = 2;</code>
         */
        String getCliCommand();

        /**
         * <pre>
         * CLI Command      // Ash shell command-line string
         * </pre>
         * <p>
         * <code>optional string cli_command = 2;</code>
         */
        com.google.protobuf.ByteString
        getCliCommandBytes();

        /**
         * <pre>
         * CLI Signature    // Generated signature key
         * </pre>
         * <p>
         * <code>optional bytes cli_signature = 3;</code>
         */
        com.google.protobuf.ByteString getCliSignature();
    }

    public interface HubCLIResponseOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubCLIResponse)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * CLI RETURN CODE
         * </pre>
         * <p>
         * <code>optional uint32 cli_return_code = 2;</code>
         */
        int getCliReturnCode();

        /**
         * <pre>
         * CLI STDOUT
         * </pre>
         * <p>
         * <code>optional string cli_stdout = 3;</code>
         */
        String getCliStdout();

        /**
         * <pre>
         * CLI STDOUT
         * </pre>
         * <p>
         * <code>optional string cli_stdout = 3;</code>
         */
        com.google.protobuf.ByteString
        getCliStdoutBytes();

        /**
         * <pre>
         * CLI STDERR
         * </pre>
         * <p>
         * <code>optional string cli_stderr = 4;</code>
         */
        String getCliStderr();

        /**
         * <pre>
         * CLI STDERR
         * </pre>
         * <p>
         * <code>optional string cli_stderr = 4;</code>
         */
        com.google.protobuf.ByteString
        getCliStderrBytes();

        /**
         * <pre>
         * CLI RUN TIME
         * </pre>
         * <p>
         * <code>optional float cli_run_time = 5;</code>
         */
        float getCliRunTime();
    }

    public interface HubUserConfigurationOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubUserConfiguration)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         * <p>
         * <code>optional string timezone = 2;</code>
         */
        String getTimezone();

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         * <p>
         * <code>optional string timezone = 2;</code>
         */
        com.google.protobuf.ByteString
        getTimezoneBytes();

        /**
         * <pre>
         * BLE LED Alert
         * </pre>
         * <p>
         * <code>optional bool ble_alert = 3;</code>
         */
        boolean getBleAlert();

        /**
         * <pre>
         * WiFi LED Alert
         * </pre>
         * <p>
         * <code>optional bool wifi_alert = 4;</code>
         */
        boolean getWifiAlert();
    }

    public interface HubUserConfigurationHiddenOrBuilder extends
            // @@protoc_insertion_point(interface_extends:HubUserConfigurationHidden)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Heart Rate filter sample-size, default:  5, disable: 0
         * </pre>
         * <p>
         * <code>optional uint32 bpm_samples = 2;</code>
         */
        int getBpmSamples();

        /**
         * <pre>
         * Heart Rate filter threshold,   default: 70
         * </pre>
         * <p>
         * <code>optional uint32 bpm_threshold = 3;</code>
         */
        int getBpmThreshold();
    }

    public interface BandStateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BandState)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Wearable state
         * </pre>
         * <p>
         * <code>optional .BandState.WearableState state = 2;</code>
         */
        int getStateValue();

        /**
         * <pre>
         * Wearable state
         * </pre>
         * <p>
         * <code>optional .BandState.WearableState state = 2;</code>
         */
        BandState.WearableState getState();
    }

    public interface BandStatusOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BandStatus)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Battery Voltage in mV // Range: 0 - 5000, 4000-&gt;3600 is 80 percentile, 3600-&gt;3000 is 20 percentile
         * </pre>
         * <p>
         * <code>optional uint32 battery_voltage = 2;</code>
         */
        int getBatteryVoltage();

        /**
         * <pre>
         * Firmware Version
         * </pre>
         * <p>
         * <code>optional bytes firmware_version = 3;</code>
         */
        com.google.protobuf.ByteString getFirmwareVersion();

        /**
         * <pre>
         * MCU Temperature       // Range: -256 - +255
         * </pre>
         * <p>
         * <code>optional sint32 mcu_temperature = 4;</code>
         */
        int getMcuTemperature();
    }

    public interface BandTelemetryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BandTelemetry)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Milliseconds from Band
         * </pre>
         * <p>
         * <code>optional uint32 millis = 2;</code>
         */
        int getMillis();

        /**
         * <pre>
         * Heart Rate in BPM               // Range: 30 - 120
         * </pre>
         * <p>
         * <code>optional uint32 hr_bpm = 3;</code>
         */
        int getHrBpm();

        /**
         * <pre>
         * Heart Rate Signal Quality Index // Range: 0-20 &amp; 254-255
         * </pre>
         * <p>
         * <code>optional uint32 hr_sqi = 4;</code>
         */
        int getHrSqi();

        /**
         * <pre>
         * Acceleration x-axis // Range: -2048 - +2047
         * </pre>
         * <p>
         * <code>optional sint32 accel_x = 5;</code>
         */
        int getAccelX();

        /**
         * <pre>
         * Acceleration y-axis // Range: -2048 - +2047
         * </pre>
         * <p>
         * <code>optional sint32 accel_y = 6;</code>
         */
        int getAccelY();

        /**
         * <pre>
         * Acceleration z-axis // Range: -2048 - +2047
         * </pre>
         * <p>
         * <code>optional sint32 accel_z = 7;</code>
         */
        int getAccelZ();

        /**
         * <pre>
         * UTC time offset in seconds      // Value: positive/negative when West/East of UTC, respectively
         * </pre>
         * <p>
         * <code>optional sint32 utc_offset = 8;</code>
         */
        int getUtcOffset();
    }

    public interface BandRolloverOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BandRollover)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Orientation
         * </pre>
         * <p>
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
         */
        int getOrientationValue();

        /**
         * <pre>
         * Orientation
         * </pre>
         * <p>
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
         */
        BandRollover.Orientation.Orientations getOrientation();

        /**
         * <pre>
         * Direction
         * </pre>
         * <p>
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        int getDirectionValue();

        /**
         * <pre>
         * Direction
         * </pre>
         * <p>
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        BandRollover.Direction.Directions getDirection();
    }

    public interface BandPresenceOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BandPresence)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        boolean hasTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.Timestamp getTimestamp();

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

        /**
         * <pre>
         * Presence Detected // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool presence_detected = 2;</code>
         */
        boolean getPresenceDetected();
    }

    public interface BLEConnectionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:BLEConnection)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * BLE Signal (linear) // Range: [0, -127], suggested to divide bucket in thirds
         * </pre>
         * <p>
         * <code>optional sint32 rssi = 1;</code>
         */
        int getRssi();

        /**
         * <pre>
         * BLE Role            // See BLERoles enum
         * </pre>
         * <p>
         * <code>optional .BLEConnection.BLERoles role = 2;</code>
         */
        int getRoleValue();

        /**
         * <pre>
         * BLE Role            // See BLERoles enum
         * </pre>
         * <p>
         * <code>optional .BLEConnection.BLERoles role = 2;</code>
         */
        BLEConnection.BLERoles getRole();

        /**
         * <pre>
         * BLE MAC address     // Value: six octets
         * </pre>
         * <p>
         * <code>optional bytes address = 3;</code>
         */
        com.google.protobuf.ByteString getAddress();
    }

    public interface WifiConnectionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:WifiConnection)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Connected State     // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool connected = 1;</code>
         */
        boolean getConnected();

        /**
         * <pre>
         * Signal Level        // Range: [0, -120] dBm, suggested to divide bucket in thirds
         * </pre>
         * <p>
         * <code>optional sint32 signal = 2;</code>
         */
        int getSignal();

        /**
         * <pre>
         * Wireless Network Name
         * </pre>
         * <p>
         * <code>optional string ssid = 3;</code>
         */
        String getSsid();

        /**
         * <pre>
         * Wireless Network Name
         * </pre>
         * <p>
         * <code>optional string ssid = 3;</code>
         */
        com.google.protobuf.ByteString
        getSsidBytes();

        /**
         * <pre>
         * AP MAC              // Value: six octets
         * </pre>
         * <p>
         * <code>optional bytes bssid = 4;</code>
         */
        com.google.protobuf.ByteString getBssid();
    }

    public interface LEDModeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:LEDMode)
            com.google.protobuf.MessageOrBuilder {
    }

    public interface LEDColorOrBuilder extends
            // @@protoc_insertion_point(interface_extends:LEDColor)
            com.google.protobuf.MessageOrBuilder {
    }

    public interface MusicStateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:MusicState)
            com.google.protobuf.MessageOrBuilder {
    }

    /**
     * <pre>
     * Hub Presence [device/hub/SN_HUB/presence]
     *    Hub connection state managed by MQTT (always publish as retained=True)
     *    - last-will OFFLINE message is set prior to connecting to MQTT
     *    - published ONLINE during on_connect in hub firmware
     *    - upon OTA, published REBOOT provides reason for offline/online state.
     * </pre>
     * <p>
     * Protobuf type {@code HubPresence}
     */
    public static final class HubPresence extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubPresence)
            HubPresenceOrBuilder {
        public static final int CONNECTION_STATE_FIELD_NUMBER = 1;
        public static final int PROTOCOL_VERSION_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubPresence)
        private static final HubPresence DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubPresence>
                PARSER = new com.google.protobuf.AbstractParser<HubPresence>() {
            public HubPresence parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubPresence(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubPresence();
        }

        private int connectionState_;
        private int protocolVersion_;
        private byte memoizedIsInitialized = -1;

        // Use HubPresence.newBuilder() to construct.
        private HubPresence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubPresence() {
            connectionState_ = 0;
            protocolVersion_ = 0;
        }

        private HubPresence(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            connectionState_ = rawValue;
                            break;
                        }
                        case 16: {

                            protocolVersion_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubPresence_descriptor;
        }

        public static HubPresence parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubPresence parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubPresence parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubPresence parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubPresence parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubPresence parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubPresence parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubPresence parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubPresence parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubPresence parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubPresence prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubPresence getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubPresence> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubPresence_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubPresence.class, Builder.class);
        }

        /**
         * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
         */
        public int getConnectionStateValue() {
            return connectionState_;
        }

        /**
         * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
         */
        public ConnectionStates getConnectionState() {
            ConnectionStates result = ConnectionStates.valueOf(connectionState_);
            return result == null ? ConnectionStates.UNRECOGNIZED : result;
        }

        /**
         * <code>optional uint32 protocol_version = 2;</code>
         */
        public int getProtocolVersion() {
            return protocolVersion_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (connectionState_ != ConnectionStates.UNKNOWN.getNumber()) {
                output.writeEnum(1, connectionState_);
            }
            if (protocolVersion_ != 0) {
                output.writeUInt32(2, protocolVersion_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (connectionState_ != ConnectionStates.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, connectionState_);
            }
            if (protocolVersion_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, protocolVersion_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubPresence)) {
                return super.equals(obj);
            }
            HubPresence other = (HubPresence) obj;

            boolean result = true;
            result = result && connectionState_ == other.connectionState_;
            result = result && (getProtocolVersion()
                    == other.getProtocolVersion());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + CONNECTION_STATE_FIELD_NUMBER;
            hash = (53 * hash) + connectionState_;
            hash = (37 * hash) + PROTOCOL_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getProtocolVersion();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubPresence> getParserForType() {
            return PARSER;
        }

        public HubPresence getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code HubPresence.ConnectionStates}
         */
        public enum ConnectionStates
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <code>OFFLINE = 1;</code>
             */
            OFFLINE(1),
            /**
             * <code>ONLINE = 2;</code>
             */
            ONLINE(2),
            /**
             * <code>REBOOT = 3;</code>
             */
            REBOOT(3),
            UNRECOGNIZED(-1),;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <code>OFFLINE = 1;</code>
             */
            public static final int OFFLINE_VALUE = 1;
            /**
             * <code>ONLINE = 2;</code>
             */
            public static final int ONLINE_VALUE = 2;
            /**
             * <code>REBOOT = 3;</code>
             */
            public static final int REBOOT_VALUE = 3;
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    ConnectionStates> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<ConnectionStates>() {
                        public ConnectionStates findValueByNumber(int number) {
                            return ConnectionStates.forNumber(number);
                        }
                    };
            private static final ConnectionStates[] VALUES = values();
            private final int value;

            private ConnectionStates(int value) {
                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static ConnectionStates valueOf(int value) {
                return forNumber(value);
            }

            public static ConnectionStates forNumber(int value) {
                switch (value) {
                    case 0: return UNKNOWN;
                    case 1: return OFFLINE;
                    case 2: return ONLINE;
                    case 3: return REBOOT;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<ConnectionStates>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return HubPresence.getDescriptor().getEnumTypes().get(0);
            }

            public static ConnectionStates valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:HubPresence.ConnectionStates)
        }

        /**
         * <pre>
         * Hub Presence [device/hub/SN_HUB/presence]
         *    Hub connection state managed by MQTT (always publish as retained=True)
         *    - last-will OFFLINE message is set prior to connecting to MQTT
         *    - published ONLINE during on_connect in hub firmware
         *    - upon OTA, published REBOOT provides reason for offline/online state.
         * </pre>
         *
         * Protobuf type {@code HubPresence}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubPresence)
                HubPresenceOrBuilder {
            private int connectionState_ = 0;
            private int protocolVersion_ ;

            // Construct using Hub.HubPresence.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubPresence_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubPresence_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubPresence.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                connectionState_ = 0;

                protocolVersion_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubPresence_descriptor;
            }

            public HubPresence getDefaultInstanceForType() {
                return HubPresence.getDefaultInstance();
            }

            public HubPresence build() {
                HubPresence result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubPresence buildPartial() {
                HubPresence result = new HubPresence(this);
                result.connectionState_ = connectionState_;
                result.protocolVersion_ = protocolVersion_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubPresence) {
                    return mergeFrom((HubPresence) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubPresence other) {
                if (other == HubPresence.getDefaultInstance()) return this;
                if (other.connectionState_ != 0) {
                    setConnectionStateValue(other.getConnectionStateValue());
                }
                if (other.getProtocolVersion() != 0) {
                    setProtocolVersion(other.getProtocolVersion());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubPresence parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubPresence) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
             */
            public int getConnectionStateValue() {
                return connectionState_;
            }

            /**
             * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
             */
            public Builder setConnectionStateValue(int value) {
                connectionState_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
             */
            public ConnectionStates getConnectionState() {
                ConnectionStates result = ConnectionStates.valueOf(connectionState_);
                return result == null ? ConnectionStates.UNRECOGNIZED : result;
            }

            /**
             * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
             */
            public Builder setConnectionState(ConnectionStates value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                connectionState_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>optional .HubPresence.ConnectionStates connection_state = 1;</code>
             */
            public Builder clearConnectionState() {

                connectionState_ = 0;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 protocol_version = 2;</code>
             */
            public int getProtocolVersion() {
                return protocolVersion_;
            }

            /**
             * <code>optional uint32 protocol_version = 2;</code>
             */
            public Builder setProtocolVersion(int value) {

                protocolVersion_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 protocol_version = 2;</code>
             */
            public Builder clearProtocolVersion() {

                protocolVersion_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubPresence)
        }

    }

    /**
     * <pre>
     * Hub Status [device/hub/SN_HUB/status]
     *    Hub status report which is published on every change in state (always publish as retained=True)
     *    - published every five minutes
     *    - published every network state change
     *    - published every charge event
     *    - published every BLE connection change
     *    - published every command and control packet
     *    - published every firmware update state change
     * </pre>
     *
     * Protobuf type {@code HubStatus}
     */
    public  static final class HubStatus extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubStatus)
            HubStatusOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int LED_MODE_FIELD_NUMBER = 2;
        public static final int LED_COLOR_FIELD_NUMBER = 3;
        public static final int LED_BRIGHTNESS_FIELD_NUMBER = 4;
        public static final int MUSIC_STATE_FIELD_NUMBER = 5;
        public static final int MUSIC_PLAY_COUNT_FIELD_NUMBER = 6;
        public static final int MUSIC_LIST_FIELD_NUMBER = 7;
        public static final int VOLUME_FIELD_NUMBER = 8;
        public static final int BLE_PAIRED_DEVICES_FIELD_NUMBER = 9;
        public static final int BLE_ACTIVE_CONNECTIONS_FIELD_NUMBER = 10;
        public static final int CHARGING_FIELD_NUMBER = 11;
        public static final int FIRMWARE_VERSION_FIELD_NUMBER = 12;
        public static final int FIRMWARE_UPDATE_STATE_FIELD_NUMBER = 13;
        public static final int WIFI_CONNECTION_FIELD_NUMBER = 14;
        public static final int CHARGING_COMPLETE_FIELD_NUMBER = 15;
        public static final int PTU_LOAD_DETECTED_FIELD_NUMBER = 16;
        public static final int TIMEZONE_FIELD_NUMBER = 17;
        public static final int FIRMWARE_REVISION_FIELD_NUMBER = 18;
        public static final int LED_RGB_COLOR_FIELD_NUMBER = 19;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubStatus)
        private static final HubStatus DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubStatus>
                PARSER = new com.google.protobuf.AbstractParser<HubStatus>() {
            public HubStatus parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubStatus(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubStatus();
        }

        private int bitField0_;
        private com.google.protobuf.Timestamp timestamp_;
        private int ledMode_;
        private int ledColor_;
        private int ledBrightness_;
        private int musicState_;
        private int musicPlayCount_;
        private com.google.protobuf.LazyStringList musicList_;
        private int volume_;
        private java.util.List<com.google.protobuf.ByteString> blePairedDevices_;
        private java.util.List<BLEConnection> bleActiveConnections_;
        private boolean charging_;
        private com.google.protobuf.ByteString firmwareVersion_;
        private int firmwareUpdateState_;
        private WifiConnection wifiConnection_;
        private boolean chargingComplete_;
        private boolean ptuLoadDetected_;
        private volatile Object timezone_;
        private volatile Object firmwareRevision_;
        private java.util.List<Integer> ledRgbColor_;
        private int ledRgbColorMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use HubStatus.newBuilder() to construct.
        private HubStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubStatus() {
            ledMode_ = 0;
            ledColor_ = 0;
            ledBrightness_ = 0;
            musicState_ = 0;
            musicPlayCount_ = 0;
            musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            volume_ = 0;
            blePairedDevices_ = java.util.Collections.emptyList();
            bleActiveConnections_ = java.util.Collections.emptyList();
            charging_ = false;
            firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;
            firmwareUpdateState_ = 0;
            chargingComplete_ = false;
            ptuLoadDetected_ = false;
            timezone_ = "";
            firmwareRevision_ = "";
            ledRgbColor_ = java.util.Collections.emptyList();
        }

        private HubStatus(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            ledMode_ = rawValue;
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();

                            ledColor_ = rawValue;
                            break;
                        }
                        case 32: {

                            ledBrightness_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            int rawValue = input.readEnum();

                            musicState_ = rawValue;
                            break;
                        }
                        case 48: {

                            musicPlayCount_ = input.readUInt32();
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                musicList_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            musicList_.add(s);
                            break;
                        }
                        case 64: {

                            volume_ = input.readUInt32();
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                                blePairedDevices_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            blePairedDevices_.add(input.readBytes());
                            break;
                        }
                        case 82: {
                            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                                bleActiveConnections_ = new java.util.ArrayList<BLEConnection>();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            bleActiveConnections_.add(
                                    input.readMessage(BLEConnection.parser(), extensionRegistry));
                            break;
                        }
                        case 88: {

                            charging_ = input.readBool();
                            break;
                        }
                        case 98: {

                            firmwareVersion_ = input.readBytes();
                            break;
                        }
                        case 104: {
                            int rawValue = input.readEnum();

                            firmwareUpdateState_ = rawValue;
                            break;
                        }
                        case 114: {
                            WifiConnection.Builder subBuilder = null;
                            if (wifiConnection_ != null) {
                                subBuilder = wifiConnection_.toBuilder();
                            }
                            wifiConnection_ = input.readMessage(WifiConnection.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(wifiConnection_);
                                wifiConnection_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 120: {

                            chargingComplete_ = input.readBool();
                            break;
                        }
                        case 128: {

                            ptuLoadDetected_ = input.readBool();
                            break;
                        }
                        case 138: {
                            String s = input.readStringRequireUtf8();

                            timezone_ = s;
                            break;
                        }
                        case 146: {
                            String s = input.readStringRequireUtf8();

                            firmwareRevision_ = s;
                            break;
                        }
                        case 152: {
                            if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                                ledRgbColor_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00040000;
                            }
                            ledRgbColor_.add(input.readUInt32());
                            break;
                        }
                        case 154: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                                ledRgbColor_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00040000;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ledRgbColor_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = musicList_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                    blePairedDevices_ = java.util.Collections.unmodifiableList(blePairedDevices_);
                }
                if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                    bleActiveConnections_ = java.util.Collections.unmodifiableList(bleActiveConnections_);
                }
                if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                    ledRgbColor_ = java.util.Collections.unmodifiableList(ledRgbColor_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubStatus_descriptor;
        }

        public static HubStatus parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubStatus parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubStatus parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubStatus parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubStatus parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubStatus parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubStatus parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubStatus parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubStatus parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubStatus parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubStatus prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubStatus getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubStatus> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubStatus_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubStatus.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * LED Mode               // See LEDModes enum
         * </pre>
         *
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        public int getLedModeValue() {
            return ledMode_;
        }

        /**
         * <pre>
         * LED Mode               // See LEDModes enum
         * </pre>
         *
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        public LEDMode.LEDModes getLedMode() {
            LEDMode.LEDModes result = LEDMode.LEDModes.valueOf(ledMode_);
            return result == null ? LEDMode.LEDModes.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * LED Color              // See LEDColors enum
         * </pre>
         *
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        public int getLedColorValue() {
            return ledColor_;
        }

        /**
         * <pre>
         * LED Color              // See LEDColors enum
         * </pre>
         *
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        public LEDColor.LEDColors getLedColor() {
            LEDColor.LEDColors result = LEDColor.LEDColors.valueOf(ledColor_);
            return result == null ? LEDColor.LEDColors.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * LED Brightness         // Range: [1, 65,535], 0=ambient_light aware mode
         * </pre>
         *
         * <code>optional uint32 led_brightness = 4;</code>
         */
        public int getLedBrightness() {
            return ledBrightness_;
        }

        /**
         * <pre>
         * Music State            // See MusicStates enum
         * </pre>
         *
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        public int getMusicStateValue() {
            return musicState_;
        }

        /**
         * <pre>
         * Music State            // See MusicStates enum
         * </pre>
         *
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        public MusicState.MusicStates getMusicState() {
            MusicState.MusicStates result = MusicState.MusicStates.valueOf(musicState_);
            return result == null ? MusicState.MusicStates.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * Music Play Count       // Range: [1, 4,294,967,295], 0=infinite
         * </pre>
         *
         * <code>optional uint32 music_play_count = 6;</code>
         */
        public int getMusicPlayCount() {
            return musicPlayCount_;
        }

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         *
         * <code>repeated string music_list = 7;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getMusicListList() {
            return musicList_;
        }

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         *
         * <code>repeated string music_list = 7;</code>
         */
        public int getMusicListCount() {
            return musicList_.size();
        }

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         *
         * <code>repeated string music_list = 7;</code>
         */
        public String getMusicList(int index) {
            return musicList_.get(index);
        }

        /**
         * <pre>
         * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         *
         * <code>repeated string music_list = 7;</code>
         */
        public com.google.protobuf.ByteString
        getMusicListBytes(int index) {
            return musicList_.getByteString(index);
        }

        /**
         * <pre>
         * Volume                 // Range: [0, 100] %
         * </pre>
         *
         * <code>optional uint32 volume = 8;</code>
         */
        public int getVolume() {
            return volume_;
        }

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         *
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getBlePairedDevicesList() {
            return blePairedDevices_;
        }

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         *
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        public int getBlePairedDevicesCount() {
            return blePairedDevices_.size();
        }

        /**
         * <pre>
         * BLE Paired Devices     // Value: array of six-octets
         * </pre>
         *
         * <code>repeated bytes ble_paired_devices = 9;</code>
         */
        public com.google.protobuf.ByteString getBlePairedDevices(int index) {
            return blePairedDevices_.get(index);
        }

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         *
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        public java.util.List<BLEConnection> getBleActiveConnectionsList() {
            return bleActiveConnections_;
        }

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        public java.util.List<? extends BLEConnectionOrBuilder>
        getBleActiveConnectionsOrBuilderList() {
            return bleActiveConnections_;
        }

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        public int getBleActiveConnectionsCount() {
            return bleActiveConnections_.size();
        }

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        public BLEConnection getBleActiveConnections(int index) {
            return bleActiveConnections_.get(index);
        }

        /**
         * <pre>
         * BLE Active Connections // See BLEConnection message
         * </pre>
         * <p>
         * <code>repeated .BLEConnection ble_active_connections = 10;</code>
         */
        public BLEConnectionOrBuilder getBleActiveConnectionsOrBuilder(
                int index) {
            return bleActiveConnections_.get(index);
        }

        /**
         * <pre>
         * Charging               // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool charging = 11;</code>
         */
        public boolean getCharging() {
            return charging_;
        }

        /**
         * <pre>
         * Firmware Version
         * </pre>
         * <p>
         * <code>optional bytes firmware_version = 12;</code>
         */
        public com.google.protobuf.ByteString getFirmwareVersion() {
            return firmwareVersion_;
        }

        /**
         * <pre>
         * Firmware Update State  // See FirmwareUpdateState enum
         * </pre>
         * <p>
         * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
         */
        public int getFirmwareUpdateStateValue() {
            return firmwareUpdateState_;
        }

        /**
         * <pre>
         * Firmware Update State  // See FirmwareUpdateState enum
         * </pre>
         *
         * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
         */
        public FirmwareUpdateState getFirmwareUpdateState() {
            FirmwareUpdateState result = FirmwareUpdateState.valueOf(firmwareUpdateState_);
            return result == null ? FirmwareUpdateState.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         *
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        public boolean hasWifiConnection() {
            return wifiConnection_ != null;
        }

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         *
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        public WifiConnection getWifiConnection() {
            return wifiConnection_ == null ? WifiConnection.getDefaultInstance() : wifiConnection_;
        }

        /**
         * <pre>
         * Wifi Connection        // See WifiConnection message
         * </pre>
         *
         * <code>optional .WifiConnection wifi_connection = 14;</code>
         */
        public WifiConnectionOrBuilder getWifiConnectionOrBuilder() {
            return getWifiConnection();
        }

        /**
         * <pre>
         * Charging Complete      // Value: True / False
         * </pre>
         *
         * <code>optional bool charging_complete = 15;</code>
         */
        public boolean getChargingComplete() {
            return chargingComplete_;
        }

        /**
         * <pre>
         * PTU Load Detected      // Value: True / False
         * </pre>
         *
         * <code>optional bool ptu_load_detected = 16;</code>
         */
        public boolean getPtuLoadDetected() {
            return ptuLoadDetected_;
        }

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         *
         * <code>optional string timezone = 17;</code>
         */
        public String getTimezone() {
            Object ref = timezone_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                timezone_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         *
         * <code>optional string timezone = 17;</code>
         */
        public com.google.protobuf.ByteString
        getTimezoneBytes() {
            Object ref = timezone_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                timezone_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
         * </pre>
         *
         * <code>optional string firmware_revision = 18;</code>
         */
        public String getFirmwareRevision() {
            Object ref = firmwareRevision_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                firmwareRevision_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
         * </pre>
         *
         * <code>optional string firmware_revision = 18;</code>
         */
        public com.google.protobuf.ByteString
        getFirmwareRevisionBytes() {
            Object ref = firmwareRevision_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                firmwareRevision_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         *
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        public java.util.List<Integer>
        getLedRgbColorList() {
            return ledRgbColor_;
        }

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         *
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        public int getLedRgbColorCount() {
            return ledRgbColor_.size();
        }

        /**
         * <pre>
         * LED RGB color          // Value: triplet array, Range: [0, 255]
         * </pre>
         *
         * <code>repeated uint32 led_rgb_color = 19;</code>
         */
        public int getLedRgbColor(int index) {
            return ledRgbColor_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (ledMode_ != LEDMode.LEDModes.UNKNOWN.getNumber()) {
                output.writeEnum(2, ledMode_);
            }
            if (ledColor_ != LEDColor.LEDColors.UNKNOWN.getNumber()) {
                output.writeEnum(3, ledColor_);
            }
            if (ledBrightness_ != 0) {
                output.writeUInt32(4, ledBrightness_);
            }
            if (musicState_ != MusicState.MusicStates.UNKNOWN.getNumber()) {
                output.writeEnum(5, musicState_);
            }
            if (musicPlayCount_ != 0) {
                output.writeUInt32(6, musicPlayCount_);
            }
            for (int i = 0; i < musicList_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, musicList_.getRaw(i));
            }
            if (volume_ != 0) {
                output.writeUInt32(8, volume_);
            }
            for (int i = 0; i < blePairedDevices_.size(); i++) {
                output.writeBytes(9, blePairedDevices_.get(i));
            }
            for (int i = 0; i < bleActiveConnections_.size(); i++) {
                output.writeMessage(10, bleActiveConnections_.get(i));
            }
            if (charging_ != false) {
                output.writeBool(11, charging_);
            }
            if (!firmwareVersion_.isEmpty()) {
                output.writeBytes(12, firmwareVersion_);
            }
            if (firmwareUpdateState_ != FirmwareUpdateState.UNKNOWN_STATE.getNumber()) {
                output.writeEnum(13, firmwareUpdateState_);
            }
            if (wifiConnection_ != null) {
                output.writeMessage(14, getWifiConnection());
            }
            if (chargingComplete_ != false) {
                output.writeBool(15, chargingComplete_);
            }
            if (ptuLoadDetected_ != false) {
                output.writeBool(16, ptuLoadDetected_);
            }
            if (!getTimezoneBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 17, timezone_);
            }
            if (!getFirmwareRevisionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 18, firmwareRevision_);
            }
            if (getLedRgbColorList().size() > 0) {
                output.writeUInt32NoTag(154);
                output.writeUInt32NoTag(ledRgbColorMemoizedSerializedSize);
            }
            for (int i = 0; i < ledRgbColor_.size(); i++) {
                output.writeUInt32NoTag(ledRgbColor_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (ledMode_ != LEDMode.LEDModes.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, ledMode_);
            }
            if (ledColor_ != LEDColor.LEDColors.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, ledColor_);
            }
            if (ledBrightness_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, ledBrightness_);
            }
            if (musicState_ != MusicState.MusicStates.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(5, musicState_);
            }
            if (musicPlayCount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, musicPlayCount_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < musicList_.size(); i++) {
                    dataSize += computeStringSizeNoTag(musicList_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getMusicListList().size();
            }
            if (volume_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(8, volume_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < blePairedDevices_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(blePairedDevices_.get(i));
                }
                size += dataSize;
                size += 1 * getBlePairedDevicesList().size();
            }
            for (int i = 0; i < bleActiveConnections_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, bleActiveConnections_.get(i));
            }
            if (charging_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(11, charging_);
            }
            if (!firmwareVersion_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(12, firmwareVersion_);
            }
            if (firmwareUpdateState_ != FirmwareUpdateState.UNKNOWN_STATE.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(13, firmwareUpdateState_);
            }
            if (wifiConnection_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(14, getWifiConnection());
            }
            if (chargingComplete_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(15, chargingComplete_);
            }
            if (ptuLoadDetected_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(16, ptuLoadDetected_);
            }
            if (!getTimezoneBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, timezone_);
            }
            if (!getFirmwareRevisionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, firmwareRevision_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < ledRgbColor_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(ledRgbColor_.get(i));
                }
                size += dataSize;
                if (!getLedRgbColorList().isEmpty()) {
                    size += 2;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ledRgbColorMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubStatus)) {
                return super.equals(obj);
            }
            HubStatus other = (HubStatus) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && ledMode_ == other.ledMode_;
            result = result && ledColor_ == other.ledColor_;
            result = result && (getLedBrightness()
                    == other.getLedBrightness());
            result = result && musicState_ == other.musicState_;
            result = result && (getMusicPlayCount()
                    == other.getMusicPlayCount());
            result = result && getMusicListList()
                    .equals(other.getMusicListList());
            result = result && (getVolume()
                    == other.getVolume());
            result = result && getBlePairedDevicesList()
                    .equals(other.getBlePairedDevicesList());
            result = result && getBleActiveConnectionsList()
                    .equals(other.getBleActiveConnectionsList());
            result = result && (getCharging()
                    == other.getCharging());
            result = result && getFirmwareVersion()
                    .equals(other.getFirmwareVersion());
            result = result && firmwareUpdateState_ == other.firmwareUpdateState_;
            result = result && (hasWifiConnection() == other.hasWifiConnection());
            if (hasWifiConnection()) {
                result = result && getWifiConnection()
                        .equals(other.getWifiConnection());
            }
            result = result && (getChargingComplete()
                    == other.getChargingComplete());
            result = result && (getPtuLoadDetected()
                    == other.getPtuLoadDetected());
            result = result && getTimezone()
                    .equals(other.getTimezone());
            result = result && getFirmwareRevision()
                    .equals(other.getFirmwareRevision());
            result = result && getLedRgbColorList()
                    .equals(other.getLedRgbColorList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + LED_MODE_FIELD_NUMBER;
            hash = (53 * hash) + ledMode_;
            hash = (37 * hash) + LED_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + ledColor_;
            hash = (37 * hash) + LED_BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + getLedBrightness();
            hash = (37 * hash) + MUSIC_STATE_FIELD_NUMBER;
            hash = (53 * hash) + musicState_;
            hash = (37 * hash) + MUSIC_PLAY_COUNT_FIELD_NUMBER;
            hash = (53 * hash) + getMusicPlayCount();
            if (getMusicListCount() > 0) {
                hash = (37 * hash) + MUSIC_LIST_FIELD_NUMBER;
                hash = (53 * hash) + getMusicListList().hashCode();
            }
            hash = (37 * hash) + VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getVolume();
            if (getBlePairedDevicesCount() > 0) {
                hash = (37 * hash) + BLE_PAIRED_DEVICES_FIELD_NUMBER;
                hash = (53 * hash) + getBlePairedDevicesList().hashCode();
            }
            if (getBleActiveConnectionsCount() > 0) {
                hash = (37 * hash) + BLE_ACTIVE_CONNECTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getBleActiveConnectionsList().hashCode();
            }
            hash = (37 * hash) + CHARGING_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getCharging());
            hash = (37 * hash) + FIRMWARE_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getFirmwareVersion().hashCode();
            hash = (37 * hash) + FIRMWARE_UPDATE_STATE_FIELD_NUMBER;
            hash = (53 * hash) + firmwareUpdateState_;
            if (hasWifiConnection()) {
                hash = (37 * hash) + WIFI_CONNECTION_FIELD_NUMBER;
                hash = (53 * hash) + getWifiConnection().hashCode();
            }
            hash = (37 * hash) + CHARGING_COMPLETE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getChargingComplete());
            hash = (37 * hash) + PTU_LOAD_DETECTED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getPtuLoadDetected());
            hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
            hash = (53 * hash) + getTimezone().hashCode();
            hash = (37 * hash) + FIRMWARE_REVISION_FIELD_NUMBER;
            hash = (53 * hash) + getFirmwareRevision().hashCode();
            if (getLedRgbColorCount() > 0) {
                hash = (37 * hash) + LED_RGB_COLOR_FIELD_NUMBER;
                hash = (53 * hash) + getLedRgbColorList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubStatus> getParserForType() {
            return PARSER;
        }

        public HubStatus getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub Status [device/hub/SN_HUB/status]
         *    Hub status report which is published on every change in state (always publish as retained=True)
         *    - published every five minutes
         *    - published every network state change
         *    - published every charge event
         *    - published every BLE connection change
         *    - published every command and control packet
         *    - published every firmware update state change
         * </pre>
         *
         * Protobuf type {@code HubStatus}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubStatus)
                HubStatusOrBuilder {
            private int bitField0_;
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int ledMode_ = 0;
            private int ledColor_ = 0;
            private int ledBrightness_ ;
            private int musicState_ = 0;
            private int musicPlayCount_ ;
            private com.google.protobuf.LazyStringList musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            private int volume_ ;
            private java.util.List<com.google.protobuf.ByteString> blePairedDevices_ = java.util.Collections.emptyList();
            private java.util.List<BLEConnection> bleActiveConnections_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    BLEConnection, BLEConnection.Builder, BLEConnectionOrBuilder> bleActiveConnectionsBuilder_;
            private boolean charging_ ;
            private com.google.protobuf.ByteString firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;
            private int firmwareUpdateState_ = 0;
            private WifiConnection wifiConnection_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    WifiConnection, WifiConnection.Builder, WifiConnectionOrBuilder> wifiConnectionBuilder_;
            private boolean chargingComplete_;
            private boolean ptuLoadDetected_;
            private Object timezone_ = "";
            private Object firmwareRevision_ = "";
            private java.util.List<Integer> ledRgbColor_ = java.util.Collections.emptyList();

            // Construct using Hub.HubStatus.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubStatus_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubStatus_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubStatus.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getBleActiveConnectionsFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                ledMode_ = 0;

                ledColor_ = 0;

                ledBrightness_ = 0;

                musicState_ = 0;

                musicPlayCount_ = 0;

                musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                volume_ = 0;

                blePairedDevices_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000100);
                if (bleActiveConnectionsBuilder_ == null) {
                    bleActiveConnections_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                } else {
                    bleActiveConnectionsBuilder_.clear();
                }
                charging_ = false;

                firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;

                firmwareUpdateState_ = 0;

                if (wifiConnectionBuilder_ == null) {
                    wifiConnection_ = null;
                } else {
                    wifiConnection_ = null;
                    wifiConnectionBuilder_ = null;
                }
                chargingComplete_ = false;

                ptuLoadDetected_ = false;

                timezone_ = "";

                firmwareRevision_ = "";

                ledRgbColor_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00040000);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubStatus_descriptor;
            }

            public HubStatus getDefaultInstanceForType() {
                return HubStatus.getDefaultInstance();
            }

            public HubStatus build() {
                HubStatus result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubStatus buildPartial() {
                HubStatus result = new HubStatus(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.ledMode_ = ledMode_;
                result.ledColor_ = ledColor_;
                result.ledBrightness_ = ledBrightness_;
                result.musicState_ = musicState_;
                result.musicPlayCount_ = musicPlayCount_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = musicList_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.musicList_ = musicList_;
                result.volume_ = volume_;
                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    blePairedDevices_ = java.util.Collections.unmodifiableList(blePairedDevices_);
                    bitField0_ = (bitField0_ & ~0x00000100);
                }
                result.blePairedDevices_ = blePairedDevices_;
                if (bleActiveConnectionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000200) == 0x00000200)) {
                        bleActiveConnections_ = java.util.Collections.unmodifiableList(bleActiveConnections_);
                        bitField0_ = (bitField0_ & ~0x00000200);
                    }
                    result.bleActiveConnections_ = bleActiveConnections_;
                } else {
                    result.bleActiveConnections_ = bleActiveConnectionsBuilder_.build();
                }
                result.charging_ = charging_;
                result.firmwareVersion_ = firmwareVersion_;
                result.firmwareUpdateState_ = firmwareUpdateState_;
                if (wifiConnectionBuilder_ == null) {
                    result.wifiConnection_ = wifiConnection_;
                } else {
                    result.wifiConnection_ = wifiConnectionBuilder_.build();
                }
                result.chargingComplete_ = chargingComplete_;
                result.ptuLoadDetected_ = ptuLoadDetected_;
                result.timezone_ = timezone_;
                result.firmwareRevision_ = firmwareRevision_;
                if (((bitField0_ & 0x00040000) == 0x00040000)) {
                    ledRgbColor_ = java.util.Collections.unmodifiableList(ledRgbColor_);
                    bitField0_ = (bitField0_ & ~0x00040000);
                }
                result.ledRgbColor_ = ledRgbColor_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubStatus) {
                    return mergeFrom((HubStatus)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubStatus other) {
                if (other == HubStatus.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.ledMode_ != 0) {
                    setLedModeValue(other.getLedModeValue());
                }
                if (other.ledColor_ != 0) {
                    setLedColorValue(other.getLedColorValue());
                }
                if (other.getLedBrightness() != 0) {
                    setLedBrightness(other.getLedBrightness());
                }
                if (other.musicState_ != 0) {
                    setMusicStateValue(other.getMusicStateValue());
                }
                if (other.getMusicPlayCount() != 0) {
                    setMusicPlayCount(other.getMusicPlayCount());
                }
                if (!other.musicList_.isEmpty()) {
                    if (musicList_.isEmpty()) {
                        musicList_ = other.musicList_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureMusicListIsMutable();
                        musicList_.addAll(other.musicList_);
                    }
                    onChanged();
                }
                if (other.getVolume() != 0) {
                    setVolume(other.getVolume());
                }
                if (!other.blePairedDevices_.isEmpty()) {
                    if (blePairedDevices_.isEmpty()) {
                        blePairedDevices_ = other.blePairedDevices_;
                        bitField0_ = (bitField0_ & ~0x00000100);
                    } else {
                        ensureBlePairedDevicesIsMutable();
                        blePairedDevices_.addAll(other.blePairedDevices_);
                    }
                    onChanged();
                }
                if (bleActiveConnectionsBuilder_ == null) {
                    if (!other.bleActiveConnections_.isEmpty()) {
                        if (bleActiveConnections_.isEmpty()) {
                            bleActiveConnections_ = other.bleActiveConnections_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                        } else {
                            ensureBleActiveConnectionsIsMutable();
                            bleActiveConnections_.addAll(other.bleActiveConnections_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.bleActiveConnections_.isEmpty()) {
                        if (bleActiveConnectionsBuilder_.isEmpty()) {
                            bleActiveConnectionsBuilder_.dispose();
                            bleActiveConnectionsBuilder_ = null;
                            bleActiveConnections_ = other.bleActiveConnections_;
                            bitField0_ = (bitField0_ & ~0x00000200);
                            bleActiveConnectionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getBleActiveConnectionsFieldBuilder() : null;
                        } else {
                            bleActiveConnectionsBuilder_.addAllMessages(other.bleActiveConnections_);
                        }
                    }
                }
                if (other.getCharging() != false) {
                    setCharging(other.getCharging());
                }
                if (other.getFirmwareVersion() != com.google.protobuf.ByteString.EMPTY) {
                    setFirmwareVersion(other.getFirmwareVersion());
                }
                if (other.firmwareUpdateState_ != 0) {
                    setFirmwareUpdateStateValue(other.getFirmwareUpdateStateValue());
                }
                if (other.hasWifiConnection()) {
                    mergeWifiConnection(other.getWifiConnection());
                }
                if (other.getChargingComplete() != false) {
                    setChargingComplete(other.getChargingComplete());
                }
                if (other.getPtuLoadDetected() != false) {
                    setPtuLoadDetected(other.getPtuLoadDetected());
                }
                if (!other.getTimezone().isEmpty()) {
                    timezone_ = other.timezone_;
                    onChanged();
                }
                if (!other.getFirmwareRevision().isEmpty()) {
                    firmwareRevision_ = other.firmwareRevision_;
                    onChanged();
                }
                if (!other.ledRgbColor_.isEmpty()) {
                    if (ledRgbColor_.isEmpty()) {
                        ledRgbColor_ = other.ledRgbColor_;
                        bitField0_ = (bitField0_ & ~0x00040000);
                    } else {
                        ensureLedRgbColorIsMutable();
                        ledRgbColor_.addAll(other.ledRgbColor_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubStatus parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubStatus) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * LED Mode               // See LEDModes enum
             * </pre>
             *
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public int getLedModeValue() {
                return ledMode_;
            }

            /**
             * <pre>
             * LED Mode               // See LEDModes enum
             * </pre>
             *
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder setLedModeValue(int value) {
                ledMode_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Mode               // See LEDModes enum
             * </pre>
             *
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public LEDMode.LEDModes getLedMode() {
                LEDMode.LEDModes result = LEDMode.LEDModes.valueOf(ledMode_);
                return result == null ? LEDMode.LEDModes.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * LED Mode               // See LEDModes enum
             * </pre>
             *
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder setLedMode(LEDMode.LEDModes value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                ledMode_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Mode               // See LEDModes enum
             * </pre>
             *
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder clearLedMode() {

                ledMode_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color              // See LEDColors enum
             * </pre>
             *
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public int getLedColorValue() {
                return ledColor_;
            }

            /**
             * <pre>
             * LED Color              // See LEDColors enum
             * </pre>
             *
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder setLedColorValue(int value) {
                ledColor_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color              // See LEDColors enum
             * </pre>
             *
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public LEDColor.LEDColors getLedColor() {
                LEDColor.LEDColors result = LEDColor.LEDColors.valueOf(ledColor_);
                return result == null ? LEDColor.LEDColors.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * LED Color              // See LEDColors enum
             * </pre>
             *
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder setLedColor(LEDColor.LEDColors value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                ledColor_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color              // See LEDColors enum
             * </pre>
             *
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder clearLedColor() {

                ledColor_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Brightness         // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             *
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public int getLedBrightness() {
                return ledBrightness_;
            }

            /**
             * <pre>
             * LED Brightness         // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             *
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public Builder setLedBrightness(int value) {

                ledBrightness_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Brightness         // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             *
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public Builder clearLedBrightness() {

                ledBrightness_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State            // See MusicStates enum
             * </pre>
             *
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public int getMusicStateValue() {
                return musicState_;
            }

            /**
             * <pre>
             * Music State            // See MusicStates enum
             * </pre>
             *
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder setMusicStateValue(int value) {
                musicState_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State            // See MusicStates enum
             * </pre>
             *
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public MusicState.MusicStates getMusicState() {
                MusicState.MusicStates result = MusicState.MusicStates.valueOf(musicState_);
                return result == null ? MusicState.MusicStates.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Music State            // See MusicStates enum
             * </pre>
             *
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder setMusicState(MusicState.MusicStates value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                musicState_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State            // See MusicStates enum
             * </pre>
             *
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder clearMusicState() {

                musicState_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Play Count       // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             *
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public int getMusicPlayCount() {
                return musicPlayCount_;
            }

            /**
             * <pre>
             * Music Play Count       // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             *
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public Builder setMusicPlayCount(int value) {

                musicPlayCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Play Count       // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             *
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public Builder clearMusicPlayCount() {

                musicPlayCount_ = 0;
                onChanged();
                return this;
            }

            private void ensureMusicListIsMutable() {
                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = new com.google.protobuf.LazyStringArrayList(musicList_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getMusicListList() {
                return musicList_.getUnmodifiableView();
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public int getMusicListCount() {
                return musicList_.size();
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public String getMusicList(int index) {
                return musicList_.get(index);
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public com.google.protobuf.ByteString
            getMusicListBytes(int index) {
                return musicList_.getByteString(index);
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public Builder setMusicList(
                    int index, String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureMusicListIsMutable();
                musicList_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public Builder addMusicList(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureMusicListIsMutable();
                musicList_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public Builder addAllMusicList(
                    Iterable<String> values) {
                ensureMusicListIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, musicList_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public Builder clearMusicList() {
                musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music List             // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             *
             * <code>repeated string music_list = 7;</code>
             */
            public Builder addMusicListBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureMusicListIsMutable();
                musicList_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Volume                 // Range: [0, 100] %
             * </pre>
             *
             * <code>optional uint32 volume = 8;</code>
             */
            public int getVolume() {
                return volume_;
            }

            /**
             * <pre>
             * Volume                 // Range: [0, 100] %
             * </pre>
             *
             * <code>optional uint32 volume = 8;</code>
             */
            public Builder setVolume(int value) {

                volume_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Volume                 // Range: [0, 100] %
             * </pre>
             *
             * <code>optional uint32 volume = 8;</code>
             */
            public Builder clearVolume() {

                volume_ = 0;
                onChanged();
                return this;
            }

            private void ensureBlePairedDevicesIsMutable() {
                if (!((bitField0_ & 0x00000100) == 0x00000100)) {
                    blePairedDevices_ = new java.util.ArrayList<com.google.protobuf.ByteString>(blePairedDevices_);
                    bitField0_ |= 0x00000100;
                }
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getBlePairedDevicesList() {
                return java.util.Collections.unmodifiableList(blePairedDevices_);
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public int getBlePairedDevicesCount() {
                return blePairedDevices_.size();
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public com.google.protobuf.ByteString getBlePairedDevices(int index) {
                return blePairedDevices_.get(index);
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public Builder setBlePairedDevices(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureBlePairedDevicesIsMutable();
                blePairedDevices_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public Builder addBlePairedDevices(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureBlePairedDevicesIsMutable();
                blePairedDevices_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public Builder addAllBlePairedDevices(
                    Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureBlePairedDevicesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, blePairedDevices_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE Paired Devices     // Value: array of six-octets
             * </pre>
             *
             * <code>repeated bytes ble_paired_devices = 9;</code>
             */
            public Builder clearBlePairedDevices() {
                blePairedDevices_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000100);
                onChanged();
                return this;
            }

            private void ensureBleActiveConnectionsIsMutable() {
                if (!((bitField0_ & 0x00000200) == 0x00000200)) {
                    bleActiveConnections_ = new java.util.ArrayList<BLEConnection>(bleActiveConnections_);
                    bitField0_ |= 0x00000200;
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public java.util.List<BLEConnection> getBleActiveConnectionsList() {
                if (bleActiveConnectionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(bleActiveConnections_);
                } else {
                    return bleActiveConnectionsBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public int getBleActiveConnectionsCount() {
                if (bleActiveConnectionsBuilder_ == null) {
                    return bleActiveConnections_.size();
                } else {
                    return bleActiveConnectionsBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public BLEConnection getBleActiveConnections(int index) {
                if (bleActiveConnectionsBuilder_ == null) {
                    return bleActiveConnections_.get(index);
                } else {
                    return bleActiveConnectionsBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder setBleActiveConnections(
                    int index, BLEConnection value) {
                if (bleActiveConnectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.set(index, value);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder setBleActiveConnections(
                    int index, BLEConnection.Builder builderForValue) {
                if (bleActiveConnectionsBuilder_ == null) {
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder addBleActiveConnections(BLEConnection value) {
                if (bleActiveConnectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.add(value);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder addBleActiveConnections(
                    int index, BLEConnection value) {
                if (bleActiveConnectionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.add(index, value);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder addBleActiveConnections(
                    BLEConnection.Builder builderForValue) {
                if (bleActiveConnectionsBuilder_ == null) {
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.add(builderForValue.build());
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder addBleActiveConnections(
                    int index, BLEConnection.Builder builderForValue) {
                if (bleActiveConnectionsBuilder_ == null) {
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder addAllBleActiveConnections(
                    Iterable<? extends BLEConnection> values) {
                if (bleActiveConnectionsBuilder_ == null) {
                    ensureBleActiveConnectionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, bleActiveConnections_);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder clearBleActiveConnections() {
                if (bleActiveConnectionsBuilder_ == null) {
                    bleActiveConnections_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000200);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public Builder removeBleActiveConnections(int index) {
                if (bleActiveConnectionsBuilder_ == null) {
                    ensureBleActiveConnectionsIsMutable();
                    bleActiveConnections_.remove(index);
                    onChanged();
                } else {
                    bleActiveConnectionsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public BLEConnection.Builder getBleActiveConnectionsBuilder(
                    int index) {
                return getBleActiveConnectionsFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public BLEConnectionOrBuilder getBleActiveConnectionsOrBuilder(
                    int index) {
                if (bleActiveConnectionsBuilder_ == null) {
                    return bleActiveConnections_.get(index);
                } else {
                    return bleActiveConnectionsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public java.util.List<? extends BLEConnectionOrBuilder>
            getBleActiveConnectionsOrBuilderList() {
                if (bleActiveConnectionsBuilder_ != null) {
                    return bleActiveConnectionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(bleActiveConnections_);
                }
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public BLEConnection.Builder addBleActiveConnectionsBuilder() {
                return getBleActiveConnectionsFieldBuilder().addBuilder(
                        BLEConnection.getDefaultInstance());
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public BLEConnection.Builder addBleActiveConnectionsBuilder(
                    int index) {
                return getBleActiveConnectionsFieldBuilder().addBuilder(
                        index, BLEConnection.getDefaultInstance());
            }

            /**
             * <pre>
             * BLE Active Connections // See BLEConnection message
             * </pre>
             *
             * <code>repeated .BLEConnection ble_active_connections = 10;</code>
             */
            public java.util.List<BLEConnection.Builder>
            getBleActiveConnectionsBuilderList() {
                return getBleActiveConnectionsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    BLEConnection, BLEConnection.Builder, BLEConnectionOrBuilder>
            getBleActiveConnectionsFieldBuilder() {
                if (bleActiveConnectionsBuilder_ == null) {
                    bleActiveConnectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            BLEConnection, BLEConnection.Builder, BLEConnectionOrBuilder>(
                            bleActiveConnections_,
                            ((bitField0_ & 0x00000200) == 0x00000200),
                            getParentForChildren(),
                            isClean());
                    bleActiveConnections_ = null;
                }
                return bleActiveConnectionsBuilder_;
            }

            /**
             * <pre>
             * Charging               // Value: True / False
             * </pre>
             *
             * <code>optional bool charging = 11;</code>
             */
            public boolean getCharging() {
                return charging_;
            }

            /**
             * <pre>
             * Charging               // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool charging = 11;</code>
             */
            public Builder setCharging(boolean value) {

                charging_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Charging               // Value: True / False
             * </pre>
             *
             * <code>optional bool charging = 11;</code>
             */
            public Builder clearCharging() {

                charging_ = false;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 12;</code>
             */
            public com.google.protobuf.ByteString getFirmwareVersion() {
                return firmwareVersion_;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 12;</code>
             */
            public Builder setFirmwareVersion(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                firmwareVersion_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 12;</code>
             */
            public Builder clearFirmwareVersion() {

                firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Update State  // See FirmwareUpdateState enum
             * </pre>
             *
             * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
             */
            public int getFirmwareUpdateStateValue() {
                return firmwareUpdateState_;
            }

            /**
             * <pre>
             * Firmware Update State  // See FirmwareUpdateState enum
             * </pre>
             *
             * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
             */
            public Builder setFirmwareUpdateStateValue(int value) {
                firmwareUpdateState_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Update State  // See FirmwareUpdateState enum
             * </pre>
             *
             * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
             */
            public FirmwareUpdateState getFirmwareUpdateState() {
                FirmwareUpdateState result = FirmwareUpdateState.valueOf(firmwareUpdateState_);
                return result == null ? FirmwareUpdateState.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Firmware Update State  // See FirmwareUpdateState enum
             * </pre>
             *
             * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
             */
            public Builder setFirmwareUpdateState(FirmwareUpdateState value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                firmwareUpdateState_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Update State  // See FirmwareUpdateState enum
             * </pre>
             *
             * <code>optional .FirmwareUpdateState firmware_update_state = 13;</code>
             */
            public Builder clearFirmwareUpdateState() {

                firmwareUpdateState_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public boolean hasWifiConnection() {
                return wifiConnectionBuilder_ != null || wifiConnection_ != null;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public WifiConnection getWifiConnection() {
                if (wifiConnectionBuilder_ == null) {
                    return wifiConnection_ == null ? WifiConnection.getDefaultInstance() : wifiConnection_;
                } else {
                    return wifiConnectionBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public Builder setWifiConnection(
                    WifiConnection.Builder builderForValue) {
                if (wifiConnectionBuilder_ == null) {
                    wifiConnection_ = builderForValue.build();
                    onChanged();
                } else {
                    wifiConnectionBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public Builder setWifiConnection(WifiConnection value) {
                if (wifiConnectionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    wifiConnection_ = value;
                    onChanged();
                } else {
                    wifiConnectionBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             * <p>
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public Builder mergeWifiConnection(WifiConnection value) {
                if (wifiConnectionBuilder_ == null) {
                    if (wifiConnection_ != null) {
                        wifiConnection_ =
                                WifiConnection.newBuilder(wifiConnection_).mergeFrom(value).buildPartial();
                    } else {
                        wifiConnection_ = value;
                    }
                    onChanged();
                } else {
                    wifiConnectionBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public Builder clearWifiConnection() {
                if (wifiConnectionBuilder_ == null) {
                    wifiConnection_ = null;
                    onChanged();
                } else {
                    wifiConnection_ = null;
                    wifiConnectionBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public WifiConnection.Builder getWifiConnectionBuilder() {

                onChanged();
                return getWifiConnectionFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            public WifiConnectionOrBuilder getWifiConnectionOrBuilder() {
                if (wifiConnectionBuilder_ != null) {
                    return wifiConnectionBuilder_.getMessageOrBuilder();
                } else {
                    return wifiConnection_ == null ?
                            WifiConnection.getDefaultInstance() : wifiConnection_;
                }
            }

            /**
             * <pre>
             * Wifi Connection        // See WifiConnection message
             * </pre>
             *
             * <code>optional .WifiConnection wifi_connection = 14;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    WifiConnection, WifiConnection.Builder, WifiConnectionOrBuilder>
            getWifiConnectionFieldBuilder() {
                if (wifiConnectionBuilder_ == null) {
                    wifiConnectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            WifiConnection, WifiConnection.Builder, WifiConnectionOrBuilder>(
                            getWifiConnection(),
                            getParentForChildren(),
                            isClean());
                    wifiConnection_ = null;
                }
                return wifiConnectionBuilder_;
            }

            /**
             * <pre>
             * Charging Complete      // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool charging_complete = 15;</code>
             */
            public boolean getChargingComplete() {
                return chargingComplete_;
            }

            /**
             * <pre>
             * Charging Complete      // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool charging_complete = 15;</code>
             */
            public Builder setChargingComplete(boolean value) {

                chargingComplete_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Charging Complete      // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool charging_complete = 15;</code>
             */
            public Builder clearChargingComplete() {

                chargingComplete_ = false;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * PTU Load Detected      // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool ptu_load_detected = 16;</code>
             */
            public boolean getPtuLoadDetected() {
                return ptuLoadDetected_;
            }

            /**
             * <pre>
             * PTU Load Detected      // Value: True / False
             * </pre>
             *
             * <code>optional bool ptu_load_detected = 16;</code>
             */
            public Builder setPtuLoadDetected(boolean value) {

                ptuLoadDetected_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * PTU Load Detected      // Value: True / False
             * </pre>
             * <p>
             * <code>optional bool ptu_load_detected = 16;</code>
             */
            public Builder clearPtuLoadDetected() {

                ptuLoadDetected_ = false;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 17;</code>
             */
            public String getTimezone() {
                Object ref = timezone_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    timezone_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 17;</code>
             */
            public Builder setTimezone(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                timezone_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 17;</code>
             */
            public com.google.protobuf.ByteString
            getTimezoneBytes() {
                Object ref = timezone_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    timezone_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 17;</code>
             */
            public Builder setTimezoneBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                timezone_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 17;</code>
             */
            public Builder clearTimezone() {

                timezone_ = getDefaultInstance().getTimezone();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
             * </pre>
             *
             * <code>optional string firmware_revision = 18;</code>
             */
            public String getFirmwareRevision() {
                Object ref = firmwareRevision_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    firmwareRevision_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
             * </pre>
             *
             * <code>optional string firmware_revision = 18;</code>
             */
            public Builder setFirmwareRevision(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                firmwareRevision_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
             * </pre>
             * <p>
             * <code>optional string firmware_revision = 18;</code>
             */
            public com.google.protobuf.ByteString
            getFirmwareRevisionBytes() {
                Object ref = firmwareRevision_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    firmwareRevision_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
             * </pre>
             *
             * <code>optional string firmware_revision = 18;</code>
             */
            public Builder setFirmwareRevisionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                firmwareRevision_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Revision      // e.g. 'v1.2.33-4-feature-foo-bar' ...revision is '-4-feature-foo-bar' (reported by branch builds, otherwise empty string)
             * </pre>
             *
             * <code>optional string firmware_revision = 18;</code>
             */
            public Builder clearFirmwareRevision() {

                firmwareRevision_ = getDefaultInstance().getFirmwareRevision();
                onChanged();
                return this;
            }

            private void ensureLedRgbColorIsMutable() {
                if (!((bitField0_ & 0x00040000) == 0x00040000)) {
                    ledRgbColor_ = new java.util.ArrayList<Integer>(ledRgbColor_);
                    bitField0_ |= 0x00040000;
                }
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public java.util.List<Integer>
            getLedRgbColorList() {
                return java.util.Collections.unmodifiableList(ledRgbColor_);
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public int getLedRgbColorCount() {
                return ledRgbColor_.size();
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public int getLedRgbColor(int index) {
                return ledRgbColor_.get(index);
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public Builder setLedRgbColor(
                    int index, int value) {
                ensureLedRgbColorIsMutable();
                ledRgbColor_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public Builder addLedRgbColor(int value) {
                ensureLedRgbColorIsMutable();
                ledRgbColor_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             * <p>
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public Builder addAllLedRgbColor(
                    Iterable<? extends Integer> values) {
                ensureLedRgbColorIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ledRgbColor_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED RGB color          // Value: triplet array, Range: [0, 255]
             * </pre>
             * <p>
             * <code>repeated uint32 led_rgb_color = 19;</code>
             */
            public Builder clearLedRgbColor() {
                ledRgbColor_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00040000);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubStatus)
        }

    }

    /**
     * <pre>
     * Hub Sensors [device/hub/SN_HUB/ambient]
     *    Ambient sensor report which includes humidity/temperature sensor, ambient light sensor and noise level sensor.
     *    - published every five minutes
     *    - published every time a band telemetry report is received
     * </pre>
     * <p>
     * Protobuf type {@code HubAmbient}
     */
    public static final class HubAmbient extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubAmbient)
            HubAmbientOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int RELATIVE_HUMIDITY_FIELD_NUMBER = 2;
        public static final int AMBIENT_LIGHT_FIELD_NUMBER = 3;
        public static final int AMBIENT_NOISE_FIELD_NUMBER = 4;
        public static final int AMBIENT_TEMPERATURE_FIELD_NUMBER = 5;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubAmbient)
        private static final HubAmbient DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubAmbient>
                PARSER = new com.google.protobuf.AbstractParser<HubAmbient>() {
            public HubAmbient parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubAmbient(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubAmbient();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int relativeHumidity_;
        private int ambientLight_;
        private int ambientNoise_;
        private int ambientTemperature_;
        private byte memoizedIsInitialized = -1;

        // Use HubAmbient.newBuilder() to construct.
        private HubAmbient(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubAmbient() {
            relativeHumidity_ = 0;
            ambientLight_ = 0;
            ambientNoise_ = 0;
            ambientTemperature_ = 0;
        }

        private HubAmbient(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            relativeHumidity_ = input.readUInt32();
                            break;
                        }
                        case 24: {

                            ambientLight_ = input.readUInt32();
                            break;
                        }
                        case 32: {

                            ambientNoise_ = input.readUInt32();
                            break;
                        }
                        case 40: {

                            ambientTemperature_ = input.readSInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubAmbient_descriptor;
        }

        public static HubAmbient parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubAmbient parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubAmbient parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubAmbient parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubAmbient parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubAmbient parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubAmbient parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubAmbient parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubAmbient parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubAmbient parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubAmbient prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubAmbient getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubAmbient> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubAmbient_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubAmbient.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Relative Humidity (Moisture)  // Range: [0, 100] %
         * </pre>
         * <p>
         * <code>optional uint32 relative_humidity = 2;</code>
         */
        public int getRelativeHumidity() {
            return relativeHumidity_;
        }

        /**
         * <pre>
         * Ambient Light (Lumens)        // Range: [0, 83,000] lum
         * </pre>
         *
         * <code>optional uint32 ambient_light = 3;</code>
         */
        public int getAmbientLight() {
            return ambientLight_;
        }

        /**
         * <pre>
         * Ambient Noise Level (dB-SPL)  // Range: [0, 130] dB
         * </pre>
         * <p>
         * <code>optional uint32 ambient_noise = 4;</code>
         */
        public int getAmbientNoise() {
            return ambientNoise_;
        }

        /**
         * <pre>
         * Ambient Temperature (Celsius) // Range: [-40, 100] C
         * </pre>
         *
         * <code>optional sint32 ambient_temperature = 5;</code>
         */
        public int getAmbientTemperature() {
            return ambientTemperature_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (relativeHumidity_ != 0) {
                output.writeUInt32(2, relativeHumidity_);
            }
            if (ambientLight_ != 0) {
                output.writeUInt32(3, ambientLight_);
            }
            if (ambientNoise_ != 0) {
                output.writeUInt32(4, ambientNoise_);
            }
            if (ambientTemperature_ != 0) {
                output.writeSInt32(5, ambientTemperature_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (relativeHumidity_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, relativeHumidity_);
            }
            if (ambientLight_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, ambientLight_);
            }
            if (ambientNoise_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, ambientNoise_);
            }
            if (ambientTemperature_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(5, ambientTemperature_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubAmbient)) {
                return super.equals(obj);
            }
            HubAmbient other = (HubAmbient) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getRelativeHumidity()
                    == other.getRelativeHumidity());
            result = result && (getAmbientLight()
                    == other.getAmbientLight());
            result = result && (getAmbientNoise()
                    == other.getAmbientNoise());
            result = result && (getAmbientTemperature()
                    == other.getAmbientTemperature());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + RELATIVE_HUMIDITY_FIELD_NUMBER;
            hash = (53 * hash) + getRelativeHumidity();
            hash = (37 * hash) + AMBIENT_LIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getAmbientLight();
            hash = (37 * hash) + AMBIENT_NOISE_FIELD_NUMBER;
            hash = (53 * hash) + getAmbientNoise();
            hash = (37 * hash) + AMBIENT_TEMPERATURE_FIELD_NUMBER;
            hash = (53 * hash) + getAmbientTemperature();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubAmbient> getParserForType() {
            return PARSER;
        }

        public HubAmbient getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub Sensors [device/hub/SN_HUB/ambient]
         *    Ambient sensor report which includes humidity/temperature sensor, ambient light sensor and noise level sensor.
         *    - published every five minutes
         *    - published every time a band telemetry report is received
         * </pre>
         *
         * Protobuf type {@code HubAmbient}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubAmbient)
                HubAmbientOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int relativeHumidity_ ;
            private int ambientLight_ ;
            private int ambientNoise_ ;
            private int ambientTemperature_ ;

            // Construct using Hub.HubAmbient.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubAmbient_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubAmbient_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubAmbient.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                relativeHumidity_ = 0;

                ambientLight_ = 0;

                ambientNoise_ = 0;

                ambientTemperature_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubAmbient_descriptor;
            }

            public HubAmbient getDefaultInstanceForType() {
                return HubAmbient.getDefaultInstance();
            }

            public HubAmbient build() {
                HubAmbient result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubAmbient buildPartial() {
                HubAmbient result = new HubAmbient(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.relativeHumidity_ = relativeHumidity_;
                result.ambientLight_ = ambientLight_;
                result.ambientNoise_ = ambientNoise_;
                result.ambientTemperature_ = ambientTemperature_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubAmbient) {
                    return mergeFrom((HubAmbient)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubAmbient other) {
                if (other == HubAmbient.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getRelativeHumidity() != 0) {
                    setRelativeHumidity(other.getRelativeHumidity());
                }
                if (other.getAmbientLight() != 0) {
                    setAmbientLight(other.getAmbientLight());
                }
                if (other.getAmbientNoise() != 0) {
                    setAmbientNoise(other.getAmbientNoise());
                }
                if (other.getAmbientTemperature() != 0) {
                    setAmbientTemperature(other.getAmbientTemperature());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubAmbient parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubAmbient) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Relative Humidity (Moisture)  // Range: [0, 100] %
             * </pre>
             * <p>
             * <code>optional uint32 relative_humidity = 2;</code>
             */
            public int getRelativeHumidity() {
                return relativeHumidity_;
            }

            /**
             * <pre>
             * Relative Humidity (Moisture)  // Range: [0, 100] %
             * </pre>
             * <p>
             * <code>optional uint32 relative_humidity = 2;</code>
             */
            public Builder setRelativeHumidity(int value) {

                relativeHumidity_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Relative Humidity (Moisture)  // Range: [0, 100] %
             * </pre>
             *
             * <code>optional uint32 relative_humidity = 2;</code>
             */
            public Builder clearRelativeHumidity() {

                relativeHumidity_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Light (Lumens)        // Range: [0, 83,000] lum
             * </pre>
             *
             * <code>optional uint32 ambient_light = 3;</code>
             */
            public int getAmbientLight() {
                return ambientLight_;
            }

            /**
             * <pre>
             * Ambient Light (Lumens)        // Range: [0, 83,000] lum
             * </pre>
             *
             * <code>optional uint32 ambient_light = 3;</code>
             */
            public Builder setAmbientLight(int value) {

                ambientLight_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Light (Lumens)        // Range: [0, 83,000] lum
             * </pre>
             *
             * <code>optional uint32 ambient_light = 3;</code>
             */
            public Builder clearAmbientLight() {

                ambientLight_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Noise Level (dB-SPL)  // Range: [0, 130] dB
             * </pre>
             *
             * <code>optional uint32 ambient_noise = 4;</code>
             */
            public int getAmbientNoise() {
                return ambientNoise_;
            }

            /**
             * <pre>
             * Ambient Noise Level (dB-SPL)  // Range: [0, 130] dB
             * </pre>
             *
             * <code>optional uint32 ambient_noise = 4;</code>
             */
            public Builder setAmbientNoise(int value) {

                ambientNoise_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Noise Level (dB-SPL)  // Range: [0, 130] dB
             * </pre>
             *
             * <code>optional uint32 ambient_noise = 4;</code>
             */
            public Builder clearAmbientNoise() {

                ambientNoise_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Temperature (Celsius) // Range: [-40, 100] C
             * </pre>
             *
             * <code>optional sint32 ambient_temperature = 5;</code>
             */
            public int getAmbientTemperature() {
                return ambientTemperature_;
            }

            /**
             * <pre>
             * Ambient Temperature (Celsius) // Range: [-40, 100] C
             * </pre>
             *
             * <code>optional sint32 ambient_temperature = 5;</code>
             */
            public Builder setAmbientTemperature(int value) {

                ambientTemperature_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ambient Temperature (Celsius) // Range: [-40, 100] C
             * </pre>
             *
             * <code>optional sint32 ambient_temperature = 5;</code>
             */
            public Builder clearAmbientTemperature() {

                ambientTemperature_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubAmbient)
        }

    }

    /**
     * <pre>
     * Firmware Update (always publish with retained=True)
     *  [device/hub/SN_HUB/firmware]      (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware]         (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/hub]  (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/hub]     (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/band] (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/band]    (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/extra](always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/extra]   (always publish with force_firmware=False)
     *    Firmware updates for hub and band
     * </pre>
     * <p>
     * Protobuf type {@code FirmwareUpdate}
     */
    public static final class FirmwareUpdate extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:FirmwareUpdate)
            FirmwareUpdateOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int FILE_SIZE_FIELD_NUMBER = 2;
        public static final int URL_FIELD_NUMBER = 3;
        public static final int FORCE_FIRMWARE_FIELD_NUMBER = 4;
        public static final int HUB_VERSION_FIELD_NUMBER = 5;
        public static final int WEARABLE_VERSION_FIELD_NUMBER = 6;
        public static final int EXTRA_VERSION_FIELD_NUMBER = 7;
        public static final int BOOT_VERSION_FIELD_NUMBER = 8;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:FirmwareUpdate)
        private static final FirmwareUpdate DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<FirmwareUpdate>
                PARSER = new com.google.protobuf.AbstractParser<FirmwareUpdate>() {
            public FirmwareUpdate parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new FirmwareUpdate(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new FirmwareUpdate();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int fileSize_;
        private volatile Object url_;
        private boolean forceFirmware_;
        private volatile Object hubVersion_;
        private volatile Object wearableVersion_;
        private volatile Object extraVersion_;
        private volatile Object bootVersion_;
        private byte memoizedIsInitialized = -1;

        // Use FirmwareUpdate.newBuilder() to construct.
        private FirmwareUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
    private FirmwareUpdate() {
      fileSize_ = 0;
      url_ = "";
      forceFirmware_ = false;
      hubVersion_ = "";
        wearableVersion_ = "";
        extraVersion_ = "";
      bootVersion_ = "";
    }
    private FirmwareUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
              case 10: {
                  com.google.protobuf.Timestamp.Builder subBuilder = null;
                  if (timestamp_ != null) {
                      subBuilder = timestamp_.toBuilder();
                  }
                  timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                  if (subBuilder != null) {
                      subBuilder.mergeFrom(timestamp_);
                      timestamp_ = subBuilder.buildPartial();
                  }

                  break;
              }
              case 16: {

                  fileSize_ = input.readUInt32();
                  break;
              }
              case 26: {
                  String s = input.readStringRequireUtf8();

              url_ = s;
              break;
              }
              case 32: {

              forceFirmware_ = input.readBool();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              hubVersion_ = s;
              break;
            }
            case 50: {
                String s = input.readStringRequireUtf8();

                wearableVersion_ = s;
                break;
            }
            case 58: {
                String s = input.readStringRequireUtf8();

              extraVersion_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              bootVersion_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
          makeExtensionsImmutable();
      }
    }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Hub.internal_static_FirmwareUpdate_descriptor;
        }

        public static FirmwareUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static FirmwareUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static FirmwareUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static FirmwareUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

        public static FirmwareUpdate parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static FirmwareUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FirmwareUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FirmwareUpdate parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static FirmwareUpdate parseFrom(
            com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static FirmwareUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

        public static Builder newBuilder(FirmwareUpdate prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static FirmwareUpdate getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<FirmwareUpdate> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_FirmwareUpdate_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            FirmwareUpdate.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
     * Timestamp
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    /**
     * <pre>
     * Timestamp
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return getTimestamp();
    }

    /**
     * <pre>
     * File Size              // Value: X; 0 &lt; X bytes &lt; free space
     * </pre>
     *
     * <code>optional uint32 file_size = 2;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }

    /**
     * <pre>
     * File Location          // Value: HTTPS URL
     * </pre>
     *
     * <code>optional string url = 3;</code>
     */
    public String getUrl() {
      Object ref = url_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          url_ = s;
          return s;
      }
    }

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
     * </pre>
     *
     * <code>optional string url = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      Object ref = url_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * Force Firmware Update  // Value: True / False
     * </pre>
     *
     * <code>optional bool force_firmware = 4;</code>
     */
    public boolean getForceFirmware() {
      return forceFirmware_;
    }

    /**
     * <pre>
     * Hub Firmware Version
     * </pre>
     *
     * <code>optional string hub_version = 5;</code>
     */
    public String getHubVersion() {
      Object ref = hubVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
          hubVersion_ = s;
          return s;
      }
    }

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         *
         * <code>optional string hub_version = 5;</code>
     */
    public com.google.protobuf.ByteString
    getHubVersionBytes() {
        Object ref = hubVersion_;
      if (ref instanceof String) {
          com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
        hubVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * Wearable Firmware Version
     * </pre>
     *
     * <code>optional string wearable_version = 6;</code>
     */
    public String getWearableVersion() {
      Object ref = wearableVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        wearableVersion_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * Wearable Firmware Version
     * </pre>
     *
     * <code>optional string wearable_version = 6;</code>
     */
    public com.google.protobuf.ByteString
        getWearableVersionBytes() {
      Object ref = wearableVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        wearableVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * Extra Version
     * </pre>
     *
     * <code>optional string extra_version = 7;</code>
     */
    public String getExtraVersion() {
      Object ref = extraVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extraVersion_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * Extra Version
     * </pre>
     *
     * <code>optional string extra_version = 7;</code>
     */
    public com.google.protobuf.ByteString
        getExtraVersionBytes() {
        Object ref = extraVersion_;
        if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extraVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * Bootloader Version
     * </pre>
     *
     * <code>optional string boot_version = 8;</code>
     */
    public String getBootVersion() {
        Object ref = bootVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          bootVersion_ = s;
          return s;
      }
    }

    /**
     * <pre>
     * Bootloader Version
     * </pre>
     *
     * <code>optional string boot_version = 8;</code>
     */
    public com.google.protobuf.ByteString
        getBootVersionBytes() {
      Object ref = bootVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        bootVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (timestamp_ != null) {
            output.writeMessage(1, getTimestamp());
        }
        if (fileSize_ != 0) {
            output.writeUInt32(2, fileSize_);
        }
        if (!getUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, url_);
        }
        if (forceFirmware_ != false) {
            output.writeBool(4, forceFirmware_);
        }
        if (!getHubVersionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hubVersion_);
        }
        if (!getWearableVersionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, wearableVersion_);
        }
        if (!getExtraVersionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, extraVersion_);
        }
        if (!getBootVersionBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 8, bootVersion_);
        }
    }

    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

      size = 0;
      if (timestamp_ != null) {
          size += com.google.protobuf.CodedOutputStream
                  .computeMessageSize(1, getTimestamp());
      }
        if (fileSize_ != 0) {
            size += com.google.protobuf.CodedOutputStream
                    .computeUInt32Size(2, fileSize_);
        }
        if (!getUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, url_);
        }
        if (forceFirmware_ != false) {
            size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, forceFirmware_);
      }
      if (!getHubVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, hubVersion_);
      }
      if (!getWearableVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, wearableVersion_);
      }
      if (!getExtraVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, extraVersion_);
      }
        if (!getBootVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, bootVersion_);
      }
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof FirmwareUpdate)) {
            return super.equals(obj);
        }
        FirmwareUpdate other = (FirmwareUpdate) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
          result = result && getTimestamp()
                  .equals(other.getTimestamp());
      }
        result = result && (getFileSize()
          == other.getFileSize());
      result = result && getUrl()
          .equals(other.getUrl());
      result = result && (getForceFirmware()
          == other.getForceFirmware());
      result = result && getHubVersion()
          .equals(other.getHubVersion());
      result = result && getWearableVersion()
          .equals(other.getWearableVersion());
      result = result && getExtraVersion()
              .equals(other.getExtraVersion());
      result = result && getBootVersion()
          .equals(other.getBootVersion());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (37 * hash) + FILE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getFileSize();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (37 * hash) + FORCE_FIRMWARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getForceFirmware());
      hash = (37 * hash) + HUB_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getHubVersion().hashCode();
      hash = (37 * hash) + WEARABLE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getWearableVersion().hashCode();
      hash = (37 * hash) + EXTRA_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getExtraVersion().hashCode();
        hash = (37 * hash) + BOOT_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getBootVersion().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

        public Builder newBuilderForType() {
            return newBuilder(); }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<FirmwareUpdate> getParserForType() {
      return PARSER;
    }

    public FirmwareUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * Firmware Update (always publish with retained=True)
     *  [device/hub/SN_HUB/firmware]      (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware]         (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/hub]  (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/hub]     (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/band] (always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/band]    (always publish with force_firmware=False)
     *  [device/hub/SN_HUB/firmware/extra](always publish with force_firmware=True -- retain cleared by hub)
     *  [device/hub/SKU/firmware/extra]   (always publish with force_firmware=False)
     *    Firmware updates for hub and band
     * </pre>
     *
     * Protobuf type {@code FirmwareUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FirmwareUpdate)
        FirmwareUpdateOrBuilder {
      private com.google.protobuf.Timestamp timestamp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      private int fileSize_ ;
      private Object url_ = "";
      private boolean forceFirmware_ ;
      private Object hubVersion_ = "";
      private Object wearableVersion_ = "";
      private Object extraVersion_ = "";
      private Object bootVersion_ = "";

      // Construct using Hub.FirmwareUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hub.internal_static_FirmwareUpdate_descriptor;
      }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_FirmwareUpdate_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            FirmwareUpdate.class, Builder.class);
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        public Builder clear() {
            super.clear();
            if (timestampBuilder_ == null) {
                timestamp_ = null;
            } else {
                timestamp_ = null;
                timestampBuilder_ = null;
            }
            fileSize_ = 0;

            url_ = "";

            forceFirmware_ = false;

            hubVersion_ = "";

            wearableVersion_ = "";

        extraVersion_ = "";

        bootVersion_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hub.internal_static_FirmwareUpdate_descriptor;
      }

      public FirmwareUpdate getDefaultInstanceForType() {
        return FirmwareUpdate.getDefaultInstance();
      }

      public FirmwareUpdate build() {
        FirmwareUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FirmwareUpdate buildPartial() {
        FirmwareUpdate result = new FirmwareUpdate(this);
        if (timestampBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        result.fileSize_ = fileSize_;
        result.url_ = url_;
        result.forceFirmware_ = forceFirmware_;
        result.hubVersion_ = hubVersion_;
        result.wearableVersion_ = wearableVersion_;
        result.extraVersion_ = extraVersion_;
        result.bootVersion_ = bootVersion_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FirmwareUpdate) {
          return mergeFrom((FirmwareUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FirmwareUpdate other) {
        if (other == FirmwareUpdate.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (other.getFileSize() != 0) {
          setFileSize(other.getFileSize());
        }
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        if (other.getForceFirmware() != false) {
          setForceFirmware(other.getForceFirmware());
        }
        if (!other.getHubVersion().isEmpty()) {
          hubVersion_ = other.hubVersion_;
          onChanged();
        }
        if (!other.getWearableVersion().isEmpty()) {
          wearableVersion_ = other.wearableVersion_;
          onChanged();
        }
        if (!other.getExtraVersion().isEmpty()) {
          extraVersion_ = other.extraVersion_;
          onChanged();
        }
        if (!other.getBootVersion().isEmpty()) {
          bootVersion_ = other.bootVersion_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
          return true;
      }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            FirmwareUpdate parsedMessage = null;
        try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FirmwareUpdate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
          return timestampBuilder_ != null || timestamp_ != null;
      }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            if (timestampBuilder_ == null) {
                return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            } else {
                return timestampBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder setTimestamp(
                com.google.protobuf.Timestamp.Builder builderForValue) {
            if (timestampBuilder_ == null) {
                timestamp_ = builderForValue.build();
                onChanged();
            } else {
                timestampBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
            timestamp_ = value;
          }
            onChanged();
        } else {
            timestampBuilder_.mergeFrom(value);
        }

          return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
          if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

          onChanged();
          return getTimestampFieldBuilder().getBuilder();
      }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            if (timestampBuilder_ != null) {
                return timestampBuilder_.getMessageOrBuilder();
            } else {
                return timestamp_ == null ?
                        com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            }
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
        getTimestampFieldBuilder() {
            if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
        }

        /**
         * <pre>
         * File Size              // Value: X; 0 &lt; X bytes &lt; free space
       * </pre>
       *
       * <code>optional uint32 file_size = 2;</code>
         */
        public int getFileSize() {
            return fileSize_;
      }

      /**
       * <pre>
       * File Size              // Value: X; 0 &lt; X bytes &lt; free space
       * </pre>
       *
       * <code>optional uint32 file_size = 2;</code>
       */
      public Builder setFileSize(int value) {

        fileSize_ = value;
        onChanged();
          return this;
      }

      /**
       * <pre>
       * File Size              // Value: X; 0 &lt; X bytes &lt; free space
       * </pre>
       *
       * <code>optional uint32 file_size = 2;</code>
       */
      public Builder clearFileSize() {

          fileSize_ = 0;
          onChanged();
          return this;
      }

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
         * </pre>
         * <p>
         * <code>optional string url = 3;</code>
         */
        public String getUrl() {
            Object ref = url_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                url_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
         * </pre>
         * <p>
         * <code>optional string url = 3;</code>
         */
        public Builder setUrl(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            url_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * File Location          // Value: HTTPS URL
         * </pre>
         *
         * <code>optional string url = 3;</code>
         */
        public com.google.protobuf.ByteString
        getUrlBytes() {
            Object ref = url_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                url_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

      /**
       * <pre>
       * File Location          // Value: HTTPS URL
       * </pre>
       *
       * <code>optional string url = 3;</code>
       */
      public Builder setUrlBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        url_ = value;
        onChanged();
          return this;
      }

      /**
       * <pre>
       * File Location          // Value: HTTPS URL
       * </pre>
       *
       * <code>optional string url = 3;</code>
       */
      public Builder clearUrl() {

          url_ = getDefaultInstance().getUrl();
          onChanged();
          return this;
      }

        /**
         * <pre>
         * Force Firmware Update  // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool force_firmware = 4;</code>
         */
        public boolean getForceFirmware() {
            return forceFirmware_;
        }

        /**
         * <pre>
         * Force Firmware Update  // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool force_firmware = 4;</code>
         */
        public Builder setForceFirmware(boolean value) {

            forceFirmware_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Force Firmware Update  // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool force_firmware = 4;</code>
         */
        public Builder clearForceFirmware() {

            forceFirmware_ = false;
            onChanged();
            return this;
      }

      /**
       * <pre>
       * Hub Firmware Version
       * </pre>
       *
       * <code>optional string hub_version = 5;</code>
       */
      public String getHubVersion() {
          Object ref = hubVersion_;
          if (!(ref instanceof String)) {
              com.google.protobuf.ByteString bs =
                      (com.google.protobuf.ByteString) ref;
              String s = bs.toStringUtf8();
              hubVersion_ = s;
              return s;
          } else {
              return (String) ref;
          }
      }

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        public Builder setHubVersion(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            hubVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        public com.google.protobuf.ByteString
        getHubVersionBytes() {
            Object ref = hubVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                hubVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        public Builder setHubVersionBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            hubVersion_ = value;
        onChanged();
            return this;
        }

        /**
         * <pre>
         * Hub Firmware Version
         * </pre>
         * <p>
         * <code>optional string hub_version = 5;</code>
         */
        public Builder clearHubVersion() {

            hubVersion_ = getDefaultInstance().getHubVersion();
            onChanged();
            return this;
        }

        /**
       * <pre>
       * Wearable Firmware Version
       * </pre>
       *
       * <code>optional string wearable_version = 6;</code>
       */
        public String getWearableVersion() {
            Object ref = wearableVersion_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                wearableVersion_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

      /**
       * <pre>
       * Wearable Firmware Version
       * </pre>
       *
       * <code>optional string wearable_version = 6;</code>
       */
      public Builder setWearableVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        wearableVersion_ = value;
        onChanged();
        return this;
      }

        /**
         * <pre>
         * Wearable Firmware Version
         * </pre>
         *
         * <code>optional string wearable_version = 6;</code>
         */
        public com.google.protobuf.ByteString
        getWearableVersionBytes() {
            Object ref = wearableVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                wearableVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Wearable Firmware Version
       * </pre>
       *
       * <code>optional string wearable_version = 6;</code>
       */
      public Builder setWearableVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        wearableVersion_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Wearable Firmware Version
       * </pre>
       *
       * <code>optional string wearable_version = 6;</code>
       */
      public Builder clearWearableVersion() {

          wearableVersion_ = getDefaultInstance().getWearableVersion();
          onChanged();
          return this;
      }

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        public String getExtraVersion() {
            Object ref = extraVersion_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                extraVersion_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        public Builder setExtraVersion(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            extraVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        public com.google.protobuf.ByteString
        getExtraVersionBytes() {
            Object ref = extraVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                extraVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        public Builder setExtraVersionBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            extraVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Extra Version
         * </pre>
         * <p>
         * <code>optional string extra_version = 7;</code>
         */
        public Builder clearExtraVersion() {

            extraVersion_ = getDefaultInstance().getExtraVersion();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        public String getBootVersion() {
            Object ref = bootVersion_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                bootVersion_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        public Builder setBootVersion(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            bootVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        public com.google.protobuf.ByteString
        getBootVersionBytes() {
            Object ref = bootVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                bootVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        public Builder setBootVersionBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            bootVersion_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Bootloader Version
         * </pre>
         * <p>
         * <code>optional string boot_version = 8;</code>
         */
        public Builder clearBootVersion() {

            bootVersion_ = getDefaultInstance().getBootVersion();
            onChanged();
            return this;
        }

        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }

        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }


        // @@protoc_insertion_point(builder_scope:FirmwareUpdate)
    }

    }

    /**
     * <pre>
     * Hub Control [device/hub/SN_HUB/control]
     *    Hub command and control.
     * </pre>
     * <p>
     * Protobuf type {@code HubControl}
     */
    public static final class HubControl extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubControl)
            HubControlOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int LED_MODE_FIELD_NUMBER = 2;
        public static final int LED_COLOR_FIELD_NUMBER = 3;
        public static final int LED_BRIGHTNESS_FIELD_NUMBER = 4;
        public static final int MUSIC_STATE_FIELD_NUMBER = 5;
        public static final int MUSIC_PLAY_COUNT_FIELD_NUMBER = 6;
        public static final int MUSIC_LIST_FIELD_NUMBER = 7;
        public static final int VOLUME_FIELD_NUMBER = 8;
        public static final int LED_TIMER_FIELD_NUMBER = 9;
        public static final int MUSIC_TIMER_FIELD_NUMBER = 10;
        public static final int LED_RGB_COLOR_FIELD_NUMBER = 11;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubControl)
        private static final HubControl DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubControl>
                PARSER = new com.google.protobuf.AbstractParser<HubControl>() {
            public HubControl parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubControl(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubControl();
        }

        private int bitField0_;
        private com.google.protobuf.Timestamp timestamp_;
        private int ledMode_;
        private int ledColor_;
        private int ledBrightness_;
        private int musicState_;
        private int musicPlayCount_;
        private com.google.protobuf.LazyStringList musicList_;
        private int volume_;
        private int ledTimer_;
        private int musicTimer_;
        private java.util.List<Integer> ledRgbColor_;
        private int ledRgbColorMemoizedSerializedSize = -1;
        private byte memoizedIsInitialized = -1;

        // Use HubControl.newBuilder() to construct.
        private HubControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubControl() {
            ledMode_ = 0;
            ledColor_ = 0;
            ledBrightness_ = 0;
            musicState_ = 0;
            musicPlayCount_ = 0;
            musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            volume_ = 0;
            ledTimer_ = 0;
            musicTimer_ = 0;
            ledRgbColor_ = java.util.Collections.emptyList();
        }

        private HubControl(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            ledMode_ = rawValue;
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();

                            ledColor_ = rawValue;
                            break;
                        }
                        case 32: {

                            ledBrightness_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            int rawValue = input.readEnum();

                            musicState_ = rawValue;
                            break;
                        }
                        case 48: {

                            musicPlayCount_ = input.readUInt32();
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                musicList_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            musicList_.add(s);
                            break;
                        }
                        case 64: {

                            volume_ = input.readUInt32();
                            break;
                        }
                        case 72: {

                            ledTimer_ = input.readUInt32();
                            break;
                        }
                        case 80: {

                            musicTimer_ = input.readUInt32();
                            break;
                        }
                        case 88: {
                            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                                ledRgbColor_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            ledRgbColor_.add(input.readUInt32());
                            break;
                        }
                        case 90: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                                ledRgbColor_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                ledRgbColor_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = musicList_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    ledRgbColor_ = java.util.Collections.unmodifiableList(ledRgbColor_);
                }
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubControl_descriptor;
        }

        public static HubControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubControl> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubControl_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubControl.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * LED Mode         // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        public int getLedModeValue() {
            return ledMode_;
        }

        /**
         * <pre>
         * LED Mode         // See LEDModes enum
         * </pre>
         * <p>
         * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
         */
        public LEDMode.LEDModes getLedMode() {
            LEDMode.LEDModes result = LEDMode.LEDModes.valueOf(ledMode_);
            return result == null ? LEDMode.LEDModes.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * LED Color        // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        public int getLedColorValue() {
            return ledColor_;
        }

        /**
         * <pre>
         * LED Color        // See LEDColors enum
         * </pre>
         * <p>
         * <code>optional .LEDColor.LEDColors led_color = 3;</code>
         */
        public LEDColor.LEDColors getLedColor() {
            LEDColor.LEDColors result = LEDColor.LEDColors.valueOf(ledColor_);
            return result == null ? LEDColor.LEDColors.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * LED Brightness   // Range: [1, 65,535], 0=ambient_light aware mode
         * </pre>
         * <p>
         * <code>optional uint32 led_brightness = 4;</code>
         */
        public int getLedBrightness() {
            return ledBrightness_;
        }

        /**
         * <pre>
         * Music State      // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        public int getMusicStateValue() {
            return musicState_;
        }

        /**
         * <pre>
         * Music State      // See MusicStates enum
         * </pre>
         * <p>
         * <code>optional .MusicState.MusicStates music_state = 5;</code>
         */
        public MusicState.MusicStates getMusicState() {
            MusicState.MusicStates result = MusicState.MusicStates.valueOf(musicState_);
            return result == null ? MusicState.MusicStates.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * Music Play Count // Range: [1, 4,294,967,295], 0=infinite
         * </pre>
         * <p>
         * <code>optional uint32 music_play_count = 6;</code>
         */
        public int getMusicPlayCount() {
            return musicPlayCount_;
        }

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getMusicListList() {
            return musicList_;
        }

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        public int getMusicListCount() {
            return musicList_.size();
        }

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        public String getMusicList(int index) {
            return musicList_.get(index);
        }

        /**
         * <pre>
         * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
         * </pre>
         * <p>
         * <code>repeated string music_list = 7;</code>
         */
        public com.google.protobuf.ByteString
        getMusicListBytes(int index) {
            return musicList_.getByteString(index);
        }

        /**
         * <pre>
         * Volume           // Range: [0, 100] %
         * </pre>
         * <p>
         * <code>optional uint32 volume = 8;</code>
         */
        public int getVolume() {
            return volume_;
        }

        /**
         * <pre>
         * LED Timer        // Value: seconds &gt;= 1
         * </pre>
         * <p>
         * <code>optional uint32 led_timer = 9;</code>
         */
        public int getLedTimer() {
            return ledTimer_;
        }

        /**
         * <pre>
         * Music Timer      // Value: seconds &gt;= 1
         * </pre>
         * <p>
         * <code>optional uint32 music_timer = 10;</code>
         */
        public int getMusicTimer() {
            return musicTimer_;
        }

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        public java.util.List<Integer>
        getLedRgbColorList() {
            return ledRgbColor_;
        }

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        public int getLedRgbColorCount() {
            return ledRgbColor_.size();
        }

        /**
         * <pre>
         * LED RGB color    // Value: triplet array, Range: [0, 255]
         * </pre>
         * <p>
         * <code>repeated uint32 led_rgb_color = 11;</code>
         */
        public int getLedRgbColor(int index) {
            return ledRgbColor_.get(index);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (ledMode_ != LEDMode.LEDModes.UNKNOWN.getNumber()) {
                output.writeEnum(2, ledMode_);
            }
            if (ledColor_ != LEDColor.LEDColors.UNKNOWN.getNumber()) {
                output.writeEnum(3, ledColor_);
            }
            if (ledBrightness_ != 0) {
                output.writeUInt32(4, ledBrightness_);
            }
            if (musicState_ != MusicState.MusicStates.UNKNOWN.getNumber()) {
                output.writeEnum(5, musicState_);
            }
            if (musicPlayCount_ != 0) {
                output.writeUInt32(6, musicPlayCount_);
            }
            for (int i = 0; i < musicList_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, musicList_.getRaw(i));
            }
            if (volume_ != 0) {
                output.writeUInt32(8, volume_);
            }
            if (ledTimer_ != 0) {
                output.writeUInt32(9, ledTimer_);
            }
            if (musicTimer_ != 0) {
                output.writeUInt32(10, musicTimer_);
            }
            if (getLedRgbColorList().size() > 0) {
                output.writeUInt32NoTag(90);
                output.writeUInt32NoTag(ledRgbColorMemoizedSerializedSize);
            }
            for (int i = 0; i < ledRgbColor_.size(); i++) {
                output.writeUInt32NoTag(ledRgbColor_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (ledMode_ != LEDMode.LEDModes.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, ledMode_);
            }
            if (ledColor_ != LEDColor.LEDColors.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, ledColor_);
            }
            if (ledBrightness_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, ledBrightness_);
            }
            if (musicState_ != MusicState.MusicStates.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(5, musicState_);
            }
            if (musicPlayCount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, musicPlayCount_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < musicList_.size(); i++) {
                    dataSize += computeStringSizeNoTag(musicList_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getMusicListList().size();
            }
            if (volume_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(8, volume_);
            }
            if (ledTimer_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(9, ledTimer_);
            }
            if (musicTimer_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(10, musicTimer_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < ledRgbColor_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(ledRgbColor_.get(i));
                }
                size += dataSize;
                if (!getLedRgbColorList().isEmpty()) {
                    size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(dataSize);
                }
                ledRgbColorMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubControl)) {
                return super.equals(obj);
            }
            HubControl other = (HubControl) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && ledMode_ == other.ledMode_;
            result = result && ledColor_ == other.ledColor_;
            result = result && (getLedBrightness()
                    == other.getLedBrightness());
            result = result && musicState_ == other.musicState_;
            result = result && (getMusicPlayCount()
                    == other.getMusicPlayCount());
            result = result && getMusicListList()
                    .equals(other.getMusicListList());
            result = result && (getVolume()
                    == other.getVolume());
            result = result && (getLedTimer()
                    == other.getLedTimer());
            result = result && (getMusicTimer()
                    == other.getMusicTimer());
            result = result && getLedRgbColorList()
                    .equals(other.getLedRgbColorList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + LED_MODE_FIELD_NUMBER;
            hash = (53 * hash) + ledMode_;
            hash = (37 * hash) + LED_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + ledColor_;
            hash = (37 * hash) + LED_BRIGHTNESS_FIELD_NUMBER;
            hash = (53 * hash) + getLedBrightness();
            hash = (37 * hash) + MUSIC_STATE_FIELD_NUMBER;
            hash = (53 * hash) + musicState_;
            hash = (37 * hash) + MUSIC_PLAY_COUNT_FIELD_NUMBER;
            hash = (53 * hash) + getMusicPlayCount();
            if (getMusicListCount() > 0) {
                hash = (37 * hash) + MUSIC_LIST_FIELD_NUMBER;
                hash = (53 * hash) + getMusicListList().hashCode();
            }
            hash = (37 * hash) + VOLUME_FIELD_NUMBER;
            hash = (53 * hash) + getVolume();
            hash = (37 * hash) + LED_TIMER_FIELD_NUMBER;
            hash = (53 * hash) + getLedTimer();
            hash = (37 * hash) + MUSIC_TIMER_FIELD_NUMBER;
            hash = (53 * hash) + getMusicTimer();
            if (getLedRgbColorCount() > 0) {
                hash = (37 * hash) + LED_RGB_COLOR_FIELD_NUMBER;
                hash = (53 * hash) + getLedRgbColorList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubControl> getParserForType() {
            return PARSER;
        }

        public HubControl getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub Control [device/hub/SN_HUB/control]
         *    Hub command and control.
         * </pre>
         * <p>
         * Protobuf type {@code HubControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubControl)
                HubControlOrBuilder {
            private int bitField0_;
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int ledMode_ = 0;
            private int ledColor_ = 0;
            private int ledBrightness_;
            private int musicState_ = 0;
            private int musicPlayCount_;
            private com.google.protobuf.LazyStringList musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            private int volume_;
            private int ledTimer_;
            private int musicTimer_;
            private java.util.List<Integer> ledRgbColor_ = java.util.Collections.emptyList();

            // Construct using Hub.HubControl.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubControl_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubControl_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubControl.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                ledMode_ = 0;

                ledColor_ = 0;

                ledBrightness_ = 0;

                musicState_ = 0;

                musicPlayCount_ = 0;

                musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                volume_ = 0;

                ledTimer_ = 0;

                musicTimer_ = 0;

                ledRgbColor_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000400);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubControl_descriptor;
            }

            public HubControl getDefaultInstanceForType() {
                return HubControl.getDefaultInstance();
            }

            public HubControl build() {
                HubControl result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubControl buildPartial() {
                HubControl result = new HubControl(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.ledMode_ = ledMode_;
                result.ledColor_ = ledColor_;
                result.ledBrightness_ = ledBrightness_;
                result.musicState_ = musicState_;
                result.musicPlayCount_ = musicPlayCount_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = musicList_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.musicList_ = musicList_;
                result.volume_ = volume_;
                result.ledTimer_ = ledTimer_;
                result.musicTimer_ = musicTimer_;
                if (((bitField0_ & 0x00000400) == 0x00000400)) {
                    ledRgbColor_ = java.util.Collections.unmodifiableList(ledRgbColor_);
                    bitField0_ = (bitField0_ & ~0x00000400);
                }
                result.ledRgbColor_ = ledRgbColor_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubControl) {
                    return mergeFrom((HubControl) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubControl other) {
                if (other == HubControl.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.ledMode_ != 0) {
                    setLedModeValue(other.getLedModeValue());
                }
                if (other.ledColor_ != 0) {
                    setLedColorValue(other.getLedColorValue());
                }
                if (other.getLedBrightness() != 0) {
                    setLedBrightness(other.getLedBrightness());
                }
                if (other.musicState_ != 0) {
                    setMusicStateValue(other.getMusicStateValue());
                }
                if (other.getMusicPlayCount() != 0) {
                    setMusicPlayCount(other.getMusicPlayCount());
                }
                if (!other.musicList_.isEmpty()) {
                    if (musicList_.isEmpty()) {
                        musicList_ = other.musicList_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureMusicListIsMutable();
                        musicList_.addAll(other.musicList_);
                    }
                    onChanged();
                }
                if (other.getVolume() != 0) {
                    setVolume(other.getVolume());
                }
                if (other.getLedTimer() != 0) {
                    setLedTimer(other.getLedTimer());
                }
                if (other.getMusicTimer() != 0) {
                    setMusicTimer(other.getMusicTimer());
                }
                if (!other.ledRgbColor_.isEmpty()) {
                    if (ledRgbColor_.isEmpty()) {
                        ledRgbColor_ = other.ledRgbColor_;
                        bitField0_ = (bitField0_ & ~0x00000400);
                    } else {
                        ensureLedRgbColorIsMutable();
                        ledRgbColor_.addAll(other.ledRgbColor_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubControl parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubControl) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * LED Mode         // See LEDModes enum
             * </pre>
             * <p>
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public int getLedModeValue() {
                return ledMode_;
            }

            /**
             * <pre>
             * LED Mode         // See LEDModes enum
             * </pre>
             * <p>
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder setLedModeValue(int value) {
                ledMode_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Mode         // See LEDModes enum
             * </pre>
             * <p>
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public LEDMode.LEDModes getLedMode() {
                LEDMode.LEDModes result = LEDMode.LEDModes.valueOf(ledMode_);
                return result == null ? LEDMode.LEDModes.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * LED Mode         // See LEDModes enum
             * </pre>
             * <p>
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder setLedMode(LEDMode.LEDModes value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                ledMode_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Mode         // See LEDModes enum
             * </pre>
             * <p>
             * <code>optional .LEDMode.LEDModes led_mode = 2;</code>
             */
            public Builder clearLedMode() {

                ledMode_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color        // See LEDColors enum
             * </pre>
             * <p>
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public int getLedColorValue() {
                return ledColor_;
            }

            /**
             * <pre>
             * LED Color        // See LEDColors enum
             * </pre>
             * <p>
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder setLedColorValue(int value) {
                ledColor_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color        // See LEDColors enum
             * </pre>
             * <p>
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public LEDColor.LEDColors getLedColor() {
                LEDColor.LEDColors result = LEDColor.LEDColors.valueOf(ledColor_);
                return result == null ? LEDColor.LEDColors.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * LED Color        // See LEDColors enum
             * </pre>
             * <p>
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder setLedColor(LEDColor.LEDColors value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                ledColor_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Color        // See LEDColors enum
             * </pre>
             * <p>
             * <code>optional .LEDColor.LEDColors led_color = 3;</code>
             */
            public Builder clearLedColor() {

                ledColor_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Brightness   // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             * <p>
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public int getLedBrightness() {
                return ledBrightness_;
            }

            /**
             * <pre>
             * LED Brightness   // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             * <p>
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public Builder setLedBrightness(int value) {

                ledBrightness_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Brightness   // Range: [1, 65,535], 0=ambient_light aware mode
             * </pre>
             * <p>
             * <code>optional uint32 led_brightness = 4;</code>
             */
            public Builder clearLedBrightness() {

                ledBrightness_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State      // See MusicStates enum
             * </pre>
             * <p>
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public int getMusicStateValue() {
                return musicState_;
            }

            /**
             * <pre>
             * Music State      // See MusicStates enum
             * </pre>
             * <p>
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder setMusicStateValue(int value) {
                musicState_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State      // See MusicStates enum
             * </pre>
             * <p>
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public MusicState.MusicStates getMusicState() {
                MusicState.MusicStates result = MusicState.MusicStates.valueOf(musicState_);
                return result == null ? MusicState.MusicStates.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Music State      // See MusicStates enum
             * </pre>
             * <p>
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder setMusicState(MusicState.MusicStates value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                musicState_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music State      // See MusicStates enum
             * </pre>
             * <p>
             * <code>optional .MusicState.MusicStates music_state = 5;</code>
             */
            public Builder clearMusicState() {

                musicState_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Play Count // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             * <p>
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public int getMusicPlayCount() {
                return musicPlayCount_;
            }

            /**
             * <pre>
             * Music Play Count // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             * <p>
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public Builder setMusicPlayCount(int value) {

                musicPlayCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Play Count // Range: [1, 4,294,967,295], 0=infinite
             * </pre>
             * <p>
             * <code>optional uint32 music_play_count = 6;</code>
             */
            public Builder clearMusicPlayCount() {

                musicPlayCount_ = 0;
                onChanged();
                return this;
            }

            private void ensureMusicListIsMutable() {
                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    musicList_ = new com.google.protobuf.LazyStringArrayList(musicList_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             * <p>
             * <code>repeated string music_list = 7;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getMusicListList() {
                return musicList_.getUnmodifiableView();
            }

            /**
             * <pre>
             * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             * <p>
             * <code>repeated string music_list = 7;</code>
             */
            public int getMusicListCount() {
                return musicList_.size();
            }

            /**
             * <pre>
             * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             * <p>
             * <code>repeated string music_list = 7;</code>
             */
            public String getMusicList(int index) {
                return musicList_.get(index);
            }

            /**
             * <pre>
             * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             * <p>
             * <code>repeated string music_list = 7;</code>
             */
            public com.google.protobuf.ByteString
            getMusicListBytes(int index) {
                return musicList_.getByteString(index);
            }

            /**
             * <pre>
             * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
             * </pre>
             * <p>
             * <code>repeated string music_list = 7;</code>
             */
            public Builder setMusicList(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMusicListIsMutable();
        musicList_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
       * </pre>
       *
       * <code>repeated string music_list = 7;</code>
       */
      public Builder addMusicList(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMusicListIsMutable();
        musicList_.add(value);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
       * </pre>
       *
       * <code>repeated string music_list = 7;</code>
       */
      public Builder addAllMusicList(
          Iterable<String> values) {
        ensureMusicListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, musicList_);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
       * </pre>
       *
       * <code>repeated string music_list = 7;</code>
       */
      public Builder clearMusicList() {
        musicList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Music List       // Value: string array, see 'https://github.com/Sproutling/hub/wiki/Stock-Music-List'
       * </pre>
       *
       * <code>repeated string music_list = 7;</code>
       */
      public Builder addMusicListBytes(
              com.google.protobuf.ByteString value) {
          if (value == null) {
              throw new NullPointerException();
          }
          checkByteStringIsUtf8(value);
          ensureMusicListIsMutable();
          musicList_.add(value);
          onChanged();
          return this;
      }

            /**
             * <pre>
             * Volume           // Range: [0, 100] %
             * </pre>
             * <p>
             * <code>optional uint32 volume = 8;</code>
             */
            public int getVolume() {
                return volume_;
            }

            /**
             * <pre>
             * Volume           // Range: [0, 100] %
             * </pre>
             * <p>
             * <code>optional uint32 volume = 8;</code>
             */
            public Builder setVolume(int value) {

                volume_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Volume           // Range: [0, 100] %
             * </pre>
             * <p>
             * <code>optional uint32 volume = 8;</code>
             */
            public Builder clearVolume() {

                volume_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Timer        // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 led_timer = 9;</code>
             */
            public int getLedTimer() {
                return ledTimer_;
            }

            /**
             * <pre>
             * LED Timer        // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 led_timer = 9;</code>
             */
            public Builder setLedTimer(int value) {

                ledTimer_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LED Timer        // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 led_timer = 9;</code>
             */
            public Builder clearLedTimer() {

                ledTimer_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Timer      // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 music_timer = 10;</code>
             */
            public int getMusicTimer() {
                return musicTimer_;
            }

            /**
             * <pre>
             * Music Timer      // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 music_timer = 10;</code>
             */
            public Builder setMusicTimer(int value) {

                musicTimer_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Music Timer      // Value: seconds &gt;= 1
             * </pre>
             * <p>
             * <code>optional uint32 music_timer = 10;</code>
             */
            public Builder clearMusicTimer() {

                musicTimer_ = 0;
                onChanged();
                return this;
            }

            private void ensureLedRgbColorIsMutable() {
                if (!((bitField0_ & 0x00000400) == 0x00000400)) {
                    ledRgbColor_ = new java.util.ArrayList<Integer>(ledRgbColor_);
                    bitField0_ |= 0x00000400;
                }
            }

            /**
             * <pre>
             * LED RGB color    // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 11;</code>
             */
      public java.util.List<Integer>
          getLedRgbColorList() {
        return java.util.Collections.unmodifiableList(ledRgbColor_);
      }
      /**
       * <pre>
       * LED RGB color    // Value: triplet array, Range: [0, 255]
       * </pre>
       *
       * <code>repeated uint32 led_rgb_color = 11;</code>
       */
      public int getLedRgbColorCount() {
        return ledRgbColor_.size();
      }
      /**
       * <pre>
       * LED RGB color    // Value: triplet array, Range: [0, 255]
       * </pre>
       *
       * <code>repeated uint32 led_rgb_color = 11;</code>
       */
      public int getLedRgbColor(int index) {
        return ledRgbColor_.get(index);
      }
      /**
       * <pre>
       * LED RGB color    // Value: triplet array, Range: [0, 255]
       * </pre>
       *
       * <code>repeated uint32 led_rgb_color = 11;</code>
       */
      public Builder setLedRgbColor(
          int index, int value) {
        ensureLedRgbColorIsMutable();
        ledRgbColor_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LED RGB color    // Value: triplet array, Range: [0, 255]
       * </pre>
       *
       * <code>repeated uint32 led_rgb_color = 11;</code>
       */
      public Builder addLedRgbColor(int value) {
        ensureLedRgbColorIsMutable();
        ledRgbColor_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * LED RGB color    // Value: triplet array, Range: [0, 255]
       * </pre>
       *
       * <code>repeated uint32 led_rgb_color = 11;</code>
       */
      public Builder addAllLedRgbColor(
              Iterable<? extends Integer> values) {
          ensureLedRgbColorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, ledRgbColor_);
          onChanged();
          return this;
      }

            /**
             * <pre>
             * LED RGB color    // Value: triplet array, Range: [0, 255]
             * </pre>
             *
             * <code>repeated uint32 led_rgb_color = 11;</code>
             */
            public Builder clearLedRgbColor() {
                ledRgbColor_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000400);
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HubControl)
    }

  }

    /**
     * <pre>
     * Hub Logging [device/hub/SN_HUB/control/logging]
     *    Hub logging control.
     * </pre>
     *
     * Protobuf type {@code HubLogging}
     */
    public  static final class HubLogging extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubLogging)
            HubLoggingOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int LOG_LEVEL_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubLogging)
        private static final HubLogging DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubLogging>
                PARSER = new com.google.protobuf.AbstractParser<HubLogging>() {
            public HubLogging parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubLogging(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubLogging();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int logLevel_;
        private byte memoizedIsInitialized = -1;

        // Use HubLogging.newBuilder() to construct.
        private HubLogging(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubLogging() {
            logLevel_ = 0;
        }

        private HubLogging(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            logLevel_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubLogging_descriptor;
        }

        public static HubLogging parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubLogging parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubLogging parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubLogging parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubLogging parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubLogging parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubLogging parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubLogging parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubLogging parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubLogging parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubLogging prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubLogging getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubLogging> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubLogging_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubLogging.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Log Level, see 'https://docs.python.org/3.5/library/logging.html#logging-levels'
         * </pre>
         * <p>
         * <code>optional uint32 log_level = 2;</code>
         */
        public int getLogLevel() {
            return logLevel_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (logLevel_ != 0) {
                output.writeUInt32(2, logLevel_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (logLevel_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, logLevel_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubLogging)) {
                return super.equals(obj);
            }
            HubLogging other = (HubLogging) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getLogLevel()
                    == other.getLogLevel());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + LOG_LEVEL_FIELD_NUMBER;
            hash = (53 * hash) + getLogLevel();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubLogging> getParserForType() {
            return PARSER;
        }

        public HubLogging getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub Logging [device/hub/SN_HUB/control/logging]
         *    Hub logging control.
         * </pre>
         *
         * Protobuf type {@code HubLogging}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubLogging)
                HubLoggingOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int logLevel_ ;

            // Construct using Hub.HubLogging.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubLogging_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubLogging_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubLogging.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                logLevel_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubLogging_descriptor;
            }

            public HubLogging getDefaultInstanceForType() {
                return HubLogging.getDefaultInstance();
            }

            public HubLogging build() {
                HubLogging result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubLogging buildPartial() {
                HubLogging result = new HubLogging(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.logLevel_ = logLevel_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubLogging) {
                    return mergeFrom((HubLogging)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubLogging other) {
                if (other == HubLogging.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getLogLevel() != 0) {
                    setLogLevel(other.getLogLevel());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubLogging parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubLogging) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Log Level, see 'https://docs.python.org/3.5/library/logging.html#logging-levels'
             * </pre>
             *
             * <code>optional uint32 log_level = 2;</code>
             */
            public int getLogLevel() {
                return logLevel_;
            }

            /**
             * <pre>
             * Log Level, see 'https://docs.python.org/3.5/library/logging.html#logging-levels'
             * </pre>
             *
             * <code>optional uint32 log_level = 2;</code>
             */
            public Builder setLogLevel(int value) {

                logLevel_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Log Level, see 'https://docs.python.org/3.5/library/logging.html#logging-levels'
             * </pre>
             *
             * <code>optional uint32 log_level = 2;</code>
             */
            public Builder clearLogLevel() {

                logLevel_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubLogging)
        }

    }

    /**
     * <pre>
     * Hub CLI [device/hub/SN_HUB/cli]
     * </pre>
     *
     * Protobuf type {@code HubCLI}
     */
    public  static final class HubCLI extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubCLI)
            HubCLIOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int CLI_COMMAND_FIELD_NUMBER = 2;
        public static final int CLI_SIGNATURE_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubCLI)
        private static final HubCLI DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubCLI>
                PARSER = new com.google.protobuf.AbstractParser<HubCLI>() {
            public HubCLI parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubCLI(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubCLI();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private volatile Object cliCommand_;
        private com.google.protobuf.ByteString cliSignature_;
        private byte memoizedIsInitialized = -1;

        // Use HubCLI.newBuilder() to construct.
        private HubCLI(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubCLI() {
            cliCommand_ = "";
            cliSignature_ = com.google.protobuf.ByteString.EMPTY;
        }

        private HubCLI(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            cliCommand_ = s;
                            break;
                        }
                        case 26: {

                            cliSignature_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubCLI_descriptor;
        }

        public static HubCLI parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubCLI parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubCLI parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubCLI parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubCLI parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubCLI parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubCLI parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubCLI parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubCLI parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubCLI parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubCLI prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubCLI getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubCLI> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubCLI_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubCLI.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * CLI Command      // Ash shell command-line string
         * </pre>
         *
         * <code>optional string cli_command = 2;</code>
         */
        public String getCliCommand() {
            Object ref = cliCommand_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                cliCommand_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * CLI Command      // Ash shell command-line string
         * </pre>
         *
         * <code>optional string cli_command = 2;</code>
         */
        public com.google.protobuf.ByteString
        getCliCommandBytes() {
            Object ref = cliCommand_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                cliCommand_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * CLI Signature    // Generated signature key
         * </pre>
         *
         * <code>optional bytes cli_signature = 3;</code>
         */
        public com.google.protobuf.ByteString getCliSignature() {
            return cliSignature_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (!getCliCommandBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cliCommand_);
            }
            if (!cliSignature_.isEmpty()) {
                output.writeBytes(3, cliSignature_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (!getCliCommandBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cliCommand_);
            }
            if (!cliSignature_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, cliSignature_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubCLI)) {
                return super.equals(obj);
            }
            HubCLI other = (HubCLI) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && getCliCommand()
                    .equals(other.getCliCommand());
            result = result && getCliSignature()
                    .equals(other.getCliSignature());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + CLI_COMMAND_FIELD_NUMBER;
            hash = (53 * hash) + getCliCommand().hashCode();
            hash = (37 * hash) + CLI_SIGNATURE_FIELD_NUMBER;
            hash = (53 * hash) + getCliSignature().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubCLI> getParserForType() {
            return PARSER;
        }

        public HubCLI getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub CLI [device/hub/SN_HUB/cli]
         * </pre>
         *
         * Protobuf type {@code HubCLI}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubCLI)
                HubCLIOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private Object cliCommand_ = "";
            private com.google.protobuf.ByteString cliSignature_ = com.google.protobuf.ByteString.EMPTY;

            // Construct using Hub.HubCLI.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubCLI_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubCLI_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubCLI.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                cliCommand_ = "";

                cliSignature_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubCLI_descriptor;
            }

            public HubCLI getDefaultInstanceForType() {
                return HubCLI.getDefaultInstance();
            }

            public HubCLI build() {
                HubCLI result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubCLI buildPartial() {
                HubCLI result = new HubCLI(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.cliCommand_ = cliCommand_;
                result.cliSignature_ = cliSignature_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubCLI) {
                    return mergeFrom((HubCLI)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubCLI other) {
                if (other == HubCLI.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (!other.getCliCommand().isEmpty()) {
                    cliCommand_ = other.cliCommand_;
                    onChanged();
                }
                if (other.getCliSignature() != com.google.protobuf.ByteString.EMPTY) {
                    setCliSignature(other.getCliSignature());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubCLI parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubCLI) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * CLI Command      // Ash shell command-line string
             * </pre>
             * <p>
             * <code>optional string cli_command = 2;</code>
             */
            public String getCliCommand() {
                Object ref = cliCommand_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    cliCommand_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * CLI Command      // Ash shell command-line string
             * </pre>
             * <p>
             * <code>optional string cli_command = 2;</code>
             */
            public Builder setCliCommand(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                cliCommand_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI Command      // Ash shell command-line string
             * </pre>
             * <p>
             * <code>optional string cli_command = 2;</code>
             */
            public com.google.protobuf.ByteString
            getCliCommandBytes() {
                Object ref = cliCommand_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    cliCommand_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * CLI Command      // Ash shell command-line string
             * </pre>
             *
             * <code>optional string cli_command = 2;</code>
             */
            public Builder setCliCommandBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                cliCommand_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI Command      // Ash shell command-line string
             * </pre>
             *
             * <code>optional string cli_command = 2;</code>
             */
            public Builder clearCliCommand() {

                cliCommand_ = getDefaultInstance().getCliCommand();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI Signature    // Generated signature key
             * </pre>
             *
             * <code>optional bytes cli_signature = 3;</code>
             */
            public com.google.protobuf.ByteString getCliSignature() {
                return cliSignature_;
            }

            /**
             * <pre>
             * CLI Signature    // Generated signature key
             * </pre>
             *
             * <code>optional bytes cli_signature = 3;</code>
             */
            public Builder setCliSignature(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                cliSignature_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI Signature    // Generated signature key
             * </pre>
             *
             * <code>optional bytes cli_signature = 3;</code>
             */
            public Builder clearCliSignature() {

                cliSignature_ = getDefaultInstance().getCliSignature();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubCLI)
        }

    }

    /**
     * <pre>
     * Hub CLI Response [device/hub/SN_HUB/cli/response]
     * </pre>
     *
     * Protobuf type {@code HubCLIResponse}
     */
    public static final class HubCLIResponse extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubCLIResponse)
            HubCLIResponseOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int CLI_RETURN_CODE_FIELD_NUMBER = 2;
        public static final int CLI_STDOUT_FIELD_NUMBER = 3;
        public static final int CLI_STDERR_FIELD_NUMBER = 4;
        public static final int CLI_RUN_TIME_FIELD_NUMBER = 5;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubCLIResponse)
        private static final HubCLIResponse DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubCLIResponse>
                PARSER = new com.google.protobuf.AbstractParser<HubCLIResponse>() {
            public HubCLIResponse parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubCLIResponse(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubCLIResponse();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int cliReturnCode_;
        private volatile Object cliStdout_;
        private volatile Object cliStderr_;
        private float cliRunTime_;
        private byte memoizedIsInitialized = -1;

        // Use HubCLIResponse.newBuilder() to construct.
        private HubCLIResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubCLIResponse() {
            cliReturnCode_ = 0;
            cliStdout_ = "";
            cliStderr_ = "";
            cliRunTime_ = 0F;
        }

        private HubCLIResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            cliReturnCode_ = input.readUInt32();
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            cliStdout_ = s;
                            break;
                        }
                        case 34: {
                            String s = input.readStringRequireUtf8();

                            cliStderr_ = s;
                            break;
                        }
                        case 45: {

                            cliRunTime_ = input.readFloat();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubCLIResponse_descriptor;
        }

        public static HubCLIResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubCLIResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubCLIResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubCLIResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubCLIResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubCLIResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubCLIResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubCLIResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubCLIResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubCLIResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubCLIResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubCLIResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubCLIResponse> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubCLIResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubCLIResponse.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * CLI RETURN CODE
         * </pre>
         *
         * <code>optional uint32 cli_return_code = 2;</code>
         */
        public int getCliReturnCode() {
            return cliReturnCode_;
        }

        /**
         * <pre>
         * CLI STDOUT
         * </pre>
         *
         * <code>optional string cli_stdout = 3;</code>
         */
        public String getCliStdout() {
            Object ref = cliStdout_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                cliStdout_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * CLI STDOUT
         * </pre>
         *
         * <code>optional string cli_stdout = 3;</code>
         */
        public com.google.protobuf.ByteString
        getCliStdoutBytes() {
            Object ref = cliStdout_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                cliStdout_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * CLI STDERR
         * </pre>
         *
         * <code>optional string cli_stderr = 4;</code>
         */
        public String getCliStderr() {
            Object ref = cliStderr_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                cliStderr_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * CLI STDERR
         * </pre>
         *
         * <code>optional string cli_stderr = 4;</code>
         */
        public com.google.protobuf.ByteString
        getCliStderrBytes() {
            Object ref = cliStderr_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                cliStderr_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * CLI RUN TIME
         * </pre>
         *
         * <code>optional float cli_run_time = 5;</code>
         */
        public float getCliRunTime() {
            return cliRunTime_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (cliReturnCode_ != 0) {
                output.writeUInt32(2, cliReturnCode_);
            }
            if (!getCliStdoutBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, cliStdout_);
            }
            if (!getCliStderrBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, cliStderr_);
            }
            if (cliRunTime_ != 0F) {
                output.writeFloat(5, cliRunTime_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (cliReturnCode_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, cliReturnCode_);
            }
            if (!getCliStdoutBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, cliStdout_);
            }
            if (!getCliStderrBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, cliStderr_);
            }
            if (cliRunTime_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(5, cliRunTime_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubCLIResponse)) {
                return super.equals(obj);
            }
            HubCLIResponse other = (HubCLIResponse) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getCliReturnCode()
                    == other.getCliReturnCode());
            result = result && getCliStdout()
                    .equals(other.getCliStdout());
            result = result && getCliStderr()
                    .equals(other.getCliStderr());
            result = result && (
                    Float.floatToIntBits(getCliRunTime())
                            == Float.floatToIntBits(
                            other.getCliRunTime()));
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + CLI_RETURN_CODE_FIELD_NUMBER;
            hash = (53 * hash) + getCliReturnCode();
            hash = (37 * hash) + CLI_STDOUT_FIELD_NUMBER;
            hash = (53 * hash) + getCliStdout().hashCode();
            hash = (37 * hash) + CLI_STDERR_FIELD_NUMBER;
            hash = (53 * hash) + getCliStderr().hashCode();
            hash = (37 * hash) + CLI_RUN_TIME_FIELD_NUMBER;
            hash = (53 * hash) + Float.floatToIntBits(
                    getCliRunTime());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubCLIResponse> getParserForType() {
            return PARSER;
        }

        public HubCLIResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub CLI Response [device/hub/SN_HUB/cli/response]
         * </pre>
         *
         * Protobuf type {@code HubCLIResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubCLIResponse)
                HubCLIResponseOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int cliReturnCode_ ;
            private Object cliStdout_ = "";
            private Object cliStderr_ = "";
            private float cliRunTime_ ;

            // Construct using Hub.HubCLIResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubCLIResponse_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubCLIResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubCLIResponse.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                cliReturnCode_ = 0;

                cliStdout_ = "";

                cliStderr_ = "";

                cliRunTime_ = 0F;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubCLIResponse_descriptor;
            }

            public HubCLIResponse getDefaultInstanceForType() {
                return HubCLIResponse.getDefaultInstance();
            }

            public HubCLIResponse build() {
                HubCLIResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubCLIResponse buildPartial() {
                HubCLIResponse result = new HubCLIResponse(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.cliReturnCode_ = cliReturnCode_;
                result.cliStdout_ = cliStdout_;
                result.cliStderr_ = cliStderr_;
                result.cliRunTime_ = cliRunTime_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubCLIResponse) {
                    return mergeFrom((HubCLIResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubCLIResponse other) {
                if (other == HubCLIResponse.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getCliReturnCode() != 0) {
                    setCliReturnCode(other.getCliReturnCode());
                }
                if (!other.getCliStdout().isEmpty()) {
                    cliStdout_ = other.cliStdout_;
                    onChanged();
                }
                if (!other.getCliStderr().isEmpty()) {
                    cliStderr_ = other.cliStderr_;
                    onChanged();
                }
                if (other.getCliRunTime() != 0F) {
                    setCliRunTime(other.getCliRunTime());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubCLIResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubCLIResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * CLI RETURN CODE
             * </pre>
             *
             * <code>optional uint32 cli_return_code = 2;</code>
             */
            public int getCliReturnCode() {
                return cliReturnCode_;
            }

            /**
             * <pre>
             * CLI RETURN CODE
             * </pre>
             * <p>
             * <code>optional uint32 cli_return_code = 2;</code>
             */
            public Builder setCliReturnCode(int value) {

                cliReturnCode_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI RETURN CODE
             * </pre>
             * <p>
             * <code>optional uint32 cli_return_code = 2;</code>
             */
            public Builder clearCliReturnCode() {

                cliReturnCode_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDOUT
             * </pre>
             * <p>
             * <code>optional string cli_stdout = 3;</code>
             */
            public String getCliStdout() {
                Object ref = cliStdout_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    cliStdout_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * CLI STDOUT
             * </pre>
             * <p>
             * <code>optional string cli_stdout = 3;</code>
             */
            public Builder setCliStdout(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                cliStdout_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDOUT
             * </pre>
             * <p>
             * <code>optional string cli_stdout = 3;</code>
             */
            public com.google.protobuf.ByteString
            getCliStdoutBytes() {
                Object ref = cliStdout_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    cliStdout_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * CLI STDOUT
             * </pre>
             * <p>
             * <code>optional string cli_stdout = 3;</code>
             */
            public Builder setCliStdoutBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                cliStdout_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDOUT
             * </pre>
             * <p>
             * <code>optional string cli_stdout = 3;</code>
             */
            public Builder clearCliStdout() {

                cliStdout_ = getDefaultInstance().getCliStdout();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDERR
             * </pre>
             * <p>
             * <code>optional string cli_stderr = 4;</code>
             */
            public String getCliStderr() {
                Object ref = cliStderr_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    cliStderr_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * CLI STDERR
             * </pre>
             *
             * <code>optional string cli_stderr = 4;</code>
             */
            public Builder setCliStderr(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                cliStderr_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDERR
             * </pre>
             *
             * <code>optional string cli_stderr = 4;</code>
             */
            public com.google.protobuf.ByteString
            getCliStderrBytes() {
                Object ref = cliStderr_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    cliStderr_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * CLI STDERR
             * </pre>
             *
             * <code>optional string cli_stderr = 4;</code>
             */
            public Builder setCliStderrBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                cliStderr_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI STDERR
             * </pre>
             *
             * <code>optional string cli_stderr = 4;</code>
             */
            public Builder clearCliStderr() {

                cliStderr_ = getDefaultInstance().getCliStderr();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI RUN TIME
             * </pre>
             *
             * <code>optional float cli_run_time = 5;</code>
             */
            public float getCliRunTime() {
                return cliRunTime_;
            }

            /**
             * <pre>
             * CLI RUN TIME
             * </pre>
             *
             * <code>optional float cli_run_time = 5;</code>
             */
            public Builder setCliRunTime(float value) {

                cliRunTime_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * CLI RUN TIME
             * </pre>
             *
             * <code>optional float cli_run_time = 5;</code>
             */
            public Builder clearCliRunTime() {

                cliRunTime_ = 0F;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubCLIResponse)
        }

    }

    /**
     * <pre>
     * Hub User Configuration [device/hub/SN_HUB/user_config]
     *    User settings form app (always publish as retained=True)
     *    - published every "on-boarding" period (first setup or wifi configuration)
     * </pre>
     *
     * Protobuf type {@code HubUserConfiguration}
     */
    public  static final class HubUserConfiguration extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubUserConfiguration)
            HubUserConfigurationOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int TIMEZONE_FIELD_NUMBER = 2;
        public static final int BLE_ALERT_FIELD_NUMBER = 3;
        public static final int WIFI_ALERT_FIELD_NUMBER = 4;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubUserConfiguration)
        private static final HubUserConfiguration DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubUserConfiguration>
                PARSER = new com.google.protobuf.AbstractParser<HubUserConfiguration>() {
            public HubUserConfiguration parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubUserConfiguration(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubUserConfiguration();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private volatile Object timezone_;
        private boolean bleAlert_;
        private boolean wifiAlert_;
        private byte memoizedIsInitialized = -1;

        // Use HubUserConfiguration.newBuilder() to construct.
        private HubUserConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubUserConfiguration() {
            timezone_ = "";
            bleAlert_ = false;
            wifiAlert_ = false;
        }

        private HubUserConfiguration(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            timezone_ = s;
                            break;
                        }
                        case 24: {

                            bleAlert_ = input.readBool();
                            break;
                        }
                        case 32: {

                            wifiAlert_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubUserConfiguration_descriptor;
        }

        public static HubUserConfiguration parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubUserConfiguration parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubUserConfiguration parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubUserConfiguration parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubUserConfiguration parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubUserConfiguration parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubUserConfiguration parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubUserConfiguration parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubUserConfiguration parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubUserConfiguration parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubUserConfiguration prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubUserConfiguration getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubUserConfiguration> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubUserConfiguration_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubUserConfiguration.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         *
         * <code>optional string timezone = 2;</code>
         */
        public String getTimezone() {
            Object ref = timezone_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                timezone_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
         * </pre>
         *
         * <code>optional string timezone = 2;</code>
         */
        public com.google.protobuf.ByteString
        getTimezoneBytes() {
            Object ref = timezone_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                timezone_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * BLE LED Alert
         * </pre>
         *
         * <code>optional bool ble_alert = 3;</code>
         */
        public boolean getBleAlert() {
            return bleAlert_;
        }

        /**
         * <pre>
         * WiFi LED Alert
         * </pre>
         *
         * <code>optional bool wifi_alert = 4;</code>
         */
        public boolean getWifiAlert() {
            return wifiAlert_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (!getTimezoneBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, timezone_);
            }
            if (bleAlert_ != false) {
                output.writeBool(3, bleAlert_);
            }
            if (wifiAlert_ != false) {
                output.writeBool(4, wifiAlert_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (!getTimezoneBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, timezone_);
            }
            if (bleAlert_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, bleAlert_);
            }
            if (wifiAlert_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(4, wifiAlert_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubUserConfiguration)) {
                return super.equals(obj);
            }
            HubUserConfiguration other = (HubUserConfiguration) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && getTimezone()
                    .equals(other.getTimezone());
            result = result && (getBleAlert()
                    == other.getBleAlert());
            result = result && (getWifiAlert()
                    == other.getWifiAlert());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
            hash = (53 * hash) + getTimezone().hashCode();
            hash = (37 * hash) + BLE_ALERT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getBleAlert());
            hash = (37 * hash) + WIFI_ALERT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getWifiAlert());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubUserConfiguration> getParserForType() {
            return PARSER;
        }

        public HubUserConfiguration getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Hub User Configuration [device/hub/SN_HUB/user_config]
         *    User settings form app (always publish as retained=True)
         *    - published every "on-boarding" period (first setup or wifi configuration)
         * </pre>
         *
         * Protobuf type {@code HubUserConfiguration}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubUserConfiguration)
                HubUserConfigurationOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private Object timezone_ = "";
            private boolean bleAlert_ ;
            private boolean wifiAlert_ ;

            // Construct using Hub.HubUserConfiguration.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubUserConfiguration_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubUserConfiguration_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubUserConfiguration.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                timezone_ = "";

                bleAlert_ = false;

                wifiAlert_ = false;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubUserConfiguration_descriptor;
            }

            public HubUserConfiguration getDefaultInstanceForType() {
                return HubUserConfiguration.getDefaultInstance();
            }

            public HubUserConfiguration build() {
                HubUserConfiguration result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubUserConfiguration buildPartial() {
                HubUserConfiguration result = new HubUserConfiguration(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.timezone_ = timezone_;
                result.bleAlert_ = bleAlert_;
                result.wifiAlert_ = wifiAlert_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubUserConfiguration) {
                    return mergeFrom((HubUserConfiguration) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubUserConfiguration other) {
                if (other == HubUserConfiguration.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (!other.getTimezone().isEmpty()) {
                    timezone_ = other.timezone_;
                    onChanged();
                }
                if (other.getBleAlert() != false) {
                    setBleAlert(other.getBleAlert());
                }
                if (other.getWifiAlert() != false) {
                    setWifiAlert(other.getWifiAlert());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubUserConfiguration parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubUserConfiguration) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 2;</code>
             */
            public String getTimezone() {
                Object ref = timezone_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    timezone_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 2;</code>
             */
            public Builder setTimezone(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                timezone_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 2;</code>
             */
            public com.google.protobuf.ByteString
            getTimezoneBytes() {
                Object ref = timezone_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    timezone_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 2;</code>
             */
            public Builder setTimezoneBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                timezone_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Time Zone              // See 'https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'
             * </pre>
             * <p>
             * <code>optional string timezone = 2;</code>
             */
            public Builder clearTimezone() {

                timezone_ = getDefaultInstance().getTimezone();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE LED Alert
             * </pre>
             * <p>
             * <code>optional bool ble_alert = 3;</code>
             */
            public boolean getBleAlert() {
                return bleAlert_;
            }

            /**
             * <pre>
             * BLE LED Alert
             * </pre>
             * <p>
             * <code>optional bool ble_alert = 3;</code>
             */
            public Builder setBleAlert(boolean value) {

                bleAlert_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE LED Alert
             * </pre>
             * <p>
             * <code>optional bool ble_alert = 3;</code>
             */
            public Builder clearBleAlert() {

                bleAlert_ = false;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * WiFi LED Alert
             * </pre>
             * <p>
             * <code>optional bool wifi_alert = 4;</code>
             */
            public boolean getWifiAlert() {
                return wifiAlert_;
            }

            /**
             * <pre>
             * WiFi LED Alert
             * </pre>
             * <p>
             * <code>optional bool wifi_alert = 4;</code>
             */
            public Builder setWifiAlert(boolean value) {

                wifiAlert_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * WiFi LED Alert
             * </pre>
             * <p>
             * <code>optional bool wifi_alert = 4;</code>
             */
            public Builder clearWifiAlert() {

                wifiAlert_ = false;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:HubUserConfiguration)
        }

    }

    /**
     * <pre>
     * HubUserConfigurationHidden [device/hub/SN_HUB/user_config_hidden]
     *    User settings NOT in-app, hence hidden.
     *    - published for testing purposes (atm 7/11/17)
     * </pre>
     * <p>
     * Protobuf type {@code HubUserConfigurationHidden}
     */
    public static final class HubUserConfigurationHidden extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:HubUserConfigurationHidden)
            HubUserConfigurationHiddenOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int BPM_SAMPLES_FIELD_NUMBER = 2;
        public static final int BPM_THRESHOLD_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:HubUserConfigurationHidden)
        private static final HubUserConfigurationHidden DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<HubUserConfigurationHidden>
                PARSER = new com.google.protobuf.AbstractParser<HubUserConfigurationHidden>() {
            public HubUserConfigurationHidden parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HubUserConfigurationHidden(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new HubUserConfigurationHidden();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int bpmSamples_;
        private int bpmThreshold_;
        private byte memoizedIsInitialized = -1;

        // Use HubUserConfigurationHidden.newBuilder() to construct.
        private HubUserConfigurationHidden(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private HubUserConfigurationHidden() {
            bpmSamples_ = 0;
            bpmThreshold_ = 0;
        }

        private HubUserConfigurationHidden(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            bpmSamples_ = input.readUInt32();
                            break;
                        }
                        case 24: {

                            bpmThreshold_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_HubUserConfigurationHidden_descriptor;
        }

        public static HubUserConfigurationHidden parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubUserConfigurationHidden parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubUserConfigurationHidden parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static HubUserConfigurationHidden parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HubUserConfigurationHidden parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubUserConfigurationHidden parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubUserConfigurationHidden parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HubUserConfigurationHidden parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HubUserConfigurationHidden parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HubUserConfigurationHidden parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HubUserConfigurationHidden prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static HubUserConfigurationHidden getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<HubUserConfigurationHidden> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_HubUserConfigurationHidden_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HubUserConfigurationHidden.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Heart Rate filter sample-size, default:  5, disable: 0
         * </pre>
         * <p>
         * <code>optional uint32 bpm_samples = 2;</code>
         */
        public int getBpmSamples() {
            return bpmSamples_;
        }

        /**
         * <pre>
         * Heart Rate filter threshold,   default: 70
         * </pre>
         * <p>
         * <code>optional uint32 bpm_threshold = 3;</code>
         */
        public int getBpmThreshold() {
            return bpmThreshold_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (bpmSamples_ != 0) {
                output.writeUInt32(2, bpmSamples_);
            }
            if (bpmThreshold_ != 0) {
                output.writeUInt32(3, bpmThreshold_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (bpmSamples_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, bpmSamples_);
            }
            if (bpmThreshold_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, bpmThreshold_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HubUserConfigurationHidden)) {
                return super.equals(obj);
            }
            HubUserConfigurationHidden other = (HubUserConfigurationHidden) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getBpmSamples()
                    == other.getBpmSamples());
            result = result && (getBpmThreshold()
                    == other.getBpmThreshold());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + BPM_SAMPLES_FIELD_NUMBER;
            hash = (53 * hash) + getBpmSamples();
            hash = (37 * hash) + BPM_THRESHOLD_FIELD_NUMBER;
            hash = (53 * hash) + getBpmThreshold();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<HubUserConfigurationHidden> getParserForType() {
            return PARSER;
        }

        public HubUserConfigurationHidden getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * HubUserConfigurationHidden [device/hub/SN_HUB/user_config_hidden]
         *    User settings NOT in-app, hence hidden.
         *    - published for testing purposes (atm 7/11/17)
         * </pre>
         * <p>
         * Protobuf type {@code HubUserConfigurationHidden}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:HubUserConfigurationHidden)
                HubUserConfigurationHiddenOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int bpmSamples_;
            private int bpmThreshold_;

            // Construct using Hub.HubUserConfigurationHidden.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_HubUserConfigurationHidden_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_HubUserConfigurationHidden_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HubUserConfigurationHidden.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                bpmSamples_ = 0;

                bpmThreshold_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_HubUserConfigurationHidden_descriptor;
            }

            public HubUserConfigurationHidden getDefaultInstanceForType() {
                return HubUserConfigurationHidden.getDefaultInstance();
            }

            public HubUserConfigurationHidden build() {
                HubUserConfigurationHidden result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public HubUserConfigurationHidden buildPartial() {
                HubUserConfigurationHidden result = new HubUserConfigurationHidden(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.bpmSamples_ = bpmSamples_;
                result.bpmThreshold_ = bpmThreshold_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof HubUserConfigurationHidden) {
                    return mergeFrom((HubUserConfigurationHidden) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HubUserConfigurationHidden other) {
                if (other == HubUserConfigurationHidden.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getBpmSamples() != 0) {
                    setBpmSamples(other.getBpmSamples());
                }
                if (other.getBpmThreshold() != 0) {
                    setBpmThreshold(other.getBpmThreshold());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                HubUserConfigurationHidden parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HubUserConfigurationHidden) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Heart Rate filter sample-size, default:  5, disable: 0
             * </pre>
             * <p>
             * <code>optional uint32 bpm_samples = 2;</code>
             */
            public int getBpmSamples() {
                return bpmSamples_;
            }

            /**
             * <pre>
             * Heart Rate filter sample-size, default:  5, disable: 0
             * </pre>
             * <p>
             * <code>optional uint32 bpm_samples = 2;</code>
             */
            public Builder setBpmSamples(int value) {

                bpmSamples_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate filter sample-size, default:  5, disable: 0
             * </pre>
             * <p>
             * <code>optional uint32 bpm_samples = 2;</code>
             */
            public Builder clearBpmSamples() {

                bpmSamples_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate filter threshold,   default: 70
             * </pre>
             * <p>
             * <code>optional uint32 bpm_threshold = 3;</code>
             */
            public int getBpmThreshold() {
                return bpmThreshold_;
            }

            /**
             * <pre>
             * Heart Rate filter threshold,   default: 70
             * </pre>
             *
             * <code>optional uint32 bpm_threshold = 3;</code>
             */
            public Builder setBpmThreshold(int value) {

                bpmThreshold_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate filter threshold,   default: 70
             * </pre>
             *
             * <code>optional uint32 bpm_threshold = 3;</code>
             */
            public Builder clearBpmThreshold() {

                bpmThreshold_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


      // @@protoc_insertion_point(builder_scope:HubUserConfigurationHidden)
        }

    }

    /**
     * <pre>
     * Band State [device/hub/SN_HUB/band/state]
     * </pre>
     * <p>
     * Protobuf type {@code BandState}
     */
    public  static final class BandState extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:BandState)
            BandStateOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int STATE_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:BandState)
        private static final BandState DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<BandState>
                PARSER = new com.google.protobuf.AbstractParser<BandState>() {
            public BandState parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BandState(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new BandState();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int state_;
        private byte memoizedIsInitialized = -1;

        // Use BandState.newBuilder() to construct.
        private BandState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private BandState() {
            state_ = 0;
        }

        private BandState(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            state_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandState_descriptor;
        }

        public static BandState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static BandState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(BandState prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static BandState getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<BandState> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            BandState.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Wearable state
         * </pre>
         *
         * <code>optional .BandState.WearableState state = 2;</code>
         */
        public int getStateValue() {
            return state_;
        }

        /**
         * <pre>
         * Wearable state
         * </pre>
         *
         * <code>optional .BandState.WearableState state = 2;</code>
         */
        public WearableState getState() {
            WearableState result = WearableState.valueOf(state_);
            return result == null ? WearableState.UNRECOGNIZED : result;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (state_ != WearableState.UNKNOWN.getNumber()) {
                output.writeEnum(2, state_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (state_ != WearableState.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, state_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BandState)) {
                return super.equals(obj);
            }
            BandState other = (BandState) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && state_ == other.state_;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + STATE_FIELD_NUMBER;
            hash = (53 * hash) + state_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BandState> getParserForType() {
            return PARSER;
        }

        public BandState getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code BandState.WearableState}
         */
        public enum WearableState
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <pre>
             * Unknown
             * </pre>
             *
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <pre>
             * Connected, PTU detect, Charge Complete
             * </pre>
             *
             * <code>CHARGED = 1;</code>
             */
            CHARGED(1),
            /**
             * <pre>
             * Connected, PTU detect, Charging
             * </pre>
             *
             * <code>CHARGING = 2;</code>
             */
            CHARGING(2),
            /**
             * <pre>
             * Connected, Not PTU detect, Presence Detect
             * </pre>
             *
             * <code>DETECTING = 3;</code>
             */
            DETECTING(3),
            /**
             * <pre>
             * Connected, Not PTU detect, Not Presence Detect
             * </pre>
             *
             * <code>READY = 4;</code>
             */
            READY(4),
            /**
             * <pre>
             * Not Connected, Last known battery low
             * </pre>
             *
             * <code>BATTERY_DEAD = 5;</code>
             */
            BATTERY_DEAD(5),
            /**
             * <pre>
             * Not Connected, Last known battery good
             * </pre>
             *
             * <code>NOT_FOUND = 6;</code>
             */
            NOT_FOUND(6),
            /**
             * <pre>
             * Update in progress
             * </pre>
             *
             * <code>UPDATING = 7;</code>
             */
            UPDATING(7),
            UNRECOGNIZED(-1),;

            /**
             * <pre>
             * Unknown
             * </pre>
             *
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <pre>
             * Connected, PTU detect, Charge Complete
             * </pre>
             *
             * <code>CHARGED = 1;</code>
             */
            public static final int CHARGED_VALUE = 1;
            /**
             * <pre>
             * Connected, PTU detect, Charging
             * </pre>
             *
             * <code>CHARGING = 2;</code>
             */
            public static final int CHARGING_VALUE = 2;
            /**
             * <pre>
             * Connected, Not PTU detect, Presence Detect
             * </pre>
             *
             * <code>DETECTING = 3;</code>
             */
            public static final int DETECTING_VALUE = 3;
            /**
             * <pre>
             * Connected, Not PTU detect, Not Presence Detect
             * </pre>
             *
             * <code>READY = 4;</code>
             */
            public static final int READY_VALUE = 4;
            /**
             * <pre>
             * Not Connected, Last known battery low
             * </pre>
             *
             * <code>BATTERY_DEAD = 5;</code>
             */
            public static final int BATTERY_DEAD_VALUE = 5;
            /**
             * <pre>
             * Not Connected, Last known battery good
             * </pre>
             *
             * <code>NOT_FOUND = 6;</code>
             */
            public static final int NOT_FOUND_VALUE = 6;
            /**
             * <pre>
             * Update in progress
             * </pre>
             *
             * <code>UPDATING = 7;</code>
             */
            public static final int UPDATING_VALUE = 7;
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    WearableState> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<WearableState>() {
                        public WearableState findValueByNumber(int number) {
                            return WearableState.forNumber(number);
                        }
                    };
            private static final WearableState[] VALUES = values();
            private final int value;

            private WearableState(int value) {
                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static WearableState valueOf(int value) {
                return forNumber(value);
            }

            public static WearableState forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return CHARGED;
                    case 2:
                        return CHARGING;
                    case 3:
                        return DETECTING;
                    case 4: return READY;
                    case 5: return BATTERY_DEAD;
                    case 6: return NOT_FOUND;
                    case 7: return UPDATING;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<WearableState>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return BandState.getDescriptor().getEnumTypes().get(0);
            }

            public static WearableState valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:BandState.WearableState)
        }

        /**
         * <pre>
         * Band State [device/hub/SN_HUB/band/state]
         * </pre>
         * <p>
         * Protobuf type {@code BandState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:BandState)
                BandStateOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int state_ = 0;

            // Construct using Hub.BandState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_BandState_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_BandState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                BandState.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                state_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_BandState_descriptor;
            }

            public BandState getDefaultInstanceForType() {
                return BandState.getDefaultInstance();
            }

            public BandState build() {
                BandState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public BandState buildPartial() {
                BandState result = new BandState(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.state_ = state_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof BandState) {
                    return mergeFrom((BandState) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(BandState other) {
                if (other == BandState.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.state_ != 0) {
                    setStateValue(other.getStateValue());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                BandState parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (BandState) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Wearable state
             * </pre>
             *
             * <code>optional .BandState.WearableState state = 2;</code>
             */
            public int getStateValue() {
                return state_;
            }

            /**
             * <pre>
             * Wearable state
             * </pre>
             *
             * <code>optional .BandState.WearableState state = 2;</code>
             */
            public Builder setStateValue(int value) {
                state_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Wearable state
             * </pre>
             *
             * <code>optional .BandState.WearableState state = 2;</code>
             */
            public WearableState getState() {
                WearableState result = WearableState.valueOf(state_);
                return result == null ? WearableState.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Wearable state
             * </pre>
             *
             * <code>optional .BandState.WearableState state = 2;</code>
             */
            public Builder setState(WearableState value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                state_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Wearable state
             * </pre>
             *
             * <code>optional .BandState.WearableState state = 2;</code>
             */
            public Builder clearState() {

                state_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:BandState)
        }

    }

    /**
     * <pre>
     * Band Status [device/hub/SN_HUB/band/system]
     *    Status report from band (always publish as retained=True)
     *    - published every minute
     * </pre>
     *
     * Protobuf type {@code BandStatus}
     */
    public static final class BandStatus extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:BandStatus)
            BandStatusOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int BATTERY_VOLTAGE_FIELD_NUMBER = 2;
        public static final int FIRMWARE_VERSION_FIELD_NUMBER = 3;
        public static final int MCU_TEMPERATURE_FIELD_NUMBER = 4;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:BandStatus)
        private static final BandStatus DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<BandStatus>
                PARSER = new com.google.protobuf.AbstractParser<BandStatus>() {
            public BandStatus parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BandStatus(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new BandStatus();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int batteryVoltage_;
        private com.google.protobuf.ByteString firmwareVersion_;
        private int mcuTemperature_;
        private byte memoizedIsInitialized = -1;

        // Use BandStatus.newBuilder() to construct.
        private BandStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private BandStatus() {
            batteryVoltage_ = 0;
            firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;
            mcuTemperature_ = 0;
        }

        private BandStatus(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            batteryVoltage_ = input.readUInt32();
                            break;
                        }
                        case 26: {

                            firmwareVersion_ = input.readBytes();
                            break;
                        }
                        case 32: {

                            mcuTemperature_ = input.readSInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandStatus_descriptor;
        }

        public static BandStatus parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandStatus parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandStatus parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandStatus parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandStatus parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandStatus parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandStatus parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static BandStatus parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandStatus parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandStatus parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(BandStatus prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static BandStatus getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<BandStatus> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandStatus_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            BandStatus.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Battery Voltage in mV // Range: 0 - 5000, 4000-&gt;3600 is 80 percentile, 3600-&gt;3000 is 20 percentile
         * </pre>
         *
         * <code>optional uint32 battery_voltage = 2;</code>
         */
        public int getBatteryVoltage() {
            return batteryVoltage_;
        }

        /**
         * <pre>
         * Firmware Version
         * </pre>
         *
         * <code>optional bytes firmware_version = 3;</code>
         */
        public com.google.protobuf.ByteString getFirmwareVersion() {
            return firmwareVersion_;
        }

        /**
         * <pre>
         * MCU Temperature       // Range: -256 - +255
         * </pre>
         *
         * <code>optional sint32 mcu_temperature = 4;</code>
         */
        public int getMcuTemperature() {
            return mcuTemperature_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (batteryVoltage_ != 0) {
                output.writeUInt32(2, batteryVoltage_);
            }
            if (!firmwareVersion_.isEmpty()) {
                output.writeBytes(3, firmwareVersion_);
            }
            if (mcuTemperature_ != 0) {
                output.writeSInt32(4, mcuTemperature_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (batteryVoltage_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, batteryVoltage_);
            }
            if (!firmwareVersion_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, firmwareVersion_);
            }
            if (mcuTemperature_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(4, mcuTemperature_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BandStatus)) {
                return super.equals(obj);
            }
            BandStatus other = (BandStatus) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getBatteryVoltage()
                    == other.getBatteryVoltage());
            result = result && getFirmwareVersion()
                    .equals(other.getFirmwareVersion());
            result = result && (getMcuTemperature()
                    == other.getMcuTemperature());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + BATTERY_VOLTAGE_FIELD_NUMBER;
            hash = (53 * hash) + getBatteryVoltage();
            hash = (37 * hash) + FIRMWARE_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getFirmwareVersion().hashCode();
            hash = (37 * hash) + MCU_TEMPERATURE_FIELD_NUMBER;
            hash = (53 * hash) + getMcuTemperature();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BandStatus> getParserForType() {
            return PARSER;
        }

        public BandStatus getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Band Status [device/hub/SN_HUB/band/system]
         *    Status report from band (always publish as retained=True)
         *    - published every minute
         * </pre>
         *
         * Protobuf type {@code BandStatus}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:BandStatus)
                BandStatusOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int batteryVoltage_ ;
            private com.google.protobuf.ByteString firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;
            private int mcuTemperature_;

            // Construct using Hub.BandStatus.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_BandStatus_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_BandStatus_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                BandStatus.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                batteryVoltage_ = 0;

                firmwareVersion_ = com.google.protobuf.ByteString.EMPTY;

                mcuTemperature_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_BandStatus_descriptor;
            }

            public BandStatus getDefaultInstanceForType() {
                return BandStatus.getDefaultInstance();
            }

            public BandStatus build() {
                BandStatus result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public BandStatus buildPartial() {
                BandStatus result = new BandStatus(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.batteryVoltage_ = batteryVoltage_;
                result.firmwareVersion_ = firmwareVersion_;
                result.mcuTemperature_ = mcuTemperature_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof BandStatus) {
                    return mergeFrom((BandStatus)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(BandStatus other) {
                if (other == BandStatus.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getBatteryVoltage() != 0) {
                    setBatteryVoltage(other.getBatteryVoltage());
                }
                if (other.getFirmwareVersion() != com.google.protobuf.ByteString.EMPTY) {
                    setFirmwareVersion(other.getFirmwareVersion());
                }
                if (other.getMcuTemperature() != 0) {
                    setMcuTemperature(other.getMcuTemperature());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                BandStatus parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (BandStatus) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Battery Voltage in mV // Range: 0 - 5000, 4000-&gt;3600 is 80 percentile, 3600-&gt;3000 is 20 percentile
             * </pre>
             *
             * <code>optional uint32 battery_voltage = 2;</code>
             */
            public int getBatteryVoltage() {
                return batteryVoltage_;
            }

            /**
             * <pre>
             * Battery Voltage in mV // Range: 0 - 5000, 4000-&gt;3600 is 80 percentile, 3600-&gt;3000 is 20 percentile
             * </pre>
             *
             * <code>optional uint32 battery_voltage = 2;</code>
             */
            public Builder setBatteryVoltage(int value) {

                batteryVoltage_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Battery Voltage in mV // Range: 0 - 5000, 4000-&gt;3600 is 80 percentile, 3600-&gt;3000 is 20 percentile
             * </pre>
             *
             * <code>optional uint32 battery_voltage = 2;</code>
             */
            public Builder clearBatteryVoltage() {

                batteryVoltage_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 3;</code>
             */
            public com.google.protobuf.ByteString getFirmwareVersion() {
                return firmwareVersion_;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 3;</code>
             */
            public Builder setFirmwareVersion(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                firmwareVersion_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Firmware Version
             * </pre>
             *
             * <code>optional bytes firmware_version = 3;</code>
             */
            public Builder clearFirmwareVersion() {

                firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MCU Temperature       // Range: -256 - +255
             * </pre>
             *
             * <code>optional sint32 mcu_temperature = 4;</code>
             */
            public int getMcuTemperature() {
                return mcuTemperature_;
            }

            /**
             * <pre>
             * MCU Temperature       // Range: -256 - +255
             * </pre>
             *
             * <code>optional sint32 mcu_temperature = 4;</code>
             */
            public Builder setMcuTemperature(int value) {

                mcuTemperature_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MCU Temperature       // Range: -256 - +255
             * </pre>
             *
             * <code>optional sint32 mcu_temperature = 4;</code>
             */
            public Builder clearMcuTemperature() {

                mcuTemperature_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:BandStatus)
        }

    }

    /**
     * <pre>
     * Band Telemetry [device/hub/SN_HUB/band/telemetry]
     *    Telemetry report from band.
     *    - published every second (only when Timezone is set)
     * </pre>
     *
     * Protobuf type {@code BandTelemetry}
     */
    public static final class BandTelemetry extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:BandTelemetry)
            BandTelemetryOrBuilder {
        public static final int TIMESTAMP_FIELD_NUMBER = 1;
        public static final int MILLIS_FIELD_NUMBER = 2;
        public static final int HR_BPM_FIELD_NUMBER = 3;
        public static final int HR_SQI_FIELD_NUMBER = 4;
        public static final int ACCEL_X_FIELD_NUMBER = 5;
        public static final int ACCEL_Y_FIELD_NUMBER = 6;
        public static final int ACCEL_Z_FIELD_NUMBER = 7;
        public static final int UTC_OFFSET_FIELD_NUMBER = 8;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:BandTelemetry)
        private static final BandTelemetry DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<BandTelemetry>
                PARSER = new com.google.protobuf.AbstractParser<BandTelemetry>() {
            public BandTelemetry parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BandTelemetry(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new BandTelemetry();
        }

        private com.google.protobuf.Timestamp timestamp_;
        private int millis_;
        private int hrBpm_;
        private int hrSqi_;
        private int accelX_;
        private int accelY_;
        private int accelZ_;
        private int utcOffset_;
        private byte memoizedIsInitialized = -1;

        // Use BandTelemetry.newBuilder() to construct.
        private BandTelemetry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private BandTelemetry() {
            millis_ = 0;
            hrBpm_ = 0;
            hrSqi_ = 0;
            accelX_ = 0;
            accelY_ = 0;
            accelZ_ = 0;
            utcOffset_ = 0;
        }

        private BandTelemetry(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            millis_ = input.readUInt32();
                            break;
                        }
                        case 24: {

                            hrBpm_ = input.readUInt32();
                            break;
                        }
                        case 32: {

                            hrSqi_ = input.readUInt32();
                            break;
                        }
                        case 40: {

                            accelX_ = input.readSInt32();
                            break;
                        }
                        case 48: {

                            accelY_ = input.readSInt32();
                            break;
                        }
                        case 56: {

                            accelZ_ = input.readSInt32();
                            break;
                        }
                        case 64: {

                            utcOffset_ = input.readSInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandTelemetry_descriptor;
        }

        public static BandTelemetry parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandTelemetry parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandTelemetry parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandTelemetry parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandTelemetry parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandTelemetry parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandTelemetry parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static BandTelemetry parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandTelemetry parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandTelemetry parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(BandTelemetry prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static BandTelemetry getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<BandTelemetry> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandTelemetry_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            BandTelemetry.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Milliseconds from Band
         * </pre>
         *
         * <code>optional uint32 millis = 2;</code>
         */
        public int getMillis() {
            return millis_;
        }

        /**
         * <pre>
         * Heart Rate in BPM               // Range: 30 - 120
         * </pre>
         *
         * <code>optional uint32 hr_bpm = 3;</code>
         */
        public int getHrBpm() {
            return hrBpm_;
        }

        /**
         * <pre>
         * Heart Rate Signal Quality Index // Range: 0-20 &amp; 254-255
         * </pre>
         *
         * <code>optional uint32 hr_sqi = 4;</code>
         */
        public int getHrSqi() {
            return hrSqi_;
        }

        /**
         * <pre>
         * Acceleration x-axis // Range: -2048 - +2047
         * </pre>
         *
         * <code>optional sint32 accel_x = 5;</code>
         */
        public int getAccelX() {
            return accelX_;
        }

        /**
         * <pre>
         * Acceleration y-axis // Range: -2048 - +2047
         * </pre>
         *
         * <code>optional sint32 accel_y = 6;</code>
         */
        public int getAccelY() {
            return accelY_;
        }

        /**
         * <pre>
         * Acceleration z-axis // Range: -2048 - +2047
         * </pre>
         *
         * <code>optional sint32 accel_z = 7;</code>
         */
        public int getAccelZ() {
            return accelZ_;
        }

        /**
         * <pre>
         * UTC time offset in seconds      // Value: positive/negative when West/East of UTC, respectively
         * </pre>
         *
         * <code>optional sint32 utc_offset = 8;</code>
         */
        public int getUtcOffset() {
            return utcOffset_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (millis_ != 0) {
                output.writeUInt32(2, millis_);
            }
            if (hrBpm_ != 0) {
                output.writeUInt32(3, hrBpm_);
            }
            if (hrSqi_ != 0) {
                output.writeUInt32(4, hrSqi_);
            }
            if (accelX_ != 0) {
                output.writeSInt32(5, accelX_);
            }
            if (accelY_ != 0) {
                output.writeSInt32(6, accelY_);
            }
            if (accelZ_ != 0) {
                output.writeSInt32(7, accelZ_);
            }
            if (utcOffset_ != 0) {
                output.writeSInt32(8, utcOffset_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (millis_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, millis_);
            }
            if (hrBpm_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, hrBpm_);
            }
            if (hrSqi_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, hrSqi_);
            }
            if (accelX_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(5, accelX_);
            }
            if (accelY_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(6, accelY_);
            }
            if (accelZ_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(7, accelZ_);
            }
            if (utcOffset_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(8, utcOffset_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BandTelemetry)) {
                return super.equals(obj);
            }
            BandTelemetry other = (BandTelemetry) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && (getMillis()
                    == other.getMillis());
            result = result && (getHrBpm()
                    == other.getHrBpm());
            result = result && (getHrSqi()
                    == other.getHrSqi());
            result = result && (getAccelX()
                    == other.getAccelX());
            result = result && (getAccelY()
                    == other.getAccelY());
            result = result && (getAccelZ()
                    == other.getAccelZ());
            result = result && (getUtcOffset()
                    == other.getUtcOffset());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + MILLIS_FIELD_NUMBER;
            hash = (53 * hash) + getMillis();
            hash = (37 * hash) + HR_BPM_FIELD_NUMBER;
            hash = (53 * hash) + getHrBpm();
            hash = (37 * hash) + HR_SQI_FIELD_NUMBER;
            hash = (53 * hash) + getHrSqi();
            hash = (37 * hash) + ACCEL_X_FIELD_NUMBER;
            hash = (53 * hash) + getAccelX();
            hash = (37 * hash) + ACCEL_Y_FIELD_NUMBER;
            hash = (53 * hash) + getAccelY();
            hash = (37 * hash) + ACCEL_Z_FIELD_NUMBER;
            hash = (53 * hash) + getAccelZ();
            hash = (37 * hash) + UTC_OFFSET_FIELD_NUMBER;
            hash = (53 * hash) + getUtcOffset();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() { return newBuilder(); }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BandTelemetry> getParserForType() {
            return PARSER;
        }

        public BandTelemetry getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * Band Telemetry [device/hub/SN_HUB/band/telemetry]
         *    Telemetry report from band.
         *    - published every second (only when Timezone is set)
         * </pre>
         *
         * Protobuf type {@code BandTelemetry}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:BandTelemetry)
                BandTelemetryOrBuilder {
            private com.google.protobuf.Timestamp timestamp_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
            private int millis_ ;
            private int hrBpm_ ;
            private int hrSqi_ ;
            private int accelX_;
            private int accelY_;
            private int accelZ_;
            private int utcOffset_;

            // Construct using Hub.BandTelemetry.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_BandTelemetry_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_BandTelemetry_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                BandTelemetry.class, Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }
                millis_ = 0;

                hrBpm_ = 0;

                hrSqi_ = 0;

                accelX_ = 0;

                accelY_ = 0;

                accelZ_ = 0;

                utcOffset_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return Hub.internal_static_BandTelemetry_descriptor;
            }

            public BandTelemetry getDefaultInstanceForType() {
                return BandTelemetry.getDefaultInstance();
            }

            public BandTelemetry build() {
                BandTelemetry result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public BandTelemetry buildPartial() {
                BandTelemetry result = new BandTelemetry(this);
                if (timestampBuilder_ == null) {
                    result.timestamp_ = timestamp_;
                } else {
                    result.timestamp_ = timestampBuilder_.build();
                }
                result.millis_ = millis_;
                result.hrBpm_ = hrBpm_;
                result.hrSqi_ = hrSqi_;
                result.accelX_ = accelX_;
                result.accelY_ = accelY_;
                result.accelZ_ = accelZ_;
                result.utcOffset_ = utcOffset_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof BandTelemetry) {
                    return mergeFrom((BandTelemetry) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(BandTelemetry other) {
                if (other == BandTelemetry.getDefaultInstance()) return this;
                if (other.hasTimestamp()) {
                    mergeTimestamp(other.getTimestamp());
                }
                if (other.getMillis() != 0) {
                    setMillis(other.getMillis());
                }
                if (other.getHrBpm() != 0) {
                    setHrBpm(other.getHrBpm());
                }
                if (other.getHrSqi() != 0) {
                    setHrSqi(other.getHrSqi());
                }
                if (other.getAccelX() != 0) {
                    setAccelX(other.getAccelX());
                }
                if (other.getAccelY() != 0) {
                    setAccelY(other.getAccelY());
                }
                if (other.getAccelZ() != 0) {
                    setAccelZ(other.getAccelZ());
                }
                if (other.getUtcOffset() != 0) {
                    setUtcOffset(other.getUtcOffset());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                BandTelemetry parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (BandTelemetry) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public boolean hasTimestamp() {
                return timestampBuilder_ != null || timestamp_ != null;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp getTimestamp() {
                if (timestampBuilder_ == null) {
                    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                } else {
                    return timestampBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(
                    com.google.protobuf.Timestamp.Builder builderForValue) {
                if (timestampBuilder_ == null) {
                    timestamp_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder setTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timestamp_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
                if (timestampBuilder_ == null) {
                    if (timestamp_ != null) {
                        timestamp_ =
                                com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
                    } else {
                        timestamp_ = value;
                    }
                    onChanged();
                } else {
                    timestampBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public Builder clearTimestamp() {
                if (timestampBuilder_ == null) {
                    timestamp_ = null;
                    onChanged();
                } else {
                    timestamp_ = null;
                    timestampBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

                onChanged();
                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
                if (timestampBuilder_ != null) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    return timestamp_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
                }
            }

            /**
             * <pre>
             * Timestamp
             * </pre>
             * <p>
             * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampFieldBuilder() {
                if (timestampBuilder_ == null) {
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getTimestamp(),
                            getParentForChildren(),
                            isClean());
                    timestamp_ = null;
                }
                return timestampBuilder_;
            }

            /**
             * <pre>
             * Milliseconds from Band
             * </pre>
             * <p>
             * <code>optional uint32 millis = 2;</code>
             */
            public int getMillis() {
                return millis_;
            }

            /**
             * <pre>
             * Milliseconds from Band
             * </pre>
             * <p>
             * <code>optional uint32 millis = 2;</code>
             */
            public Builder setMillis(int value) {

                millis_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Milliseconds from Band
             * </pre>
             *
             * <code>optional uint32 millis = 2;</code>
             */
            public Builder clearMillis() {

                millis_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate in BPM               // Range: 30 - 120
             * </pre>
             * <p>
             * <code>optional uint32 hr_bpm = 3;</code>
             */
            public int getHrBpm() {
                return hrBpm_;
            }

            /**
             * <pre>
             * Heart Rate in BPM               // Range: 30 - 120
             * </pre>
             * <p>
             * <code>optional uint32 hr_bpm = 3;</code>
             */
            public Builder setHrBpm(int value) {

                hrBpm_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate in BPM               // Range: 30 - 120
             * </pre>
             * <p>
             * <code>optional uint32 hr_bpm = 3;</code>
             */
            public Builder clearHrBpm() {

                hrBpm_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate Signal Quality Index // Range: 0-20 &amp; 254-255
             * </pre>
             * <p>
             * <code>optional uint32 hr_sqi = 4;</code>
             */
            public int getHrSqi() {
                return hrSqi_;
            }

            /**
             * <pre>
             * Heart Rate Signal Quality Index // Range: 0-20 &amp; 254-255
             * </pre>
             * <p>
             * <code>optional uint32 hr_sqi = 4;</code>
             */
            public Builder setHrSqi(int value) {

                hrSqi_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Heart Rate Signal Quality Index // Range: 0-20 &amp; 254-255
             * </pre>
             * <p>
             * <code>optional uint32 hr_sqi = 4;</code>
             */
            public Builder clearHrSqi() {

                hrSqi_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration x-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_x = 5;</code>
             */
            public int getAccelX() {
                return accelX_;
            }

            /**
             * <pre>
             * Acceleration x-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_x = 5;</code>
             */
            public Builder setAccelX(int value) {

                accelX_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration x-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_x = 5;</code>
             */
            public Builder clearAccelX() {

                accelX_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration y-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_y = 6;</code>
             */
            public int getAccelY() {
                return accelY_;
            }

            /**
             * <pre>
             * Acceleration y-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_y = 6;</code>
             */
            public Builder setAccelY(int value) {

                accelY_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration y-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_y = 6;</code>
             */
            public Builder clearAccelY() {

                accelY_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration z-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_z = 7;</code>
             */
            public int getAccelZ() {
                return accelZ_;
            }

            /**
             * <pre>
             * Acceleration z-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_z = 7;</code>
             */
            public Builder setAccelZ(int value) {

                accelZ_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Acceleration z-axis // Range: -2048 - +2047
             * </pre>
             * <p>
             * <code>optional sint32 accel_z = 7;</code>
             */
            public Builder clearAccelZ() {

                accelZ_ = 0;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * UTC time offset in seconds      // Value: positive/negative when West/East of UTC, respectively
             * </pre>
             * <p>
             * <code>optional sint32 utc_offset = 8;</code>
             */
            public int getUtcOffset() {
                return utcOffset_;
            }

            /**
             * <pre>
             * UTC time offset in seconds      // Value: positive/negative when West/East of UTC, respectively
             * </pre>
             * <p>
             * <code>optional sint32 utc_offset = 8;</code>
             */
            public Builder setUtcOffset(int value) {

                utcOffset_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * UTC time offset in seconds      // Value: positive/negative when West/East of UTC, respectively
             * </pre>
             * <p>
             * <code>optional sint32 utc_offset = 8;</code>
             */
            public Builder clearUtcOffset() {

                utcOffset_ = 0;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:BandTelemetry)
        }

    }

    /**
     * <pre>
     * Band Rollover [device/hub/SN_HUB/band/rollover]
     *    Rollover report from band.
     *    - published every rollover state change
     * </pre>
     * <p>
     * Protobuf type {@code BandRollover}
     */
    public static final class BandRollover extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:BandRollover)
      BandRolloverOrBuilder {
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    public static final int ORIENTATION_FIELD_NUMBER = 2;
    public static final int DIRECTION_FIELD_NUMBER = 3;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:BandRollover)
    private static final BandRollover DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<BandRollover>
        PARSER = new com.google.protobuf.AbstractParser<BandRollover>() {
      public BandRollover parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BandRollover(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new BandRollover();
    }

    private com.google.protobuf.Timestamp timestamp_;
    private int orientation_;
    private int direction_;
    private byte memoizedIsInitialized = -1;
    // Use BandRollover.newBuilder() to construct.
    private BandRollover(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BandRollover() {
      orientation_ = 0;
      direction_ = 0;
    }

        private BandRollover(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (timestamp_ != null) {
                                subBuilder = timestamp_.toBuilder();
                            }
                            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timestamp_);
                                timestamp_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            orientation_ = rawValue;
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();

                            direction_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandRollover_descriptor;
        }

        public static BandRollover parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandRollover parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandRollover parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BandRollover parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BandRollover parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandRollover parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandRollover parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static BandRollover parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static BandRollover parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BandRollover parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(BandRollover prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static BandRollover getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<BandRollover> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandRollover_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            BandRollover.class, Builder.class);
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            return getTimestamp();
        }

        /**
         * <pre>
         * Orientation
         * </pre>
         *
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
         */
        public int getOrientationValue() {
            return orientation_;
        }

        /**
         * <pre>
         * Orientation
         * </pre>
         *
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
         */
        public Orientation.Orientations getOrientation() {
            Orientation.Orientations result = Orientation.Orientations.valueOf(orientation_);
            return result == null ? Orientation.Orientations.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * Direction
         * </pre>
         * <p>
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        public int getDirectionValue() {
            return direction_;
        }

        /**
         * <pre>
         * Direction
         * </pre>
         *
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        public Direction.Directions getDirection() {
            Direction.Directions result = Direction.Directions.valueOf(direction_);
            return result == null ? Direction.Directions.UNRECOGNIZED : result;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (timestamp_ != null) {
                output.writeMessage(1, getTimestamp());
            }
            if (orientation_ != Orientation.Orientations.UNKNOWN.getNumber()) {
                output.writeEnum(2, orientation_);
            }
            if (direction_ != Direction.Directions.UNKNOWN.getNumber()) {
                output.writeEnum(3, direction_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timestamp_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimestamp());
            }
            if (orientation_ != Orientation.Orientations.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, orientation_);
            }
            if (direction_ != Direction.Directions.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, direction_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BandRollover)) {
                return super.equals(obj);
            }
            BandRollover other = (BandRollover) obj;

            boolean result = true;
            result = result && (hasTimestamp() == other.hasTimestamp());
            if (hasTimestamp()) {
                result = result && getTimestamp()
                        .equals(other.getTimestamp());
            }
            result = result && orientation_ == other.orientation_;
            result = result && direction_ == other.direction_;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasTimestamp()) {
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + getTimestamp().hashCode();
            }
            hash = (37 * hash) + ORIENTATION_FIELD_NUMBER;
            hash = (53 * hash) + orientation_;
            hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
            hash = (53 * hash) + direction_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BandRollover> getParserForType() {
            return PARSER;
        }

    public BandRollover getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

        public interface DirectionOrBuilder extends
                // @@protoc_insertion_point(interface_extends:BandRollover.Direction)
                com.google.protobuf.MessageOrBuilder {
        }

        public interface OrientationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:BandRollover.Orientation)
        com.google.protobuf.MessageOrBuilder {
        }

        /**
         * Protobuf type {@code BandRollover.Direction}
         */
        public  static final class Direction extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:BandRollover.Direction)
        DirectionOrBuilder {
      private static final long serialVersionUID = 0L;
      // @@protoc_insertion_point(class_scope:BandRollover.Direction)
      private static final Direction DEFAULT_INSTANCE;
      private static final com.google.protobuf.Parser<Direction>
          PARSER = new com.google.protobuf.AbstractParser<Direction>() {
        public Direction parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Direction(input, extensionRegistry);
        }
      };

            static {
                DEFAULT_INSTANCE = new Direction();
            }

            private byte memoizedIsInitialized = -1;

            // Use Direction.newBuilder() to construct.
            private Direction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }

            private Direction() {
            }

            private Direction(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!input.skipField(tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_BandRollover_Direction_descriptor;
            }

            public static Direction parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static Direction parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static Direction parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static Direction parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static Direction parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static Direction parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Direction parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
      }

      public static Direction parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

            public static Direction parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static Direction parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Direction prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public static Direction getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static com.google.protobuf.Parser<Direction> parser() {
                return PARSER;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_BandRollover_Direction_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Direction.class, Builder.class);
            }

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                memoizedSize = size;
                return size;
            }

            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof Direction)) {
                    return super.equals(obj);
                }
                Direction other = (Direction) obj;

                boolean result = true;
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptorForType().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                    BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            @Override
            public com.google.protobuf.Parser<Direction> getParserForType() {
                return PARSER;
            }

            public Direction getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

            /**
             * Protobuf enum {@code BandRollover.Direction.Directions}
             */
            public enum Directions
                    implements com.google.protobuf.ProtocolMessageEnum {
                /**
                 * <code>UNKNOWN = 0;</code>
                 */
                UNKNOWN(0),
                /**
                 * <code>FORWARD = 1;</code>
                 */
                FORWARD(1),
                /**
                 * <code>BACKWARD = 2;</code>
                 */
                BACKWARD(2),
                /**
                 * <code>LEFT = 3;</code>
                 */
                LEFT(3),
                /**
                 * <code>RIGHT = 4;</code>
                 */
                RIGHT(4),
                UNRECOGNIZED(-1),;

                /**
                 * <code>UNKNOWN = 0;</code>
                 */
                public static final int UNKNOWN_VALUE = 0;
                /**
                 * <code>FORWARD = 1;</code>
                 */
                public static final int FORWARD_VALUE = 1;
        /**
         * <code>BACKWARD = 2;</code>
         */
        public static final int BACKWARD_VALUE = 2;
                /**
                 * <code>LEFT = 3;</code>
                 */
                public static final int LEFT_VALUE = 3;
                /**
                 * <code>RIGHT = 4;</code>
                 */
                public static final int RIGHT_VALUE = 4;
                private static final com.google.protobuf.Internal.EnumLiteMap<
                        Directions> internalValueMap =
                        new com.google.protobuf.Internal.EnumLiteMap<Directions>() {
                            public Directions findValueByNumber(int number) {
                                return Directions.forNumber(number);
                            }
                        };
                private static final Directions[] VALUES = values();
                private final int value;

                private Directions(int value) {
                    this.value = value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @Deprecated
                public static Directions valueOf(int value) {
                    return forNumber(value);
                }

                public static Directions forNumber(int value) {
                    switch (value) {
                        case 0:
                            return UNKNOWN;
                        case 1:
                            return FORWARD;
                        case 2:
                            return BACKWARD;
                        case 3:
                            return LEFT;
                        case 4:
                            return RIGHT;
                        default:
                            return null;
                    }
                }

                public static com.google.protobuf.Internal.EnumLiteMap<Directions>
                internalGetValueMap() {
                    return internalValueMap;
                }

                public static final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptor() {
                    return Direction.getDescriptor().getEnumTypes().get(0);
                }

                public static Directions valueOf(
                        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                    if (desc.getType() != getDescriptor()) {
                        throw new IllegalArgumentException(
                                "EnumValueDescriptor is not for this type.");
                    }
                    if (desc.getIndex() == -1) {
                        return UNRECOGNIZED;
                    }
                    return VALUES[desc.getIndex()];
                }

                public final int getNumber() {
                    if (this == UNRECOGNIZED) {
                        throw new IllegalArgumentException(
                                "Can't get the number of an unknown enum value.");
                    }
                    return value;
                }

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        // @@protoc_insertion_point(enum_scope:BandRollover.Direction.Directions)
            }

            /**
             * Protobuf type {@code BandRollover.Direction}
             */
            public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:BandRollover.Direction)
                    DirectionOrBuilder {
                // Construct using Hub.BandRollover.Direction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return Hub.internal_static_BandRollover_Direction_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return Hub.internal_static_BandRollover_Direction_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    Direction.class, Builder.class);
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }

                public Builder clear() {
                    super.clear();
                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return Hub.internal_static_BandRollover_Direction_descriptor;
                }

                public Direction getDefaultInstanceForType() {
                    return Direction.getDefaultInstance();
                }

                public Direction build() {
                    Direction result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public Direction buildPartial() {
                    Direction result = new Direction(this);
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.setField(field, value);
                }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }

                public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof Direction) {
                        return mergeFrom((Direction) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(Direction other) {
                    if (other == Direction.getDefaultInstance()) return this;
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    Direction parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (Direction) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:BandRollover.Direction)
      }

    }

    /**
     * Protobuf type {@code BandRollover.Orientation}
     */
    public  static final class Orientation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:BandRollover.Orientation)
        OrientationOrBuilder {
      private static final long serialVersionUID = 0L;
      // @@protoc_insertion_point(class_scope:BandRollover.Orientation)
      private static final Orientation DEFAULT_INSTANCE;
      private static final com.google.protobuf.Parser<Orientation>
          PARSER = new com.google.protobuf.AbstractParser<Orientation>() {
        public Orientation parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Orientation(input, extensionRegistry);
        }
      };

        static {
            DEFAULT_INSTANCE = new Orientation();
        }

        private byte memoizedIsInitialized = -1;

        // Use Orientation.newBuilder() to construct.
        private Orientation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Orientation() {
        }

        private Orientation(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandRollover_Orientation_descriptor;
        }

        public static Orientation parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Orientation parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Orientation parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Orientation parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Orientation parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Orientation parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Orientation parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Orientation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Orientation parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Orientation parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Orientation prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static Orientation getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Orientation> parser() {
            return PARSER;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandRollover_Orientation_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Orientation.class, Builder.class);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
        }

        public int getSerializedSize() {
            int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
         return true;
        }
        if (!(obj instanceof Orientation)) {
          return super.equals(obj);
        }
        Orientation other = (Orientation) obj;

        boolean result = true;
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public Builder newBuilderForType() {
          return newBuilder();
      }

        public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
      }

        @Override
        public com.google.protobuf.Parser<Orientation> getParserForType() {
            return PARSER;
        }

        public Orientation getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code BandRollover.Orientation.Orientations}
         */
        public enum Orientations
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <code>BACK = 1;</code>
             */
            BACK(1),
            /**
             * <code>STOMACH = 2;</code>
             */
            STOMACH(2),
            UNRECOGNIZED(-1),;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <code>BACK = 1;</code>
             */
            public static final int BACK_VALUE = 1;
            /**
             * <code>STOMACH = 2;</code>
             */
            public static final int STOMACH_VALUE = 2;
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Orientations> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Orientations>() {
                        public Orientations findValueByNumber(int number) {
                            return Orientations.forNumber(number);
                        }
                    };
            private static final Orientations[] VALUES = values();
            private final int value;

            private Orientations(int value) {
                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static Orientations valueOf(int value) {
                return forNumber(value);
            }

            public static Orientations forNumber(int value) {
                switch (value) {
                    case 0: return UNKNOWN;
                    case 1: return BACK;
                    case 2: return STOMACH;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Orientations>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return Orientation.getDescriptor().getEnumTypes().get(0);
            }

            public static Orientations valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:BandRollover.Orientation.Orientations)
        }

        /**
         * Protobuf type {@code BandRollover.Orientation}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:BandRollover.Orientation)
                OrientationOrBuilder {
            // Construct using Hub.BandRollover.Orientation.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

            private Builder(
                    BuilderParent parent) {
                super(parent);
          maybeForceBuilderInitialization();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Hub.internal_static_BandRollover_Orientation_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Hub.internal_static_BandRollover_Orientation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Orientation.class, Builder.class);
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Hub.internal_static_BandRollover_Orientation_descriptor;
        }

        public Orientation getDefaultInstanceForType() {
            return Orientation.getDefaultInstance();
        }

            public Orientation build() {
          Orientation result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Orientation buildPartial() {
                Orientation result = new Orientation(this);
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
            return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }

            public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Orientation) {
            return mergeFrom((Orientation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

            public Builder mergeFrom(Orientation other) {
                if (other == Orientation.getDefaultInstance()) return this;
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Orientation parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Orientation) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


        // @@protoc_insertion_point(builder_scope:BandRollover.Orientation)
      }

    }

    /**
     * <pre>
     * Band Rollover [device/hub/SN_HUB/band/rollover]
     *    Rollover report from band.
     *    - published every rollover state change
     * </pre>
     *
     * Protobuf type {@code BandRollover}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BandRollover)
            BandRolloverOrBuilder {
        private com.google.protobuf.Timestamp timestamp_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
        private int orientation_ = 0;
        private int direction_ = 0;

        // Construct using Hub.BandRollover.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandRollover_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandRollover_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BandRollover.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        if (timestampBuilder_ == null) {
          timestamp_ = null;
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }
        orientation_ = 0;

        direction_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hub.internal_static_BandRollover_descriptor;
      }

      public BandRollover getDefaultInstanceForType() {
        return BandRollover.getDefaultInstance();
      }

      public BandRollover build() {
          BandRollover result = buildPartial();
        if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
        }
          return result;
      }

      public BandRollover buildPartial() {
        BandRollover result = new BandRollover(this);
          if (timestampBuilder_ == null) {
              result.timestamp_ = timestamp_;
          } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        result.orientation_ = orientation_;
        result.direction_ = direction_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }

        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }

        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof BandRollover) {
                return mergeFrom((BandRollover) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(BandRollover other) {
            if (other == BandRollover.getDefaultInstance()) return this;
            if (other.hasTimestamp()) {
                mergeTimestamp(other.getTimestamp());
            }
            if (other.orientation_ != 0) {
                setOrientationValue(other.getOrientationValue());
            }
            if (other.direction_ != 0) {
                setDirectionValue(other.getDirectionValue());
            }
            onChanged();
            return this;
        }

        public final boolean isInitialized() {
            return true;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            BandRollover parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (BandRollover) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestampBuilder_ != null || timestamp_ != null;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp getTimestamp() {
            if (timestampBuilder_ == null) {
                return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            } else {
                return timestampBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder setTimestamp(
                com.google.protobuf.Timestamp.Builder builderForValue) {
            if (timestampBuilder_ == null) {
                timestamp_ = builderForValue.build();
                onChanged();
            } else {
                timestampBuilder_.setMessage(builderForValue.build());
            }

            return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
              timestamp_ = value;
          }
            onChanged();
        } else {
            timestampBuilder_.mergeFrom(value);
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
            return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
                  com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
      getTimestampFieldBuilder() {
          if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      /**
       * <pre>
       * Orientation
       * </pre>
       *
       * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
       */
      public int getOrientationValue() {
        return orientation_;
      }

      /**
       * <pre>
       * Orientation
       * </pre>
       *
       * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
       */
      public Builder setOrientationValue(int value) {
        orientation_ = value;
        onChanged();
          return this;
      }

        /**
         * <pre>
         * Orientation
         * </pre>
         * <p>
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
         */
        public Orientation.Orientations getOrientation() {
            Orientation.Orientations result = Orientation.Orientations.valueOf(orientation_);
            return result == null ? Orientation.Orientations.UNRECOGNIZED : result;
      }

      /**
       * <pre>
       * Orientation
       * </pre>
       *
       * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
       */
      public Builder setOrientation(Orientation.Orientations value) {
          if (value == null) {
              throw new NullPointerException();
          }

          orientation_ = value.getNumber();
          onChanged();
          return this;
      }

        /**
         * <pre>
         * Orientation
         * </pre>
         *
         * <code>optional .BandRollover.Orientation.Orientations orientation = 2;</code>
       */
      public Builder clearOrientation() {

        orientation_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Direction
       * </pre>
       *
       * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
       */
      public int getDirectionValue() {
          return direction_;
      }

        /**
         * <pre>
         * Direction
         * </pre>
         * <p>
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        public Builder setDirectionValue(int value) {
            direction_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
       * Direction
       * </pre>
       *
       * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
       */
        public Direction.Directions getDirection() {
            Direction.Directions result = Direction.Directions.valueOf(direction_);
            return result == null ? Direction.Directions.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * Direction
         * </pre>
         *
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        public Builder setDirection(Direction.Directions value) {
            if (value == null) {
                throw new NullPointerException();
            }

            direction_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Direction
         * </pre>
         *
         * <code>optional .BandRollover.Direction.Directions direction = 3;</code>
         */
        public Builder clearDirection() {

            direction_ = 0;
            onChanged();
            return this;
        }

        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }

        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }


      // @@protoc_insertion_point(builder_scope:BandRollover)
    }

  }

  /**
   * <pre>
   * Band Presence Detection [device/hub/SN_HUB/band/presence] QoS: 2
   *    Presence detection report from band. (always publish as retained=True)
   *    - published every presence detection state change
   * </pre>
   *
   * Protobuf type {@code BandPresence}
   */
  public  static final class BandPresence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BandPresence)
      BandPresenceOrBuilder {
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    public static final int PRESENCE_DETECTED_FIELD_NUMBER = 2;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:BandPresence)
    private static final BandPresence DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<BandPresence>
        PARSER = new com.google.protobuf.AbstractParser<BandPresence>() {
      public BandPresence parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BandPresence(input, extensionRegistry);
      }
    };

      static {
          DEFAULT_INSTANCE = new BandPresence();
    }

    private com.google.protobuf.Timestamp timestamp_;
    private boolean presenceDetected_;
    private byte memoizedIsInitialized = -1;
    // Use BandPresence.newBuilder() to construct.
    private BandPresence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BandPresence() {
      presenceDetected_ = false;
    }

    private BandPresence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    default: {
                        if (!input.skipField(tag)) {
                            done = true;
                        }
                        break;
                    }
                    case 10: {
                        com.google.protobuf.Timestamp.Builder subBuilder = null;
                        if (timestamp_ != null) {
                            subBuilder = timestamp_.toBuilder();
                        }
                        timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(timestamp_);
                            timestamp_ = subBuilder.buildPartial();
                        }

                        break;
                    }
                    case 16: {

                        presenceDetected_ = input.readBool();
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            makeExtensionsImmutable();
        }
    }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
          return Hub.internal_static_BandPresence_descriptor;
      }

      public static BandPresence parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static BandPresence parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static BandPresence parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static BandPresence parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static BandPresence parseFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static BandPresence parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static BandPresence parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input);
      }

      public static BandPresence parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

    public static BandPresence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static BandPresence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

      public static Builder newBuilder(BandPresence prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static BandPresence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<BandPresence> parser() {
      return PARSER;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hub.internal_static_BandPresence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BandPresence.class, Builder.class);
    }

    /**
     * <pre>
     * Timestamp
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }

    /**
     * <pre>
     * Timestamp
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    /**
     * <pre>
     * Timestamp
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return getTimestamp();
    }

    /**
     * <pre>
     * Presence Detected // Value: True / False
     * </pre>
     *
     * <code>optional bool presence_detected = 2;</code>
     */
    public boolean getPresenceDetected() {
      return presenceDetected_;
    }

      public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (timestamp_ != null) {
            output.writeMessage(1, getTimestamp());
        }
        if (presenceDetected_ != false) {
            output.writeBool(2, presenceDetected_);
        }
    }

      public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (timestamp_ != null) {
              size += com.google.protobuf.CodedOutputStream
                      .computeMessageSize(1, getTimestamp());
          }
          if (presenceDetected_ != false) {
              size += com.google.protobuf.CodedOutputStream
                      .computeBoolSize(2, presenceDetected_);
          }
          memoizedSize = size;
          return size;
      }

      @Override
      public boolean equals(final Object obj) {
          if (obj == this) {
              return true;
          }
          if (!(obj instanceof BandPresence)) {
              return super.equals(obj);
          }
          BandPresence other = (BandPresence) obj;

          boolean result = true;
          result = result && (hasTimestamp() == other.hasTimestamp());
          if (hasTimestamp()) {
              result = result && getTimestamp()
                      .equals(other.getTimestamp());
          }
          result = result && (getPresenceDetected()
                  == other.getPresenceDetected());
          return result;
      }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
          return memoizedHashCode;
      }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        if (hasTimestamp()) {
            hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + getTimestamp().hashCode();
        }
        hash = (37 * hash) + PRESENCE_DETECTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPresenceDetected());
      hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

      public Builder newBuilderForType() { return newBuilder();
      }

      public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
                  ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
      }

      @Override
      public com.google.protobuf.Parser<BandPresence> getParserForType() {
          return PARSER;
      }

      public BandPresence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * Band Presence Detection [device/hub/SN_HUB/band/presence] QoS: 2
     *    Presence detection report from band. (always publish as retained=True)
     *    - published every presence detection state change
     * </pre>
     *
     * Protobuf type {@code BandPresence}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:BandPresence)
            BandPresenceOrBuilder {
        private com.google.protobuf.Timestamp timestamp_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
        private boolean presenceDetected_;

        // Construct using Hub.BandPresence.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BandPresence_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Hub.internal_static_BandPresence_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            BandPresence.class, Builder.class);
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        public Builder clear() {
            super.clear();
            if (timestampBuilder_ == null) {
                timestamp_ = null;
            } else {
                timestamp_ = null;
                timestampBuilder_ = null;
            }
            presenceDetected_ = false;

            return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return Hub.internal_static_BandPresence_descriptor;
        }

        public BandPresence getDefaultInstanceForType() {
            return BandPresence.getDefaultInstance();
        }

        public BandPresence build() {
            BandPresence result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        public BandPresence buildPartial() {
            BandPresence result = new BandPresence(this);
            if (timestampBuilder_ == null) {
                result.timestamp_ = timestamp_;
            } else {
                result.timestamp_ = timestampBuilder_.build();
            }
            result.presenceDetected_ = presenceDetected_;
            onBuilt();
            return result;
        }

        public Builder clone() {
            return (Builder) super.clone();
        }

        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return (Builder) super.setField(field, value);
        }

        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }

        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }

        public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
        }

        public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BandPresence) {
          return mergeFrom((BandPresence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BandPresence other) {
        if (other == BandPresence.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
          if (other.getPresenceDetected() != false) {
              setPresenceDetected(other.getPresenceDetected());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          BandPresence parsedMessage = null;
          try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (BandPresence) e.getUnfinishedMessage();
              throw e.unwrapIOException();
          } finally {
              if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
              }
          }
          return this;
      }

        /**
         * <pre>
         * Timestamp
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
            return timestampBuilder_ != null || timestamp_ != null;
        }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
            return timestampBuilder_.getMessage();
        }
      }

        /**
         * <pre>
       * Timestamp
       * </pre>
         *
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder setTimestamp(
                com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
          onChanged();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }

      /**
       * <pre>
       * Timestamp
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
          if (timestampBuilder_ == null) {
              if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
              } else {
                  timestamp_ = value;
              }
              onChanged();
          } else {
              timestampBuilder_.mergeFrom(value);
          }

          return this;
      }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
            if (timestampBuilder_ == null) {
                timestamp_ = null;
                onChanged();
            } else {
                timestamp_ = null;
                timestampBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {

            onChanged();
            return getTimestampFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
            if (timestampBuilder_ != null) {
                return timestampBuilder_.getMessageOrBuilder();
            } else {
                return timestamp_ == null ?
                        com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
            }
        }

        /**
         * <pre>
         * Timestamp
         * </pre>
         * <p>
         * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
        getTimestampFieldBuilder() {
            if (timestampBuilder_ == null) {
                timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                        getTimestamp(),
                        getParentForChildren(),
                        isClean());
                timestamp_ = null;
            }
            return timestampBuilder_;
        }

        /**
         * <pre>
         * Presence Detected // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool presence_detected = 2;</code>
         */
        public boolean getPresenceDetected() {
            return presenceDetected_;
        }

        /**
         * <pre>
         * Presence Detected // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool presence_detected = 2;</code>
         */
        public Builder setPresenceDetected(boolean value) {

            presenceDetected_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Presence Detected // Value: True / False
         * </pre>
         * <p>
         * <code>optional bool presence_detected = 2;</code>
         */
        public Builder clearPresenceDetected() {

            presenceDetected_ = false;
            onChanged();
            return this;
        }

        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }

        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return this;
        }


        // @@protoc_insertion_point(builder_scope:BandPresence)
    }

  }

    /**
     * Protobuf type {@code BLEConnection}
     */
    public static final class BLEConnection extends
            com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BLEConnection)
      BLEConnectionOrBuilder {
    public static final int RSSI_FIELD_NUMBER = 1;
        public static final int ROLE_FIELD_NUMBER = 2;
    public static final int ADDRESS_FIELD_NUMBER = 3;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:BLEConnection)
        private static final BLEConnection DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<BLEConnection>
                PARSER = new com.google.protobuf.AbstractParser<BLEConnection>() {
            public BLEConnection parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BLEConnection(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new BLEConnection();
    }

    private int rssi_;
    private int role_;
    private com.google.protobuf.ByteString address_;
    private byte memoizedIsInitialized = -1;
    // Use BLEConnection.newBuilder() to construct.
    private BLEConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

        private BLEConnection() {
            rssi_ = 0;
            role_ = 0;
            address_ = com.google.protobuf.ByteString.EMPTY;
        }

        private BLEConnection(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            rssi_ = input.readSInt32();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            role_ = rawValue;
                            break;
                        }
                        case 26: {

                            address_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_BLEConnection_descriptor;
        }

        public static BLEConnection parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BLEConnection parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BLEConnection parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static BLEConnection parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static BLEConnection parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static BLEConnection parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static BLEConnection parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static BLEConnection parseDelimitedFrom(
            java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static BLEConnection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static BLEConnection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(BLEConnection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static BLEConnection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<BLEConnection> parser() {
        return PARSER;
    }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return Hub.internal_static_BLEConnection_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
              BLEConnection.class, Builder.class);
    }

    /**
     * <pre>
     * BLE Signal (linear) // Range: [0, -127], suggested to divide bucket in thirds
     * </pre>
     *
     * <code>optional sint32 rssi = 1;</code>
     */
    public int getRssi() {
      return rssi_;
    }

        /**
         * <pre>
         * BLE Role            // See BLERoles enum
     * </pre>
     *
     * <code>optional .BLEConnection.BLERoles role = 2;</code>
     */
    public int getRoleValue() {
      return role_;
    }

    /**
     * <pre>
     * BLE Role            // See BLERoles enum
     * </pre>
     *
     * <code>optional .BLEConnection.BLERoles role = 2;</code>
     */
    public BLERoles getRole() {
      BLERoles result = BLERoles.valueOf(role_);
        return result == null ? BLERoles.UNRECOGNIZED : result;
    }

        /**
         * <pre>
         * BLE MAC address     // Value: six octets
     * </pre>
     *
     * <code>optional bytes address = 3;</code>
     */
    public com.google.protobuf.ByteString getAddress() {
      return address_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (rssi_ != 0) {
        output.writeSInt32(1, rssi_);
      }
      if (role_ != BLERoles.UNKNOWN.getNumber()) {
        output.writeEnum(2, role_);
      }
      if (!address_.isEmpty()) {
        output.writeBytes(3, address_);
      }
    }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (rssi_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(1, rssi_);
            }
            if (role_ != BLERoles.UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, role_);
            }
            if (!address_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, address_);
            }
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof BLEConnection)) {
                return super.equals(obj);
            }
            BLEConnection other = (BLEConnection) obj;

            boolean result = true;
            result = result && (getRssi()
                    == other.getRssi());
            result = result && role_ == other.role_;
            result = result && getAddress()
                    .equals(other.getAddress());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + RSSI_FIELD_NUMBER;
            hash = (53 * hash) + getRssi();
            hash = (37 * hash) + ROLE_FIELD_NUMBER;
            hash = (53 * hash) + role_;
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @Override
        public com.google.protobuf.Parser<BLEConnection> getParserForType() {
            return PARSER;
        }

        public BLEConnection getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf enum {@code BLEConnection.BLERoles}
         */
        public enum BLERoles
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <pre>
             * Hub is in BLE Peripheral Mode
             * </pre>
             *
             * <code>SLAVE = 1;</code>
             */
            SLAVE(1),
            /**
             * <pre>
             * Hub is in BLE Central Mode
             * </pre>
             *
             * <code>MASTER = 2;</code>
             */
            MASTER(2),
            UNRECOGNIZED(-1),;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <pre>
             * Hub is in BLE Peripheral Mode
             * </pre>
             *
             * <code>SLAVE = 1;</code>
             */
            public static final int SLAVE_VALUE = 1;
            /**
             * <pre>
             * Hub is in BLE Central Mode
             * </pre>
             *
             * <code>MASTER = 2;</code>
             */
            public static final int MASTER_VALUE = 2;
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    BLERoles> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<BLERoles>() {
                        public BLERoles findValueByNumber(int number) {
                            return BLERoles.forNumber(number);
                        }
                    };
            private static final BLERoles[] VALUES = values();
            private final int value;

            private BLERoles(int value) {
                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static BLERoles valueOf(int value) {
                return forNumber(value);
            }

            public static BLERoles forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return SLAVE;
                    case 2:
                        return MASTER;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<BLERoles>
            internalGetValueMap() {
                return internalValueMap;
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return BLEConnection.getDescriptor().getEnumTypes().get(0);
            }

            public static BLERoles valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            // @@protoc_insertion_point(enum_scope:BLEConnection.BLERoles)
        }

        /**
         * Protobuf type {@code BLEConnection}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:BLEConnection)
                BLEConnectionOrBuilder {
            private int rssi_;
            private int role_ = 0;
            private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;

            // Construct using Hub.BLEConnection.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return Hub.internal_static_BLEConnection_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return Hub.internal_static_BLEConnection_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                BLEConnection.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        rssi_ = 0;

        role_ = 0;

          address_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Hub.internal_static_BLEConnection_descriptor;
      }

      public BLEConnection getDefaultInstanceForType() {
          return BLEConnection.getDefaultInstance();
      }

            public BLEConnection build() {
        BLEConnection result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public BLEConnection buildPartial() {
        BLEConnection result = new BLEConnection(this);
                result.rssi_ = rssi_;
        result.role_ = role_;
        result.address_ = address_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
          return (Builder) super.setField(field, value);
      }

      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BLEConnection) {
          return mergeFrom((BLEConnection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BLEConnection other) {
          if (other == BLEConnection.getDefaultInstance()) return this;
        if (other.getRssi() != 0) {
          setRssi(other.getRssi());
        }
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
          setAddress(other.getAddress());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BLEConnection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (BLEConnection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
            if (parsedMessage != null) {
            mergeFrom(parsedMessage);
            }
        }
          return this;
      }

            /**
             * <pre>
             * BLE Signal (linear) // Range: [0, -127], suggested to divide bucket in thirds
       * </pre>
       *
       * <code>optional sint32 rssi = 1;</code>
       */
      public int getRssi() {
          return rssi_;
      }

      /**
       * <pre>
       * BLE Signal (linear) // Range: [0, -127], suggested to divide bucket in thirds
       * </pre>
       *
       * <code>optional sint32 rssi = 1;</code>
       */
      public Builder setRssi(int value) {

          rssi_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * BLE Signal (linear) // Range: [0, -127], suggested to divide bucket in thirds
       * </pre>
       *
       * <code>optional sint32 rssi = 1;</code>
       */
      public Builder clearRssi() {

        rssi_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * BLE Role            // See BLERoles enum
       * </pre>
       *
       * <code>optional .BLEConnection.BLERoles role = 2;</code>
       */
      public int getRoleValue() {
        return role_;
      }

      /**
       * <pre>
       * BLE Role            // See BLERoles enum
       * </pre>
       *
       * <code>optional .BLEConnection.BLERoles role = 2;</code>
       */
      public Builder setRoleValue(int value) {
          role_ = value;
          onChanged();
          return this;
      }

            /**
             * <pre>
             * BLE Role            // See BLERoles enum
             * </pre>
             *
             * <code>optional .BLEConnection.BLERoles role = 2;</code>
       */
      public BLERoles getRole() {
        BLERoles result = BLERoles.valueOf(role_);
        return result == null ? BLERoles.UNRECOGNIZED : result;
      }

      /**
       * <pre>
       * BLE Role            // See BLERoles enum
       * </pre>
       *
       * <code>optional .BLEConnection.BLERoles role = 2;</code>
       */
      public Builder setRole(BLERoles value) {
          if (value == null) {
              throw new NullPointerException();
        }

        role_ = value.getNumber();
        onChanged();
        return this;
      }

      /**
       * <pre>
       * BLE Role            // See BLERoles enum
       * </pre>
       *
       * <code>optional .BLEConnection.BLERoles role = 2;</code>
       */
      public Builder clearRole() {

          role_ = 0;
          onChanged();
          return this;
      }

            /**
             * <pre>
             * BLE MAC address     // Value: six octets
             * </pre>
             * <p>
             * <code>optional bytes address = 3;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }

            /**
             * <pre>
             * BLE MAC address     // Value: six octets
             * </pre>
             *
             * <code>optional bytes address = 3;</code>
             */
            public Builder setAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * BLE MAC address     // Value: six octets
             * </pre>
             *
             * <code>optional bytes address = 3;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
      }


            // @@protoc_insertion_point(builder_scope:BLEConnection)
    }

  }

  /**
   * Protobuf type {@code WifiConnection}
   */
  public  static final class WifiConnection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:WifiConnection)
      WifiConnectionOrBuilder {
    public static final int CONNECTED_FIELD_NUMBER = 1;
    public static final int SIGNAL_FIELD_NUMBER = 2;
    public static final int SSID_FIELD_NUMBER = 3;
    public static final int BSSID_FIELD_NUMBER = 4;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:WifiConnection)
    private static final WifiConnection DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<WifiConnection>
        PARSER = new com.google.protobuf.AbstractParser<WifiConnection>() {
      public WifiConnection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new WifiConnection(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new WifiConnection();
    }

    private boolean connected_;
      private int signal_;
      private volatile Object ssid_;
      private com.google.protobuf.ByteString bssid_;
    private byte memoizedIsInitialized = -1;
    // Use WifiConnection.newBuilder() to construct.
    private WifiConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }
    private WifiConnection() {
      connected_ = false;
      signal_ = 0;
      ssid_ = "";
        bssid_ = com.google.protobuf.ByteString.EMPTY;
    }

      private WifiConnection(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          int mutable_bitField0_ = 0;
          try {
              boolean done = false;
              while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                      case 0:
                          done = true;
                          break;
                      default: {
                          if (!input.skipField(tag)) {
                              done = true;
                          }
                          break;
                      }
                      case 8: {

                          connected_ = input.readBool();
                          break;
                      }
                      case 16: {

                          signal_ = input.readSInt32();
                          break;
                      }
                      case 26: {
                          String s = input.readStringRequireUtf8();

                          ssid_ = s;
                          break;
                      }
                      case 34: {

                          bssid_ = input.readBytes();
                          break;
                      }
                  }
              }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                      e).setUnfinishedMessage(this);
          } finally {
              makeExtensionsImmutable();
          }
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
          return Hub.internal_static_WifiConnection_descriptor;
      }

      public static WifiConnection parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static WifiConnection parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static WifiConnection parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static WifiConnection parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static WifiConnection parseFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static WifiConnection parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static WifiConnection parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input);
    }

    public static WifiConnection parseDelimitedFrom(
            java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

      public static WifiConnection parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static WifiConnection parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(WifiConnection prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public static WifiConnection getDefaultInstance() {
          return DEFAULT_INSTANCE;
      }

      public static com.google.protobuf.Parser<WifiConnection> parser() {
          return PARSER;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Hub.internal_static_WifiConnection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WifiConnection.class, Builder.class);
    }

    /**
     * <pre>
     * Connected State     // Value: True / False
     * </pre>
     *
     * <code>optional bool connected = 1;</code>
     */
    public boolean getConnected() {
      return connected_;
    }

    /**
     * <pre>
     * Signal Level        // Range: [0, -120] dBm, suggested to divide bucket in thirds
     * </pre>
     *
     * <code>optional sint32 signal = 2;</code>
     */
    public int getSignal() {
      return signal_;
    }

    /**
     * <pre>
     * Wireless Network Name
     * </pre>
     *
     * <code>optional string ssid = 3;</code>
     */
    public String getSsid() {
      Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        ssid_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * Wireless Network Name
     * </pre>
     *
     * <code>optional string ssid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        ssid_ = b;
        return b;
      } else {
          return (com.google.protobuf.ByteString) ref;
      }
    }

      /**
       * <pre>
       * AP MAC              // Value: six octets
       * </pre>
       * <p>
       * <code>optional bytes bssid = 4;</code>
       */
      public com.google.protobuf.ByteString getBssid() {
          return bssid_;
      }

      public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
          if (connected_ != false) {
              output.writeBool(1, connected_);
      }
      if (signal_ != 0) {
        output.writeSInt32(2, signal_);
      }
      if (!getSsidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ssid_);
      }
      if (!bssid_.isEmpty()) {
        output.writeBytes(4, bssid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (connected_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, connected_);
      }
      if (signal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, signal_);
      }
      if (!getSsidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ssid_);
      }
      if (!bssid_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(4, bssid_);
      }
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof WifiConnection)) {
            return super.equals(obj);
        }
        WifiConnection other = (WifiConnection) obj;

        boolean result = true;
        result = result && (getConnected()
                == other.getConnected());
        result = result && (getSignal()
                == other.getSignal());
        result = result && getSsid()
                .equals(other.getSsid());
        result = result && getBssid()
                .equals(other.getBssid());
        return result;
    }

      @Override
      public int hashCode() {
          if (memoizedHashCode != 0) {
              return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          hash = (37 * hash) + CONNECTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                  getConnected());
          hash = (37 * hash) + SIGNAL_FIELD_NUMBER;
          hash = (53 * hash) + getSignal();
          hash = (37 * hash) + SSID_FIELD_NUMBER;
          hash = (53 * hash) + getSsid().hashCode();
          hash = (37 * hash) + BSSID_FIELD_NUMBER;
          hash = (53 * hash) + getBssid().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
      }

      public Builder newBuilderForType() {
          return newBuilder();
      }

      public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
                  ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
      }

      @Override
      public com.google.protobuf.Parser<WifiConnection> getParserForType() {
          return PARSER;
      }

      public WifiConnection getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
      }

      /**
       * Protobuf type {@code WifiConnection}
       */
      public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:WifiConnection)
              WifiConnectionOrBuilder {
          private boolean connected_;
          private int signal_;
          private Object ssid_ = "";
          private com.google.protobuf.ByteString bssid_ = com.google.protobuf.ByteString.EMPTY;

          // Construct using Hub.WifiConnection.newBuilder()
          private Builder() {
              maybeForceBuilderInitialization();
          }

          private Builder(
                  BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
          }

          public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
              return Hub.internal_static_WifiConnection_descriptor;
          }

          protected FieldAccessorTable
          internalGetFieldAccessorTable() {
              return Hub.internal_static_WifiConnection_fieldAccessorTable
                      .ensureFieldAccessorsInitialized(
                              WifiConnection.class, Builder.class);
          }

          private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
          }

          public Builder clear() {
              super.clear();
        connected_ = false;

        signal_ = 0;

        ssid_ = "";

        bssid_ = com.google.protobuf.ByteString.EMPTY;

              return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
              return Hub.internal_static_WifiConnection_descriptor;
          }

          public WifiConnection getDefaultInstanceForType() {
              return WifiConnection.getDefaultInstance();
          }

          public WifiConnection build() {
              WifiConnection result = buildPartial();
              if (!result.isInitialized()) {
                  throw newUninitializedMessageException(result);
              }
              return result;
          }

          public WifiConnection buildPartial() {
              WifiConnection result = new WifiConnection(this);
              result.connected_ = connected_;
              result.signal_ = signal_;
              result.ssid_ = ssid_;
              result.bssid_ = bssid_;
              onBuilt();
              return result;
          }

          public Builder clone() {
              return (Builder) super.clone();
          }

          public Builder setField(
                  com.google.protobuf.Descriptors.FieldDescriptor field,
                  Object value) {
              return (Builder) super.setField(field, value);
          }

          public Builder clearField(
                  com.google.protobuf.Descriptors.FieldDescriptor field) {
              return (Builder) super.clearField(field);
          }

          public Builder clearOneof(
                  com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return (Builder) super.clearOneof(oneof);
          }

          public Builder setRepeatedField(
                  com.google.protobuf.Descriptors.FieldDescriptor field,
                  int index, Object value) {
              return (Builder) super.setRepeatedField(field, index, value);
          }

          public Builder addRepeatedField(
                  com.google.protobuf.Descriptors.FieldDescriptor field,
                  Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof WifiConnection) {
          return mergeFrom((WifiConnection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(WifiConnection other) {
        if (other == WifiConnection.getDefaultInstance()) return this;
        if (other.getConnected() != false) {
          setConnected(other.getConnected());
        }
        if (other.getSignal() != 0) {
          setSignal(other.getSignal());
        }
        if (!other.getSsid().isEmpty()) {
          ssid_ = other.ssid_;
          onChanged();
        }
          if (other.getBssid() != com.google.protobuf.ByteString.EMPTY) {
          setBssid(other.getBssid());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        WifiConnection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (WifiConnection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       * Connected State     // Value: True / False
       * </pre>
       *
       * <code>optional bool connected = 1;</code>
       */
      public boolean getConnected() {
          return connected_;
      }

          /**
           * <pre>
           * Connected State     // Value: True / False
           * </pre>
           * <p>
           * <code>optional bool connected = 1;</code>
           */
          public Builder setConnected(boolean value) {

              connected_ = value;
              onChanged();
              return this;
          }

          /**
           * <pre>
           * Connected State     // Value: True / False
           * </pre>
       *
       * <code>optional bool connected = 1;</code>
       */
      public Builder clearConnected() {

          connected_ = false;
        onChanged();
        return this;
      }

          /**
       * <pre>
       * Signal Level        // Range: [0, -120] dBm, suggested to divide bucket in thirds
           * </pre>
           *
           * <code>optional sint32 signal = 2;</code>
           */
          public int getSignal() {
              return signal_;
          }

          /**
           * <pre>
           * Signal Level        // Range: [0, -120] dBm, suggested to divide bucket in thirds
           * </pre>
           *
           * <code>optional sint32 signal = 2;</code>
           */
          public Builder setSignal(int value) {

              signal_ = value;
              onChanged();
              return this;
          }

          /**
           * <pre>
           * Signal Level        // Range: [0, -120] dBm, suggested to divide bucket in thirds
           * </pre>
           *
           * <code>optional sint32 signal = 2;</code>
           */
          public Builder clearSignal() {

              signal_ = 0;
              onChanged();
              return this;
          }

          /**
           * <pre>
           * Wireless Network Name
           * </pre>
           *
           * <code>optional string ssid = 3;</code>
           */
          public String getSsid() {
              Object ref = ssid_;
              if (!(ref instanceof String)) {
                  com.google.protobuf.ByteString bs =
                          (com.google.protobuf.ByteString) ref;
                  String s = bs.toStringUtf8();
                  ssid_ = s;
                  return s;
              } else {
                  return (String) ref;
              }
          }

          /**
           * <pre>
           * Wireless Network Name
           * </pre>
           * <p>
           * <code>optional string ssid = 3;</code>
           */
          public Builder setSsid(
                  String value) {
              if (value == null) {
                  throw new NullPointerException();
              }

        ssid_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Wireless Network Name
       * </pre>
       *
       * <code>optional string ssid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
          Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                      (String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

          /**
           * <pre>
           * Wireless Network Name
           * </pre>
           * <p>
           * <code>optional string ssid = 3;</code>
           */
          public Builder setSsidBytes(
                  com.google.protobuf.ByteString value) {
              if (value == null) {
                  throw new NullPointerException();
              }
              checkByteStringIsUtf8(value);

              ssid_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * Wireless Network Name
       * </pre>
       *
       * <code>optional string ssid = 3;</code>
       */
      public Builder clearSsid() {

          ssid_ = getDefaultInstance().getSsid();
          onChanged();
          return this;
      }

          /**
           * <pre>
           * AP MAC              // Value: six octets
           * </pre>
           *
           * <code>optional bytes bssid = 4;</code>
           */
          public com.google.protobuf.ByteString getBssid() {
              return bssid_;
          }

          /**
           * <pre>
           * AP MAC              // Value: six octets
           * </pre>
           *
           * <code>optional bytes bssid = 4;</code>
           */
          public Builder setBssid(com.google.protobuf.ByteString value) {
              if (value == null) {
                  throw new NullPointerException();
              }

              bssid_ = value;
              onChanged();
              return this;
          }
      /**
       * <pre>
       * AP MAC              // Value: six octets
       * </pre>
       *
       * <code>optional bytes bssid = 4;</code>
       */
      public Builder clearBssid() {

        bssid_ = getDefaultInstance().getBssid();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:WifiConnection)
    }

  }

  /**
   * Protobuf type {@code LEDMode}
   */
  public  static final class LEDMode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LEDMode)
      LEDModeOrBuilder {
    private static final long serialVersionUID = 0L;
      // @@protoc_insertion_point(class_scope:LEDMode)
      private static final LEDMode DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<LEDMode>
            PARSER = new com.google.protobuf.AbstractParser<LEDMode>() {
        public LEDMode parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new LEDMode(input, extensionRegistry);
        }
    };

      static {
          DEFAULT_INSTANCE = new LEDMode();
      }

      private byte memoizedIsInitialized = -1;

      // Use LEDMode.newBuilder() to construct.
      private LEDMode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
      }

      private LEDMode() {
      }

      private LEDMode(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          try {
              boolean done = false;
              while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                      case 0:
                          done = true;
                          break;
                      default: {
                          if (!input.skipField(tag)) {
                              done = true;
                          }
                          break;
                      }
                  }
              }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                      e).setUnfinishedMessage(this);
          } finally {
              makeExtensionsImmutable();
          }
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
          return Hub.internal_static_LEDMode_descriptor;
      }

      public static LEDMode parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static LEDMode parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static LEDMode parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static LEDMode parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static LEDMode parseFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static LEDMode parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static LEDMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
      }

      public static LEDMode parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static LEDMode parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static LEDMode parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(LEDMode prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public static LEDMode getDefaultInstance() {
          return DEFAULT_INSTANCE;
      }

      public static com.google.protobuf.Parser<LEDMode> parser() {
          return PARSER;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
          return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
          return Hub.internal_static_LEDMode_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                          LEDMode.class, Builder.class);
      }

      public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
      }

      public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          memoizedSize = size;
          return size;
      }

      @Override
      public boolean equals(final Object obj) {
          if (obj == this) {
              return true;
          }
          if (!(obj instanceof LEDMode)) {
              return super.equals(obj);
          }
          LEDMode other = (LEDMode) obj;

          boolean result = true;
          return result;
      }

      @Override
      public int hashCode() {
          if (memoizedHashCode != 0) {
              return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
      }

      public Builder newBuilderForType() {
          return newBuilder();
      }

      public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
                  ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
      }

      @Override
      public com.google.protobuf.Parser<LEDMode> getParserForType() {
      return PARSER;
    }

    public LEDMode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

      /**
       * Protobuf enum {@code LEDMode.LEDModes}
       */
      public enum LEDModes
              implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>UNKNOWN = 0;</code>
           */
          UNKNOWN(0),
          /**
           * <code>OFF = 1;</code>
           */
          OFF(1),
          /**
           * <code>BREATHE = 2;</code>
           */
          BREATHE(2),
          /**
           * <code>FADE_ON = 3;</code>
           */
          FADE_ON(3),
          /**
           * <code>FADE_OFF = 4;</code>
           */
          FADE_OFF(4),
          /**
           * <code>NORMAL_BLINK = 5;</code>
           */
          NORMAL_BLINK(5),
          /**
           * <code>FAST_BLINK = 6;</code>
           */
          FAST_BLINK(6),
          /**
           * <code>SET_COLOR = 7;</code>
           */
          SET_COLOR(7),
          /**
           * <code>CANDLE = 8;</code>
           */
          CANDLE(8),
          UNRECOGNIZED(-1),;

          /**
           * <code>UNKNOWN = 0;</code>
           */
          public static final int UNKNOWN_VALUE = 0;
          /**
           * <code>OFF = 1;</code>
           */
          public static final int OFF_VALUE = 1;
          /**
           * <code>BREATHE = 2;</code>
           */
          public static final int BREATHE_VALUE = 2;
          /**
           * <code>FADE_ON = 3;</code>
           */
          public static final int FADE_ON_VALUE = 3;
          /**
           * <code>FADE_OFF = 4;</code>
           */
          public static final int FADE_OFF_VALUE = 4;
          /**
           * <code>NORMAL_BLINK = 5;</code>
           */
          public static final int NORMAL_BLINK_VALUE = 5;
          /**
           * <code>FAST_BLINK = 6;</code>
           */
          public static final int FAST_BLINK_VALUE = 6;
          /**
           * <code>SET_COLOR = 7;</code>
           */
          public static final int SET_COLOR_VALUE = 7;
          /**
           * <code>CANDLE = 8;</code>
           */
          public static final int CANDLE_VALUE = 8;
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LEDModes> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LEDModes>() {
                public LEDModes findValueByNumber(int number) {
                    return LEDModes.forNumber(number);
                }
            };
          private static final LEDModes[] VALUES = values();
          private final int value;

          private LEDModes(int value) {
              this.value = value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @Deprecated
          public static LEDModes valueOf(int value) {
              return forNumber(value);
          }

          public static LEDModes forNumber(int value) {
              switch (value) {
          case 0: return UNKNOWN;
          case 1: return OFF;
          case 2: return BREATHE;
          case 3: return FADE_ON;
          case 4: return FADE_OFF;
          case 5: return NORMAL_BLINK;
          case 6: return FAST_BLINK;
          case 7: return SET_COLOR;
                  case 8:
                      return CANDLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LEDModes>
          internalGetValueMap() {
          return internalValueMap;
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
          return LEDMode.getDescriptor().getEnumTypes().get(0);
      }

          public static LEDModes valueOf(
                  com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
              if (desc.getType() != getDescriptor()) {
                  throw new IllegalArgumentException(
                          "EnumValueDescriptor is not for this type.");
              }
              if (desc.getIndex() == -1) {
                  return UNRECOGNIZED;
              }
              return VALUES[desc.getIndex()];
          }

          public final int getNumber() {
              if (this == UNRECOGNIZED) {
                  throw new IllegalArgumentException(
                          "Can't get the number of an unknown enum value.");
              }
              return value;
          }

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
              return getDescriptor().getValues().get(ordinal());
          }

          public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      // @@protoc_insertion_point(enum_scope:LEDMode.LEDModes)
      }

      /**
       * Protobuf type {@code LEDMode}
       */
      public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LEDMode)
        LEDModeOrBuilder {
      // Construct using Hub.LEDMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

          public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hub.internal_static_LEDMode_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
          return Hub.internal_static_LEDMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LEDMode.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
      }

          public Builder clear() {
              super.clear();
              return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
              return Hub.internal_static_LEDMode_descriptor;
          }

          public LEDMode getDefaultInstanceForType() {
              return LEDMode.getDefaultInstance();
          }

          public LEDMode build() {
              LEDMode result = buildPartial();
              if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LEDMode buildPartial() {
        LEDMode result = new LEDMode(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
          return (Builder) super.clone();
      }

          public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
          }

          public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
              return (Builder) super.clearField(field);
          }

          public Builder clearOneof(
                  com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return (Builder) super.clearOneof(oneof);
          }

          public Builder setRepeatedField(
                  com.google.protobuf.Descriptors.FieldDescriptor field,
                  int index, Object value) {
              return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

          public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof LEDMode) {
                  return mergeFrom((LEDMode) other);
              } else {
                  super.mergeFrom(other);
                  return this;
              }
          }

          public Builder mergeFrom(LEDMode other) {
              if (other == LEDMode.getDefaultInstance()) return this;
              onChanged();
              return this;
          }

          public final boolean isInitialized() {
              return true;
          }

          public Builder mergeFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
              LEDMode parsedMessage = null;
              try {
                  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  parsedMessage = (LEDMode) e.getUnfinishedMessage();
                  throw e.unwrapIOException();
              } finally {
                  if (parsedMessage != null) {
                      mergeFrom(parsedMessage);
                  }
              }
              return this;
          }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:LEDMode)
    }

  }

  /**
   * Protobuf type {@code LEDColor}
   */
  public  static final class LEDColor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LEDColor)
          LEDColorOrBuilder {
      private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:LEDColor)
    private static final LEDColor DEFAULT_INSTANCE;
      private static final com.google.protobuf.Parser<LEDColor>
              PARSER = new com.google.protobuf.AbstractParser<LEDColor>() {
      public LEDColor parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return new LEDColor(input, extensionRegistry);
      }
      };

      static {
          DEFAULT_INSTANCE = new LEDColor();
      }

      private byte memoizedIsInitialized = -1;

      // Use LEDColor.newBuilder() to construct.
      private LEDColor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
      }

      private LEDColor() {
      }

      private LEDColor(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          try {
              boolean done = false;
              while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                      case 0:
                          done = true;
                          break;
                      default: {
                          if (!input.skipField(tag)) {
                              done = true;
                          }
                          break;
                      }
                  }
              }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                      e).setUnfinishedMessage(this);
          } finally {
              makeExtensionsImmutable();
          }
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
          return Hub.internal_static_LEDColor_descriptor;
      }

      public static LEDColor parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static LEDColor parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static LEDColor parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static LEDColor parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static LEDColor parseFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static LEDColor parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static LEDColor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
      }

      public static LEDColor parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static LEDColor parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static LEDColor parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(LEDColor prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public static LEDColor getDefaultInstance() {
          return DEFAULT_INSTANCE;
      }

      public static com.google.protobuf.Parser<LEDColor> parser() {
          return PARSER;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
          return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
          return Hub.internal_static_LEDColor_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                          LEDColor.class, Builder.class);
      }

      public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
              throws java.io.IOException {
      }

      public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          memoizedSize = size;
          return size;
      }

      @Override
      public boolean equals(final Object obj) {
          if (obj == this) {
              return true;
          }
          if (!(obj instanceof LEDColor)) {
              return super.equals(obj);
          }
          LEDColor other = (LEDColor) obj;

          boolean result = true;
          return result;
      }

      @Override
      public int hashCode() {
          if (memoizedHashCode != 0) {
              return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptorForType().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
      }

      public Builder newBuilderForType() {
          return newBuilder();
      }

      public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
                  ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
    }

    @Override
    public com.google.protobuf.Parser<LEDColor> getParserForType() {
      return PARSER;
    }

    public LEDColor getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

      /**
       * Protobuf enum {@code LEDColor.LEDColors}
       */
      public enum LEDColors
              implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>UNKNOWN = 0;</code>
           */
          UNKNOWN(0),
          /**
           * <code>BLUE = 1;</code>
           */
          BLUE(1),
          /**
           * <code>GREEN = 2;</code>
           */
          GREEN(2),
          /**
           * <code>RED = 3;</code>
           */
          RED(3),
          /**
           * <code>WHITE = 4;</code>
           */
          WHITE(4),
          /**
           * <code>YELLOW = 5;</code>
           */
          YELLOW(5),
          /**
           * <code>PINK = 6;</code>
           */
          PINK(6),
          /**
           * <code>AMBER = 7;</code>
           */
          AMBER(7),
          /**
           * <code>RGB = 8;</code>
           */
          RGB(8),
          UNRECOGNIZED(-1),;

          /**
           * <code>UNKNOWN = 0;</code>
           */
          public static final int UNKNOWN_VALUE = 0;
          /**
           * <code>BLUE = 1;</code>
           */
          public static final int BLUE_VALUE = 1;
          /**
           * <code>GREEN = 2;</code>
           */
          public static final int GREEN_VALUE = 2;
          /**
           * <code>RED = 3;</code>
           */
          public static final int RED_VALUE = 3;
          /**
           * <code>WHITE = 4;</code>
           */
          public static final int WHITE_VALUE = 4;
          /**
           * <code>YELLOW = 5;</code>
           */
          public static final int YELLOW_VALUE = 5;
          /**
           * <code>PINK = 6;</code>
           */
          public static final int PINK_VALUE = 6;
          /**
           * <code>AMBER = 7;</code>
           */
          public static final int AMBER_VALUE = 7;
          /**
           * <code>RGB = 8;</code>
           */
          public static final int RGB_VALUE = 8;
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LEDColors> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LEDColors>() {
                public LEDColors findValueByNumber(int number) {
                    return LEDColors.forNumber(number);
                }
            };
          private static final LEDColors[] VALUES = values();
          private final int value;

          private LEDColors(int value) {
              this.value = value;
          }

          /**
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @Deprecated
          public static LEDColors valueOf(int value) {
              return forNumber(value);
          }

          public static LEDColors forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return BLUE;
          case 2: return GREEN;
            case 3:
                return RED;
            case 4:
                return WHITE;
            case 5:
                return YELLOW;
            case 6:
                return PINK;
            case 7:
                return AMBER;
            case 8:
                return RGB;
            default:
                return null;
        }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<LEDColors>
          internalGetValueMap() {
              return internalValueMap;
          }

          public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
              return LEDColor.getDescriptor().getEnumTypes().get(0);
          }

          public static LEDColors valueOf(
                  com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
              if (desc.getType() != getDescriptor()) {
                  throw new IllegalArgumentException(
                          "EnumValueDescriptor is not for this type.");
              }
              if (desc.getIndex() == -1) {
                  return UNRECOGNIZED;
              }
              return VALUES[desc.getIndex()];
          }

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
          return getDescriptor();
      }

      // @@protoc_insertion_point(enum_scope:LEDColor.LEDColors)
    }

    /**
     * Protobuf type {@code LEDColor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:LEDColor)
            LEDColorOrBuilder {
        // Construct using Hub.LEDColor.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Hub.internal_static_LEDColor_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hub.internal_static_LEDColor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LEDColor.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
          return this;
      }

        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return Hub.internal_static_LEDColor_descriptor;
        }

        public LEDColor getDefaultInstanceForType() {
            return LEDColor.getDefaultInstance();
        }

        public LEDColor build() {
            LEDColor result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        public LEDColor buildPartial() {
        LEDColor result = new LEDColor(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
          return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }

        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof LEDColor) {
                return mergeFrom((LEDColor) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(LEDColor other) {
            if (other == LEDColor.getDefaultInstance()) return this;
            onChanged();
            return this;
        }

        public final boolean isInitialized() {
            return true;
        }

        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            LEDColor parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (LEDColor) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:LEDColor)
    }

  }

  /**
   * Protobuf type {@code MusicState}
   */
  public  static final class MusicState extends
      com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:MusicState)
          MusicStateOrBuilder {
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:MusicState)
    private static final MusicState DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<MusicState>
        PARSER = new com.google.protobuf.AbstractParser<MusicState>() {
      public MusicState parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return new MusicState(input, extensionRegistry);
      }
    };

      static {
          DEFAULT_INSTANCE = new MusicState();
      }

      private byte memoizedIsInitialized = -1;

      // Use MusicState.newBuilder() to construct.
      private MusicState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
      }

      private MusicState() {
      }

      private MusicState(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          try {
              boolean done = false;
              while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                      case 0:
                          done = true;
                          break;
                      default: {
                          if (!input.skipField(tag)) {
                              done = true;
                          }
                          break;
                      }
                  }
              }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                      e).setUnfinishedMessage(this);
          } finally {
              makeExtensionsImmutable();
          }
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
          return Hub.internal_static_MusicState_descriptor;
      }

      public static MusicState parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static MusicState parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static MusicState parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
      }

      public static MusicState parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
      }

      public static MusicState parseFrom(java.io.InputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static MusicState parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static MusicState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
      }

      public static MusicState parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }

      public static MusicState parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input);
      }

      public static MusicState parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
                  .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(MusicState prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      public static MusicState getDefaultInstance() {
          return DEFAULT_INSTANCE;
      }

      public static com.google.protobuf.Parser<MusicState> parser() {
          return PARSER;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
          return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
          return Hub.internal_static_MusicState_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                          MusicState.class, Builder.class);
      }

      public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MusicState)) {
        return super.equals(obj);
      }
      MusicState other = (MusicState) obj;

      boolean result = true;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

      public Builder newBuilderForType() {
          return newBuilder();
      }

      public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
                  ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
              BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
      }

      @Override
    public com.google.protobuf.Parser<MusicState> getParserForType() {
      return PARSER;
    }

    public MusicState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * Protobuf enum {@code MusicState.MusicStates}
     */
    public enum MusicStates
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>STOP = 1;</code>
       */
      STOP(1),
      /**
       * <code>PLAY = 2;</code>
       */
      PLAY(2),
      /**
       * <code>PAUSE = 3;</code>
       */
      PAUSE(3),
        UNRECOGNIZED(-1),;

        /**
         * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>STOP = 1;</code>
       */
      public static final int STOP_VALUE = 1;
        /**
         * <code>PLAY = 2;</code>
       */
      public static final int PLAY_VALUE = 2;
      /**
       * <code>PAUSE = 3;</code>
       */
      public static final int PAUSE_VALUE = 3;
      private static final com.google.protobuf.Internal.EnumLiteMap<
              MusicStates> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<MusicStates>() {
                  public MusicStates findValueByNumber(int number) {
                      return MusicStates.forNumber(number);
                  }
              };
        private static final MusicStates[] VALUES = values();
        private final int value;

        private MusicStates(int value) {
            this.value = value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MusicStates valueOf(int value) {
        return forNumber(value);
      }

      public static MusicStates forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return STOP;
          case 2: return PLAY;
          case 3:
              return PAUSE;
            default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MusicStates>
          internalGetValueMap() {
          return internalValueMap;
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
          return MusicState.getDescriptor().getEnumTypes().get(0);
      }

        public static MusicStates valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
      }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
      }

      // @@protoc_insertion_point(enum_scope:MusicState.MusicStates)
    }

    /**
     * Protobuf type {@code MusicState}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MusicState)
        MusicStateOrBuilder {
      // Construct using Hub.MusicState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Hub.internal_static_MusicState_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Hub.internal_static_MusicState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MusicState.class, Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
          return Hub.internal_static_MusicState_descriptor;
      }

      public MusicState getDefaultInstanceForType() {
        return MusicState.getDefaultInstance();
      }

        public MusicState build() {
            MusicState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MusicState buildPartial() {
        MusicState result = new MusicState(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
          return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MusicState) {
          return mergeFrom((MusicState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MusicState other) {
        if (other == MusicState.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MusicState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MusicState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MusicState)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
