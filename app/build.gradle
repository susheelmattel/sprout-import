buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'kotlin-android-extensions'

def getDate() {
    new Date().format('yyMMdd')
}


android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    def RELEASE_TARGET = "RELEASE_TARGET"
    String mqttDevSproutlingUrl = "mqtt-us.sproutlingcloud.com:443";
    //TODO:change the release url once ready
    String mqttReleaseSproutlingUrl = "mqtt-us.sproutlingcloud.com:443";
    String mqttDevFPUrl = "mqtt-cn.sproutlingcloud.com:443";
    //TODO:change the release url once ready
    String mqttReleaseFPUrl = "mqtt-cn.sproutlingcloud.com:443";

    String serverDevSproutlingUrl = "https://api-dev-us.sproutlingcloud.com/";
    //TODO:change the release url once ready
    String serverReleaseSproutlingUrl = "https://api-dev-us.sproutlingcloud.com/";
    String serverDevFPUrl = "https://api-dev-cn.sproutlingcloud.com/";
    //TODO:change the release url once ready
    String serverReleaseFPUrl = "https://api-dev-cn.sproutlingcloud.com/";

    int version = getDate().toInteger();

    defaultConfig {
        applicationId "com.sproutling"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode version
        versionName "1.2.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
    }
    signingConfigs {
        debug {
            storeFile file('../androidDebug.jks')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        sproutling {
            storeFile file('../androidRelease.jks')
            storePassword 'sproutlingApp'
            keyAlias 'Sproutling'
            keyPassword 'sproutlingApp'
        }
    }
    dexOptions {
        javaMaxHeapSize "3g"
        preDexLibraries true
    }
    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.sproutling
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            buildConfigField "String", "MIX_PANEL_API_KEY", "\"adedc00a95506fdf7da562318f06fe6f\""
            buildConfigField "String", "HELP_SHIFT_API_KEY", "\"28dff63a377677c32fb2960bf2bad542\""
            buildConfigField "String", "HELP_SHIFT_DOMAIN", "\"sproutling.helpshift.com\""
            buildConfigField "String", "HELP_SHIFT_APP_ID", "\"sproutling_platform_20170109195959722-7ad1871519c77a0\""
        }
        adhoc {
            debuggable true
            versionNameSuffix "-beta" + "-build-" + getDate()
            signingConfig signingConfigs.sproutling
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            buildConfigField "String", "MIX_PANEL_API_KEY", "\"2688b414f30e5dd108c6c8bf51f1ae5f\""
            buildConfigField "String", "HELP_SHIFT_API_KEY", "\"28dff63a377677c32fb2960bf2bad542\""
            buildConfigField "String", "HELP_SHIFT_DOMAIN", "\"sproutling.helpshift.com\""
            buildConfigField "String", "HELP_SHIFT_APP_ID", "\"sproutling_platform_20170109195959722-7ad1871519c77a0\""
            matchingFallbacks = ['debug', 'release']
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            buildConfigField "String", "MIX_PANEL_API_KEY", "\"2688b414f30e5dd108c6c8bf51f1ae5f\""
            buildConfigField "String", "HELP_SHIFT_API_KEY", "\"28dff63a377677c32fb2960bf2bad542\""
            buildConfigField "String", "HELP_SHIFT_DOMAIN", "\"sproutling.helpshift.com\""
            buildConfigField "String", "HELP_SHIFT_APP_ID", "\"sproutling_platform_20170109195959722-7ad1871519c77a0\""
        }

    }
    dataBinding {
        enabled true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        disable "ResourceType"
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
//    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES.txt'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/NOTICE.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/notice.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/dependencies.txt'
//        exclude 'META-INF/LGPL2.1'
//    }
    flavorDimensions "app", "environment", "mqtt"
    productFlavors {
        sproutling {
            dimension "app"
            applicationId 'com.fisherprice.sproutling'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            resValue "string", "BAIDU_DATA_STORE", "com.sproutling.bdpush"
            ext {
                devServer = serverDevSproutlingUrl
                prodServer = serverReleaseSproutlingUrl
                devMqtt = mqttDevSproutlingUrl
                prodMqtt = mqttReleaseSproutlingUrl
            }
        }
        fisherPriceChina {
            dimension "app"
            applicationId 'com.sproutling.fp'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            resValue "string", "BAIDU_DATA_STORE", "com.sproutling.fp.bdpush"
            ext {
                devServer = serverDevFPUrl
                prodServer = serverReleaseFPUrl
                devMqtt = mqttDevFPUrl
                prodMqtt = mqttReleaseFPUrl
            }
        }
        sproutlingBeta {
            dimension "app"
            applicationId 'com.sproutling'
            resValue "string", "PUSH_API_KEY", "Mh5qssymOcAEOG0rBbSEgesi"
            resValue "string", "BAIDU_DATA_STORE", "com.sproutling.bdpush"
            ext {
                devServer = serverDevSproutlingUrl
                prodServer = serverReleaseSproutlingUrl
                devMqtt = mqttDevSproutlingUrl
                prodMqtt = mqttReleaseSproutlingUrl
            }
        }

        devServer {
            dimension "environment"
        }
        prodServer {
            dimension "environment"
        }

        devMqtt {
            dimension "mqtt"
        }
        prodMqtt {
            dimension "mqtt"
        }

        applicationVariants.all { variant ->
            def flavors = variant.productFlavors
            // flavorDimensions "app" -> 0, "environment" -> 1
            def app = flavors[0]
            def environment = flavors[1]
            def mqtt = flavors[2]

            variant.buildConfigField "String", "SERVER_URL", "\"${app[environment.name]}\""
            variant.buildConfigField "String", "MQTT_URL", "\"${app[mqtt.name]}\""
        }
    }
}

repositories {
    //mavenCentral()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://maven.google.com' }
}

setProperty("FirebaseServiceAccountFilePath", rootProject.rootDir.absolutePath + FirebaseServiceAccountFilePath)

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':states')
    implementation project(':pipeline')
    implementation project(':apiservices')
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:mediarouter-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:support-v13:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.google.android.gms:play-services:11.0.4'
    //implementation "com.google.android.gms:play-services-analytics:$play_services_version"
    implementation "com.google.android.gms:play-services-gcm:16.0.0"
    implementation "com.google.android.gms:play-services-base:16.0.1"
    implementation "com.google.android.gms:play-services-location:16.0.0"
    implementation "com.google.android.gms:play-services-places:16.0.0"

    api 'com.github.clans:fab:1.6.4'
    implementation "com.android.support:recyclerview-v7:26.1.0"
    implementation "com.android.support:cardview-v7:26.1.0"
    api 'com.github.PhilJay:MPAndroidChart:v3.0.1'
    api 'org.greenrobot:eventbus:3.1.1'
    api 'com.googlecode.libphonenumber:libphonenumber:8.9.16'
    api 'com.google.zxing:core:3.2.1'
    api 'com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.1'
    api 'com.auth0.android:jwtdecode:1.1.0'
    api 'com.github.bumptech.glide:glide:3.7.0'
    api 'com.google.protobuf:protobuf-java:3.5.1'
    testImplementation 'junit:junit:4.12'
    api "com.mixpanel.android:mixpanel-android:4.+"

    api "com.google.firebase:firebase-messaging:17.3.4"
    implementation 'com.google.firebase:firebase-crash:16.2.1'

    api 'com.airbnb.android:lottie:2.2.0'

    api 'com.helpshift:android-helpshift-aar:4.9.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.2.51"
    // Anko Commons
    api "org.jetbrains.anko:anko-commons:0.10.2"
    api 'com.wx.wheelview:wheelview:1.3.3'

    com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true

}
apply plugin: 'com.google.gms.google-services'